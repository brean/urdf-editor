var b_=Object.defineProperty;var S_=(s,e,t)=>e in s?b_(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var $t=(s,e,t)=>S_(s,typeof e!="symbol"?e+"":e,t);import{c as M_,w as w_}from"./pGOW0POZ.js";import{b as tp,e as E_,c as yt,a as nt,t as Wn}from"./DtFAECNJ.js";import{t as T_,w as np,P as ip,G as A_,aP as C_,x as rp,L as R_,R as P_,M as I_,O as D_,z as ll,m as Er,aQ as Bg,i as Ee,ao as U_,g as zg,ak as Vd,a6 as L_,aB as Mi,aJ as ni,u as Pt,d as gi,al as xt,p as Xn,f as it,a as Yn,l as jr,c as sp,q as Pr,r as op,s as cn,av as Cs}from"./DopaX_Wj.js";import{r as fr,i as jt,b as ap,s as Ir,p as He,e as Us,d as Xa,c as kt}from"./Gw33-jyE.js";import{s as Bi}from"./nDVZk2G-.js";import{g as dd,w as ei,d as Ya,a as pr,o as Gg,r as Hd}from"./CrUCUHk1.js";import"./D4XkMC5l.js";import{e as ua,i as da}from"./CZD43fho.js";function mh(s,e,t=!1,i=!1,n=!1){var r=s,o="";T_(()=>{var a=A_;if(o===(o=e()??"")){np&&ip();return}if(a.nodes_start!==null&&(C_(a.nodes_start,a.nodes_end),a.nodes_start=a.nodes_end=null),o!==""){if(np){rp.data;for(var l=ip(),c=l;l!==null&&(l.nodeType!==8||l.data!=="");)c=l,l=R_(l);if(l===null)throw P_(),I_;tp(rp,c),r=D_(l);return}var h=o+"";t?h=`<svg>${h}</svg>`:i&&(h=`<math>${h}</math>`);var u=E_(h);if((t||i)&&(u=ll(u)),tp(ll(u),u.lastChild),t||i)for(;ll(u);)r.before(ll(u));else r.before(u)}})}function oR(s,e){M_(window,["resize"],()=>w_(()=>e(window[s])))}function N_(s){Er(s,s.v+1)}function O_(s){let e=0,t=L_(0),i;return()=>{Bg()&&(Ee(t),U_(()=>(e===0&&(i=zg(()=>s(()=>N_(t)))),e+=1,()=>{Vd().then(()=>{e-=1,e===0&&(i==null||i(),i=void 0)})})))}}function F_(s){let e;const t=O_(n=>{let r=!1;const o=s.subscribe(a=>{e=a,r&&n()});return r=!0,o});function i(){return Bg()?(t(),e):dd(s)}return"set"in s?{get current(){return i()},set current(n){s.set(n)}}:{get current(){return i()}}}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const qa="175",Di={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Rs={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Vg=0,fd=1,Hg=2,k_=3,B_=0,Wd=1,fa=2,rr=3,ur=0,ti=1,vi=2,Cr=0,Ls=1,pd=2,md=3,gd=4,Wg=5,qr=100,Xg=101,Yg=102,qg=103,jg=104,Zg=200,Kg=201,Jg=202,Qg=203,wc=204,Ec=205,$g=206,e0=207,t0=208,n0=209,i0=210,r0=211,s0=212,o0=213,a0=214,Tc=0,Ac=1,Cc=2,Bs=3,Rc=4,Pc=5,Ic=6,Dc=7,ja=0,l0=1,c0=2,lr=0,h0=1,u0=2,d0=3,f0=4,p0=5,Uc=6,m0=7,vd="attached",g0="detached",gh=300,Dr=301,Kr=302,Ta=303,Aa=304,Uo=306,ji=1e3,yi=1001,Ca=1002,Vn=1003,Xd=1004,z_=1004,bo=1005,G_=1005,bn=1006,pa=1007,V_=1007,Zi=1008,H_=1008,dr=1009,Yd=1010,qd=1011,To=1012,vh=1013,Ur=1014,xi=1015,Lo=1016,_h=1017,yh=1018,Ao=1020,jd=35902,Zd=1021,Kd=1022,ci=1023,Jd=1024,Qd=1025,Co=1026,Ro=1027,xh=1028,Za=1029,$d=1030,bh=1031,W_=1032,Sh=1033,ma=33776,ga=33777,va=33778,_a=33779,Lc=35840,Nc=35841,Oc=35842,Fc=35843,kc=36196,Bc=37492,zc=37496,Gc=37808,Vc=37809,Hc=37810,Wc=37811,Xc=37812,Yc=37813,qc=37814,jc=37815,Zc=37816,Kc=37817,Jc=37818,Qc=37819,$c=37820,eh=37821,ya=36492,th=36494,nh=36495,ef=36283,ih=36284,rh=36285,sh=36286,v0=2200,_0=2201,y0=2202,Ra=2300,oh=2301,mc=2302,Ps=2400,Is=2401,Pa=2402,Mh=2500,tf=2501,X_=0,Y_=1,q_=2,x0=3200,nf=3201,j_=3202,Z_=3203,Jr=0,b0=1,Sr="",on="srgb",zs="srgb-linear",Ia="linear",qt="srgb",K_=0,ws=7680,J_=7681,Q_=7682,$_=7683,ey=34055,ty=34056,ny=5386,iy=512,ry=513,sy=514,oy=515,ay=516,ly=517,cy=518,_d=519,S0=512,M0=513,w0=514,rf=515,E0=516,T0=517,A0=518,C0=519,Da=35044,hy=35048,uy=35040,dy=35045,fy=35049,py=35041,my=35046,gy=35050,vy=35042,_y="100",yd="300 es",Ki=2e3,Ua=2001,yy={COMPUTE:"compute",RENDER:"render"};class mr{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){const i=this._listeners;return i===void 0?!1:i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){const i=this._listeners;if(i===void 0)return;const n=i[e];if(n!==void 0){const r=n.indexOf(t);r!==-1&&n.splice(r,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const i=t[e.type];if(i!==void 0){e.target=this;const n=i.slice(0);for(let r=0,o=n.length;r<o;r++)n[r].call(this,e);e.target=null}}}const Zn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let lp=1234567;const Ns=Math.PI/180,Po=180/Math.PI;function Ui(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Zn[s&255]+Zn[s>>8&255]+Zn[s>>16&255]+Zn[s>>24&255]+"-"+Zn[e&255]+Zn[e>>8&255]+"-"+Zn[e>>16&15|64]+Zn[e>>24&255]+"-"+Zn[t&63|128]+Zn[t>>8&255]+"-"+Zn[t>>16&255]+Zn[t>>24&255]+Zn[i&255]+Zn[i>>8&255]+Zn[i>>16&255]+Zn[i>>24&255]).toLowerCase()}function wt(s,e,t){return Math.max(e,Math.min(t,s))}function sf(s,e){return(s%e+e)%e}function xy(s,e,t,i,n){return i+(s-e)*(n-i)/(t-e)}function by(s,e,t){return s!==e?(t-s)/(e-s):0}function xa(s,e,t){return(1-t)*s+t*e}function Sy(s,e,t,i){return xa(s,e,1-Math.exp(-t*i))}function My(s,e=1){return e-Math.abs(sf(s,e*2)-e)}function wy(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function Ey(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function Ty(s,e){return s+Math.floor(Math.random()*(e-s+1))}function Ay(s,e){return s+Math.random()*(e-s)}function Cy(s){return s*(.5-Math.random())}function Ry(s){s!==void 0&&(lp=s);let e=lp+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Py(s){return s*Ns}function Iy(s){return s*Po}function Dy(s){return(s&s-1)===0&&s!==0}function Uy(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function Ly(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function Ny(s,e,t,i,n){const r=Math.cos,o=Math.sin,a=r(t/2),l=o(t/2),c=r((e+i)/2),h=o((e+i)/2),u=r((e-i)/2),d=o((e-i)/2),f=r((i-e)/2),p=o((i-e)/2);switch(n){case"XYX":s.set(a*h,l*u,l*d,a*c);break;case"YZY":s.set(l*d,a*h,l*u,a*c);break;case"ZXZ":s.set(l*u,l*d,a*h,a*c);break;case"XZX":s.set(a*h,l*p,l*f,a*c);break;case"YXY":s.set(l*f,a*h,l*p,a*c);break;case"ZYZ":s.set(l*p,l*f,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}function li(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function Ct(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const or={DEG2RAD:Ns,RAD2DEG:Po,generateUUID:Ui,clamp:wt,euclideanModulo:sf,mapLinear:xy,inverseLerp:by,lerp:xa,damp:Sy,pingpong:My,smoothstep:wy,smootherstep:Ey,randInt:Ty,randFloat:Ay,randFloatSpread:Cy,seededRandom:Ry,degToRad:Py,radToDeg:Iy,isPowerOfTwo:Dy,ceilPowerOfTwo:Uy,floorPowerOfTwo:Ly,setQuaternionFromProperEuler:Ny,normalize:Ct,denormalize:li};class ge{constructor(e=0,t=0){ge.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=wt(this.x,e.x,t.x),this.y=wt(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=wt(this.x,e,t),this.y=wt(this.y,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(wt(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(wt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*i-o*n+e.x,this.y=r*n+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Mt{constructor(e,t,i,n,r,o,a,l,c){Mt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,n,r,o,a,l,c)}set(e,t,i,n,r,o,a,l,c){const h=this.elements;return h[0]=e,h[1]=n,h[2]=a,h[3]=t,h[4]=r,h[5]=l,h[6]=i,h[7]=o,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,r=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],h=i[4],u=i[7],d=i[2],f=i[5],p=i[8],v=n[0],m=n[3],g=n[6],y=n[1],x=n[4],_=n[7],E=n[2],w=n[5],M=n[8];return r[0]=o*v+a*y+l*E,r[3]=o*m+a*x+l*w,r[6]=o*g+a*_+l*M,r[1]=c*v+h*y+u*E,r[4]=c*m+h*x+u*w,r[7]=c*g+h*_+u*M,r[2]=d*v+f*y+p*E,r[5]=d*m+f*x+p*w,r[8]=d*g+f*_+p*M,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8];return t*o*h-t*a*c-i*r*h+i*a*l+n*r*c-n*o*l}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=h*o-a*c,d=a*l-h*r,f=c*r-o*l,p=t*u+i*d+n*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const v=1/p;return e[0]=u*v,e[1]=(n*c-h*i)*v,e[2]=(a*i-n*o)*v,e[3]=d*v,e[4]=(h*t-n*l)*v,e[5]=(n*r-a*t)*v,e[6]=f*v,e[7]=(i*l-c*t)*v,e[8]=(o*t-i*r)*v,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-n*c,n*l,-n*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(ou.makeScale(e,t)),this}rotate(e){return this.premultiply(ou.makeRotation(-e)),this}translate(e,t){return this.premultiply(ou.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const ou=new Mt;function R0(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const Oy={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function So(s,e){return new Oy[s](e)}function La(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function P0(){const s=La("canvas");return s.style.display="block",s}const cp={};function gc(s){s in cp||(cp[s]=!0,console.warn(s))}function Fy(s,e,t){return new Promise(function(i,n){function r(){switch(s.clientWaitSync(e,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:n();break;case s.TIMEOUT_EXPIRED:setTimeout(r,t);break;default:i()}}setTimeout(r,t)})}function ky(s){const e=s.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function By(s){const e=s.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const hp=new Mt().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),up=new Mt().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function zy(){const s={enabled:!0,workingColorSpace:zs,spaces:{},convert:function(n,r,o){return this.enabled===!1||r===o||!r||!o||(this.spaces[r].transfer===qt&&(n.r=Rr(n.r),n.g=Rr(n.g),n.b=Rr(n.b)),this.spaces[r].primaries!==this.spaces[o].primaries&&(n.applyMatrix3(this.spaces[r].toXYZ),n.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===qt&&(n.r=Eo(n.r),n.g=Eo(n.g),n.b=Eo(n.b))),n},fromWorkingColorSpace:function(n,r){return this.convert(n,this.workingColorSpace,r)},toWorkingColorSpace:function(n,r){return this.convert(n,r,this.workingColorSpace)},getPrimaries:function(n){return this.spaces[n].primaries},getTransfer:function(n){return n===Sr?Ia:this.spaces[n].transfer},getLuminanceCoefficients:function(n,r=this.workingColorSpace){return n.fromArray(this.spaces[r].luminanceCoefficients)},define:function(n){Object.assign(this.spaces,n)},_getMatrix:function(n,r,o){return n.copy(this.spaces[r].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(n){return this.spaces[n].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(n=this.workingColorSpace){return this.spaces[n].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],i=[.3127,.329];return s.define({[zs]:{primaries:e,whitePoint:i,transfer:Ia,toXYZ:hp,fromXYZ:up,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:on},outputColorSpaceConfig:{drawingBufferColorSpace:on}},[on]:{primaries:e,whitePoint:i,transfer:qt,toXYZ:hp,fromXYZ:up,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:on}}}),s}const Dt=zy();function Rr(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Eo(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let $s;class I0{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let i;if(e instanceof HTMLCanvasElement)i=e;else{$s===void 0&&($s=La("canvas")),$s.width=e.width,$s.height=e.height;const n=$s.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),i=$s}return i.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=La("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const n=i.getImageData(0,0,e.width,e.height),r=n.data;for(let o=0;o<r.length;o++)r[o]=Rr(r[o]/255)*255;return i.putImageData(n,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(Rr(t[i]/255)*255):t[i]=Rr(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let Gy=0;class Zr{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Gy++}),this.uuid=Ui(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let r;if(Array.isArray(n)){r=[];for(let o=0,a=n.length;o<a;o++)n[o].isDataTexture?r.push(au(n[o].image)):r.push(au(n[o]))}else r=au(n);i.url=r}return t||(e.images[this.uuid]=i),i}}function au(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?I0.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Vy=0;class fn extends mr{constructor(e=fn.DEFAULT_IMAGE,t=fn.DEFAULT_MAPPING,i=yi,n=yi,r=bn,o=Zi,a=ci,l=dr,c=fn.DEFAULT_ANISOTROPY,h=Sr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Vy++}),this.uuid=Ui(),this.name="",this.source=new Zr(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new ge(0,0),this.repeat=new ge(1,1),this.center=new ge(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Mt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==gh)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ji:e.x=e.x-Math.floor(e.x);break;case yi:e.x=e.x<0?0:1;break;case Ca:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ji:e.y=e.y-Math.floor(e.y);break;case yi:e.y=e.y<0?0:1;break;case Ca:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}fn.DEFAULT_IMAGE=null;fn.DEFAULT_MAPPING=gh;fn.DEFAULT_ANISOTROPY=1;class Rt{constructor(e=0,t=0,i=0,n=1){Rt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*n+o[12]*r,this.y=o[1]*t+o[5]*i+o[9]*n+o[13]*r,this.z=o[2]*t+o[6]*i+o[10]*n+o[14]*r,this.w=o[3]*t+o[7]*i+o[11]*n+o[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,r;const l=e.elements,c=l[0],h=l[4],u=l[8],d=l[1],f=l[5],p=l[9],v=l[2],m=l[6],g=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-v)<.01&&Math.abs(p-m)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+v)<.1&&Math.abs(p+m)<.1&&Math.abs(c+f+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const x=(c+1)/2,_=(f+1)/2,E=(g+1)/2,w=(h+d)/4,M=(u+v)/4,T=(p+m)/4;return x>_&&x>E?x<.01?(i=0,n=.707106781,r=.707106781):(i=Math.sqrt(x),n=w/i,r=M/i):_>E?_<.01?(i=.707106781,n=0,r=.707106781):(n=Math.sqrt(_),i=w/n,r=T/n):E<.01?(i=.707106781,n=.707106781,r=0):(r=Math.sqrt(E),i=M/r,n=T/r),this.set(i,n,r,t),this}let y=Math.sqrt((m-p)*(m-p)+(u-v)*(u-v)+(d-h)*(d-h));return Math.abs(y)<.001&&(y=1),this.x=(m-p)/y,this.y=(u-v)/y,this.z=(d-h)/y,this.w=Math.acos((c+f+g-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=wt(this.x,e.x,t.x),this.y=wt(this.y,e.y,t.y),this.z=wt(this.z,e.z,t.z),this.w=wt(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=wt(this.x,e,t),this.y=wt(this.y,e,t),this.z=wt(this.z,e,t),this.w=wt(this.w,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(wt(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class wh extends mr{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Rt(0,0,e,t),this.scissorTest=!1,this.viewport=new Rt(0,0,e,t);const n={width:e,height:t,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:bn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const r=new fn(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);r.flipY=!1,r.generateMipmaps=i.generateMipmaps,r.internalFormat=i.internalFormat,this.textures=[];const o=i.count;for(let a=0;a<o;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,r=this.textures.length;n<r;n++)this.textures[n].image.width=e,this.textures[n].image.height=t,this.textures[n].image.depth=i;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,i=e.textures.length;t<i;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const n=Object.assign({},e.textures[t].image);this.textures[t].source=new Zr(n)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class zi extends wh{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class Ka extends fn{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Vn,this.minFilter=Vn,this.wrapR=yi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Hy extends zi{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isWebGLArrayRenderTarget=!0,this.depth=i,this.texture=new Ka(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class Eh extends fn{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Vn,this.minFilter=Vn,this.wrapR=yi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Wy extends zi{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isWebGL3DRenderTarget=!0,this.depth=i,this.texture=new Eh(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class Gt{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,r,o,a){let l=i[n+0],c=i[n+1],h=i[n+2],u=i[n+3];const d=r[o+0],f=r[o+1],p=r[o+2],v=r[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=v;return}if(u!==v||l!==d||c!==f||h!==p){let m=1-a;const g=l*d+c*f+h*p+u*v,y=g>=0?1:-1,x=1-g*g;if(x>Number.EPSILON){const E=Math.sqrt(x),w=Math.atan2(E,g*y);m=Math.sin(m*w)/E,a=Math.sin(a*w)/E}const _=a*y;if(l=l*m+d*_,c=c*m+f*_,h=h*m+p*_,u=u*m+v*_,m===1-a){const E=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=E,c*=E,h*=E,u*=E}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,i,n,r,o){const a=i[n],l=i[n+1],c=i[n+2],h=i[n+3],u=r[o],d=r[o+1],f=r[o+2],p=r[o+3];return e[t]=a*p+h*u+l*f-c*d,e[t+1]=l*p+h*d+c*u-a*f,e[t+2]=c*p+h*f+a*d-l*u,e[t+3]=h*p-a*u-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,n=e._y,r=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),h=a(n/2),u=a(r/2),d=l(i/2),f=l(n/2),p=l(r/2);switch(o){case"XYZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"YZX":this._x=d*h*u+c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u-d*f*p;break;case"XZY":this._x=d*h*u-c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],r=t[8],o=t[1],a=t[5],l=t[9],c=t[2],h=t[6],u=t[10],d=i+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-l)*f,this._y=(r-c)*f,this._z=(o-n)*f}else if(i>a&&i>u){const f=2*Math.sqrt(1+i-a-u);this._w=(h-l)/f,this._x=.25*f,this._y=(n+o)/f,this._z=(r+c)/f}else if(a>u){const f=2*Math.sqrt(1+a-i-u);this._w=(r-c)/f,this._x=(n+o)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+u-i-a);this._w=(o-n)/f,this._x=(r+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(wt(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,r=e._z,o=e._w,a=t._x,l=t._y,c=t._z,h=t._w;return this._x=i*h+o*a+n*c-r*l,this._y=n*h+o*l+r*a-i*c,this._z=r*h+o*c+i*l-n*a,this._w=o*h-i*a-n*l-r*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,n=this._y,r=this._z,o=this._w;let a=o*e._w+i*e._x+n*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=n,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*i+t*this._x,this._y=f*n+t*this._y,this._z=f*r+t*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),u=Math.sin((1-t)*h)/c,d=Math.sin(t*h)/c;return this._w=o*u+this._w*d,this._x=i*u+this._x*d,this._y=n*u+this._y*d,this._z=r*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),r=Math.sqrt(i);return this.set(n*Math.sin(e),n*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class D{constructor(e=0,t=0,i=0){D.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(dp.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(dp.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*n,this.y=r[1]*t+r[4]*i+r[7]*n,this.z=r[2]*t+r[5]*i+r[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,r=e.elements,o=1/(r[3]*t+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*n+r[12])*o,this.y=(r[1]*t+r[5]*i+r[9]*n+r[13])*o,this.z=(r[2]*t+r[6]*i+r[10]*n+r[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,r=e.x,o=e.y,a=e.z,l=e.w,c=2*(o*n-a*i),h=2*(a*t-r*n),u=2*(r*i-o*t);return this.x=t+l*c+o*u-a*h,this.y=i+l*h+a*c-r*u,this.z=n+l*u+r*h-o*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n,this.y=r[1]*t+r[5]*i+r[9]*n,this.z=r[2]*t+r[6]*i+r[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=wt(this.x,e.x,t.x),this.y=wt(this.y,e.y,t.y),this.z=wt(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=wt(this.x,e,t),this.y=wt(this.y,e,t),this.z=wt(this.z,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(wt(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,r=e.z,o=t.x,a=t.y,l=t.z;return this.x=n*l-r*a,this.y=r*o-i*l,this.z=i*a-n*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return lu.copy(this).projectOnVector(e),this.sub(lu)}reflect(e){return this.sub(lu.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(wt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const lu=new D,dp=new Gt;class Sn{constructor(e=new D(1/0,1/0,1/0),t=new D(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(Xi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(Xi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Xi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const r=i.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=r.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,Xi):Xi.fromBufferAttribute(r,o),Xi.applyMatrix4(e.matrixWorld),this.expandByPoint(Xi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),cl.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),cl.copy(i.boundingBox)),cl.applyMatrix4(e.matrixWorld),this.union(cl)}const n=e.children;for(let r=0,o=n.length;r<o;r++)this.expandByObject(n[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Xi),Xi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Ho),hl.subVectors(this.max,Ho),eo.subVectors(e.a,Ho),to.subVectors(e.b,Ho),no.subVectors(e.c,Ho),Fr.subVectors(to,eo),kr.subVectors(no,to),os.subVectors(eo,no);let t=[0,-Fr.z,Fr.y,0,-kr.z,kr.y,0,-os.z,os.y,Fr.z,0,-Fr.x,kr.z,0,-kr.x,os.z,0,-os.x,-Fr.y,Fr.x,0,-kr.y,kr.x,0,-os.y,os.x,0];return!cu(t,eo,to,no,hl)||(t=[1,0,0,0,1,0,0,0,1],!cu(t,eo,to,no,hl))?!1:(ul.crossVectors(Fr,kr),t=[ul.x,ul.y,ul.z],cu(t,eo,to,no,hl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Xi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Xi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(gr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),gr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),gr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),gr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),gr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),gr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),gr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),gr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(gr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const gr=[new D,new D,new D,new D,new D,new D,new D,new D],Xi=new D,cl=new Sn,eo=new D,to=new D,no=new D,Fr=new D,kr=new D,os=new D,Ho=new D,hl=new D,ul=new D,as=new D;function cu(s,e,t,i,n){for(let r=0,o=s.length-3;r<=o;r+=3){as.fromArray(s,r);const a=n.x*Math.abs(as.x)+n.y*Math.abs(as.y)+n.z*Math.abs(as.z),l=e.dot(as),c=t.dot(as),h=i.dot(as);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const Xy=new Sn,Wo=new D,hu=new D;class Tn{constructor(e=new D,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):Xy.setFromPoints(e).getCenter(i);let n=0;for(let r=0,o=e.length;r<o;r++)n=Math.max(n,i.distanceToSquared(e[r]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Wo.subVectors(e,this.center);const t=Wo.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.addScaledVector(Wo,n/i),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(hu.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Wo.copy(e.center).add(hu)),this.expandByPoint(Wo.copy(e.center).sub(hu))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const vr=new D,uu=new D,dl=new D,Br=new D,du=new D,fl=new D,fu=new D;class Qr{constructor(e=new D,t=new D(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,vr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=vr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(vr.copy(this.origin).addScaledVector(this.direction,t),vr.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){uu.copy(e).add(t).multiplyScalar(.5),dl.copy(t).sub(e).normalize(),Br.copy(this.origin).sub(uu);const r=e.distanceTo(t)*.5,o=-this.direction.dot(dl),a=Br.dot(this.direction),l=-Br.dot(dl),c=Br.lengthSq(),h=Math.abs(1-o*o);let u,d,f,p;if(h>0)if(u=o*l-a,d=o*a-l,p=r*h,u>=0)if(d>=-p)if(d<=p){const v=1/h;u*=v,d*=v,f=u*(u+o*d+2*a)+d*(o*u+d+2*l)+c}else d=r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;else d=-r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;else d<=-p?(u=Math.max(0,-(-o*r+a)),d=u>0?-r:Math.min(Math.max(-r,-l),r),f=-u*u+d*(d+2*l)+c):d<=p?(u=0,d=Math.min(Math.max(-r,-l),r),f=d*(d+2*l)+c):(u=Math.max(0,-(o*r+a)),d=u>0?r:Math.min(Math.max(-r,-l),r),f=-u*u+d*(d+2*l)+c);else d=o>0?-r:r,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,u),n&&n.copy(uu).addScaledVector(dl,d),f}intersectSphere(e,t){vr.subVectors(e.center,this.origin);const i=vr.dot(this.direction),n=vr.dot(vr)-i*i,r=e.radius*e.radius;if(n>r)return null;const o=Math.sqrt(r-n),a=i-o,l=i+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,r,o,a,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return c>=0?(i=(e.min.x-d.x)*c,n=(e.max.x-d.x)*c):(i=(e.max.x-d.x)*c,n=(e.min.x-d.x)*c),h>=0?(r=(e.min.y-d.y)*h,o=(e.max.y-d.y)*h):(r=(e.max.y-d.y)*h,o=(e.min.y-d.y)*h),i>o||r>n||((r>i||isNaN(i))&&(i=r),(o<n||isNaN(n))&&(n=o),u>=0?(a=(e.min.z-d.z)*u,l=(e.max.z-d.z)*u):(a=(e.max.z-d.z)*u,l=(e.min.z-d.z)*u),i>l||a>n)||((a>i||i!==i)&&(i=a),(l<n||n!==n)&&(n=l),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return this.intersectBox(e,vr)!==null}intersectTriangle(e,t,i,n,r){du.subVectors(t,e),fl.subVectors(i,e),fu.crossVectors(du,fl);let o=this.direction.dot(fu),a;if(o>0){if(n)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Br.subVectors(this.origin,e);const l=a*this.direction.dot(fl.crossVectors(Br,fl));if(l<0)return null;const c=a*this.direction.dot(du.cross(Br));if(c<0||l+c>o)return null;const h=-a*Br.dot(fu);return h<0?null:this.at(h/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class rt{constructor(e,t,i,n,r,o,a,l,c,h,u,d,f,p,v,m){rt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,n,r,o,a,l,c,h,u,d,f,p,v,m)}set(e,t,i,n,r,o,a,l,c,h,u,d,f,p,v,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=n,g[1]=r,g[5]=o,g[9]=a,g[13]=l,g[2]=c,g[6]=h,g[10]=u,g[14]=d,g[3]=f,g[7]=p,g[11]=v,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new rt().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/io.setFromMatrixColumn(e,0).length(),r=1/io.setFromMatrixColumn(e,1).length(),o=1/io.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*r,t[5]=i[5]*r,t[6]=i[6]*r,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,n=e.y,r=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(n),c=Math.sin(n),h=Math.cos(r),u=Math.sin(r);if(e.order==="XYZ"){const d=o*h,f=o*u,p=a*h,v=a*u;t[0]=l*h,t[4]=-l*u,t[8]=c,t[1]=f+p*c,t[5]=d-v*c,t[9]=-a*l,t[2]=v-d*c,t[6]=p+f*c,t[10]=o*l}else if(e.order==="YXZ"){const d=l*h,f=l*u,p=c*h,v=c*u;t[0]=d+v*a,t[4]=p*a-f,t[8]=o*c,t[1]=o*u,t[5]=o*h,t[9]=-a,t[2]=f*a-p,t[6]=v+d*a,t[10]=o*l}else if(e.order==="ZXY"){const d=l*h,f=l*u,p=c*h,v=c*u;t[0]=d-v*a,t[4]=-o*u,t[8]=p+f*a,t[1]=f+p*a,t[5]=o*h,t[9]=v-d*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const d=o*h,f=o*u,p=a*h,v=a*u;t[0]=l*h,t[4]=p*c-f,t[8]=d*c+v,t[1]=l*u,t[5]=v*c+d,t[9]=f*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const d=o*l,f=o*c,p=a*l,v=a*c;t[0]=l*h,t[4]=v-d*u,t[8]=p*u+f,t[1]=u,t[5]=o*h,t[9]=-a*h,t[2]=-c*h,t[6]=f*u+p,t[10]=d-v*u}else if(e.order==="XZY"){const d=o*l,f=o*c,p=a*l,v=a*c;t[0]=l*h,t[4]=-u,t[8]=c*h,t[1]=d*u+v,t[5]=o*h,t[9]=f*u-p,t[2]=p*u-f,t[6]=a*h,t[10]=v*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Yy,e,qy)}lookAt(e,t,i){const n=this.elements;return Ci.subVectors(e,t),Ci.lengthSq()===0&&(Ci.z=1),Ci.normalize(),zr.crossVectors(i,Ci),zr.lengthSq()===0&&(Math.abs(i.z)===1?Ci.x+=1e-4:Ci.z+=1e-4,Ci.normalize(),zr.crossVectors(i,Ci)),zr.normalize(),pl.crossVectors(Ci,zr),n[0]=zr.x,n[4]=pl.x,n[8]=Ci.x,n[1]=zr.y,n[5]=pl.y,n[9]=Ci.y,n[2]=zr.z,n[6]=pl.z,n[10]=Ci.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,r=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],h=i[1],u=i[5],d=i[9],f=i[13],p=i[2],v=i[6],m=i[10],g=i[14],y=i[3],x=i[7],_=i[11],E=i[15],w=n[0],M=n[4],T=n[8],S=n[12],b=n[1],U=n[5],I=n[9],B=n[13],G=n[2],j=n[6],N=n[10],ee=n[14],W=n[3],Y=n[7],Q=n[11],z=n[15];return r[0]=o*w+a*b+l*G+c*W,r[4]=o*M+a*U+l*j+c*Y,r[8]=o*T+a*I+l*N+c*Q,r[12]=o*S+a*B+l*ee+c*z,r[1]=h*w+u*b+d*G+f*W,r[5]=h*M+u*U+d*j+f*Y,r[9]=h*T+u*I+d*N+f*Q,r[13]=h*S+u*B+d*ee+f*z,r[2]=p*w+v*b+m*G+g*W,r[6]=p*M+v*U+m*j+g*Y,r[10]=p*T+v*I+m*N+g*Q,r[14]=p*S+v*B+m*ee+g*z,r[3]=y*w+x*b+_*G+E*W,r[7]=y*M+x*U+_*j+E*Y,r[11]=y*T+x*I+_*N+E*Q,r[15]=y*S+x*B+_*ee+E*z,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],r=e[12],o=e[1],a=e[5],l=e[9],c=e[13],h=e[2],u=e[6],d=e[10],f=e[14],p=e[3],v=e[7],m=e[11],g=e[15];return p*(+r*l*u-n*c*u-r*a*d+i*c*d+n*a*f-i*l*f)+v*(+t*l*f-t*c*d+r*o*d-n*o*f+n*c*h-r*l*h)+m*(+t*c*u-t*a*f-r*o*u+i*o*f+r*a*h-i*c*h)+g*(-n*a*h-t*l*u+t*a*d+n*o*u-i*o*d+i*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=e[9],d=e[10],f=e[11],p=e[12],v=e[13],m=e[14],g=e[15],y=u*m*c-v*d*c+v*l*f-a*m*f-u*l*g+a*d*g,x=p*d*c-h*m*c-p*l*f+o*m*f+h*l*g-o*d*g,_=h*v*c-p*u*c+p*a*f-o*v*f-h*a*g+o*u*g,E=p*u*l-h*v*l-p*a*d+o*v*d+h*a*m-o*u*m,w=t*y+i*x+n*_+r*E;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/w;return e[0]=y*M,e[1]=(v*d*r-u*m*r-v*n*f+i*m*f+u*n*g-i*d*g)*M,e[2]=(a*m*r-v*l*r+v*n*c-i*m*c-a*n*g+i*l*g)*M,e[3]=(u*l*r-a*d*r-u*n*c+i*d*c+a*n*f-i*l*f)*M,e[4]=x*M,e[5]=(h*m*r-p*d*r+p*n*f-t*m*f-h*n*g+t*d*g)*M,e[6]=(p*l*r-o*m*r-p*n*c+t*m*c+o*n*g-t*l*g)*M,e[7]=(o*d*r-h*l*r+h*n*c-t*d*c-o*n*f+t*l*f)*M,e[8]=_*M,e[9]=(p*u*r-h*v*r-p*i*f+t*v*f+h*i*g-t*u*g)*M,e[10]=(o*v*r-p*a*r+p*i*c-t*v*c-o*i*g+t*a*g)*M,e[11]=(h*a*r-o*u*r-h*i*c+t*u*c+o*i*f-t*a*f)*M,e[12]=E*M,e[13]=(h*v*n-p*u*n+p*i*d-t*v*d-h*i*m+t*u*m)*M,e[14]=(p*a*n-o*v*n-p*i*l+t*v*l+o*i*m-t*a*m)*M,e[15]=(o*u*n-h*a*n+h*i*l-t*u*l-o*i*d+t*a*d)*M,this}scale(e){const t=this.elements,i=e.x,n=e.y,r=e.z;return t[0]*=i,t[4]*=n,t[8]*=r,t[1]*=i,t[5]*=n,t[9]*=r,t[2]*=i,t[6]*=n,t[10]*=r,t[3]*=i,t[7]*=n,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),r=1-i,o=e.x,a=e.y,l=e.z,c=r*o,h=r*a;return this.set(c*o+i,c*a-n*l,c*l+n*a,0,c*a+n*l,h*a+i,h*l-n*o,0,c*l-n*a,h*l+n*o,r*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,r,o){return this.set(1,i,r,0,e,1,o,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,r=t._x,o=t._y,a=t._z,l=t._w,c=r+r,h=o+o,u=a+a,d=r*c,f=r*h,p=r*u,v=o*h,m=o*u,g=a*u,y=l*c,x=l*h,_=l*u,E=i.x,w=i.y,M=i.z;return n[0]=(1-(v+g))*E,n[1]=(f+_)*E,n[2]=(p-x)*E,n[3]=0,n[4]=(f-_)*w,n[5]=(1-(d+g))*w,n[6]=(m+y)*w,n[7]=0,n[8]=(p+x)*M,n[9]=(m-y)*M,n[10]=(1-(d+v))*M,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let r=io.set(n[0],n[1],n[2]).length();const o=io.set(n[4],n[5],n[6]).length(),a=io.set(n[8],n[9],n[10]).length();this.determinant()<0&&(r=-r),e.x=n[12],e.y=n[13],e.z=n[14],Yi.copy(this);const c=1/r,h=1/o,u=1/a;return Yi.elements[0]*=c,Yi.elements[1]*=c,Yi.elements[2]*=c,Yi.elements[4]*=h,Yi.elements[5]*=h,Yi.elements[6]*=h,Yi.elements[8]*=u,Yi.elements[9]*=u,Yi.elements[10]*=u,t.setFromRotationMatrix(Yi),i.x=r,i.y=o,i.z=a,this}makePerspective(e,t,i,n,r,o,a=Ki){const l=this.elements,c=2*r/(t-e),h=2*r/(i-n),u=(t+e)/(t-e),d=(i+n)/(i-n);let f,p;if(a===Ki)f=-(o+r)/(o-r),p=-2*o*r/(o-r);else if(a===Ua)f=-o/(o-r),p=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=h,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,i,n,r,o,a=Ki){const l=this.elements,c=1/(t-e),h=1/(i-n),u=1/(o-r),d=(t+e)*c,f=(i+n)*h;let p,v;if(a===Ki)p=(o+r)*u,v=-2*u;else if(a===Ua)p=r*u,v=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=v,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const io=new D,Yi=new rt,Yy=new D(0,0,0),qy=new D(1,1,1),zr=new D,pl=new D,Ci=new D,fp=new rt,pp=new Gt;class bi{constructor(e=0,t=0,i=0,n=bi.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const n=e.elements,r=n[0],o=n[4],a=n[8],l=n[1],c=n[5],h=n[9],u=n[2],d=n[6],f=n[10];switch(t){case"XYZ":this._y=Math.asin(wt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-wt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(wt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-wt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(wt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-wt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return fp.makeRotationFromQuaternion(e),this.setFromRotationMatrix(fp,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return pp.setFromEuler(this),this.setFromQuaternion(pp,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}bi.DEFAULT_ORDER="XYZ";class Th{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let jy=0;const mp=new D,ro=new Gt,_r=new rt,ml=new D,Xo=new D,Zy=new D,Ky=new Gt,gp=new D(1,0,0),vp=new D(0,1,0),_p=new D(0,0,1),yp={type:"added"},Jy={type:"removed"},so={type:"childadded",child:null},pu={type:"childremoved",child:null};class Ut extends mr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:jy++}),this.uuid=Ui(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ut.DEFAULT_UP.clone();const e=new D,t=new bi,i=new Gt,n=new D(1,1,1);function r(){i.setFromEuler(t,!1)}function o(){t.setFromQuaternion(i,void 0,!1)}t._onChange(r),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new rt},normalMatrix:{value:new Mt}}),this.matrix=new rt,this.matrixWorld=new rt,this.matrixAutoUpdate=Ut.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Ut.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Th,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ro.setFromAxisAngle(e,t),this.quaternion.multiply(ro),this}rotateOnWorldAxis(e,t){return ro.setFromAxisAngle(e,t),this.quaternion.premultiply(ro),this}rotateX(e){return this.rotateOnAxis(gp,e)}rotateY(e){return this.rotateOnAxis(vp,e)}rotateZ(e){return this.rotateOnAxis(_p,e)}translateOnAxis(e,t){return mp.copy(e).applyQuaternion(this.quaternion),this.position.add(mp.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(gp,e)}translateY(e){return this.translateOnAxis(vp,e)}translateZ(e){return this.translateOnAxis(_p,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(_r.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?ml.copy(e):ml.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),Xo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_r.lookAt(Xo,ml,this.up):_r.lookAt(ml,Xo,this.up),this.quaternion.setFromRotationMatrix(_r),n&&(_r.extractRotation(n.matrixWorld),ro.setFromRotationMatrix(_r),this.quaternion.premultiply(ro.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(yp),so.child=e,this.dispatchEvent(so),so.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Jy),pu.child=e,this.dispatchEvent(pu),pu.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),_r.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),_r.multiply(e.parent.matrixWorld)),e.applyMatrix4(_r),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(yp),so.child=e,this.dispatchEvent(so),so.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const o=this.children[i].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const n=this.children;for(let r=0,o=n.length;r<o;r++)n[r].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Xo,e,Zy),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Xo,Ky,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const n=this.children;for(let r=0,o=n.length;r<o;r++)n[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(n.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),this.boundingBox!==null&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()}));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=r(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];r(e.shapes,u)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(e.materials,this.material[l]));n.material=a}else n.material=r(e.materials,this.material);if(this.children.length>0){n.children=[];for(let a=0;a<this.children.length;a++)n.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];n.animations.push(r(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),h=o(e.images),u=o(e.shapes),d=o(e.skeletons),f=o(e.animations),p=o(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),h.length>0&&(i.images=h),u.length>0&&(i.shapes=u),d.length>0&&(i.skeletons=d),f.length>0&&(i.animations=f),p.length>0&&(i.nodes=p)}return i.object=n,i;function o(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const n=e.children[i];this.add(n.clone())}return this}}Ut.DEFAULT_UP=new D(0,1,0);Ut.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ut.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const qi=new D,yr=new D,mu=new D,xr=new D,oo=new D,ao=new D,xp=new D,gu=new D,vu=new D,_u=new D,yu=new Rt,xu=new Rt,bu=new Rt;class _i{constructor(e=new D,t=new D,i=new D){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),qi.subVectors(e,t),n.cross(qi);const r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(e,t,i,n,r){qi.subVectors(n,t),yr.subVectors(i,t),mu.subVectors(e,t);const o=qi.dot(qi),a=qi.dot(yr),l=qi.dot(mu),c=yr.dot(yr),h=yr.dot(mu),u=o*c-a*a;if(u===0)return r.set(0,0,0),null;const d=1/u,f=(c*l-a*h)*d,p=(o*h-a*l)*d;return r.set(1-f-p,p,f)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,xr)===null?!1:xr.x>=0&&xr.y>=0&&xr.x+xr.y<=1}static getInterpolation(e,t,i,n,r,o,a,l){return this.getBarycoord(e,t,i,n,xr)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(r,xr.x),l.addScaledVector(o,xr.y),l.addScaledVector(a,xr.z),l)}static getInterpolatedAttribute(e,t,i,n,r,o){return yu.setScalar(0),xu.setScalar(0),bu.setScalar(0),yu.fromBufferAttribute(e,t),xu.fromBufferAttribute(e,i),bu.fromBufferAttribute(e,n),o.setScalar(0),o.addScaledVector(yu,r.x),o.addScaledVector(xu,r.y),o.addScaledVector(bu,r.z),o}static isFrontFacing(e,t,i,n){return qi.subVectors(i,t),yr.subVectors(e,t),qi.cross(yr).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return qi.subVectors(this.c,this.b),yr.subVectors(this.a,this.b),qi.cross(yr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return _i.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return _i.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,n,r){return _i.getInterpolation(e,this.a,this.b,this.c,t,i,n,r)}containsPoint(e){return _i.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return _i.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,n=this.b,r=this.c;let o,a;oo.subVectors(n,i),ao.subVectors(r,i),gu.subVectors(e,i);const l=oo.dot(gu),c=ao.dot(gu);if(l<=0&&c<=0)return t.copy(i);vu.subVectors(e,n);const h=oo.dot(vu),u=ao.dot(vu);if(h>=0&&u<=h)return t.copy(n);const d=l*u-h*c;if(d<=0&&l>=0&&h<=0)return o=l/(l-h),t.copy(i).addScaledVector(oo,o);_u.subVectors(e,r);const f=oo.dot(_u),p=ao.dot(_u);if(p>=0&&f<=p)return t.copy(r);const v=f*c-l*p;if(v<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(i).addScaledVector(ao,a);const m=h*p-f*u;if(m<=0&&u-h>=0&&f-p>=0)return xp.subVectors(r,n),a=(u-h)/(u-h+(f-p)),t.copy(n).addScaledVector(xp,a);const g=1/(m+v+d);return o=v*g,a=d*g,t.copy(i).addScaledVector(oo,o).addScaledVector(ao,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const D0={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Gr={h:0,s:0,l:0},gl={h:0,s:0,l:0};function Su(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class Be{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const n=e;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=on){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Dt.toWorkingColorSpace(this,t),this}setRGB(e,t,i,n=Dt.workingColorSpace){return this.r=e,this.g=t,this.b=i,Dt.toWorkingColorSpace(this,n),this}setHSL(e,t,i,n=Dt.workingColorSpace){if(e=sf(e,1),t=wt(t,0,1),i=wt(i,0,1),t===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+t):i+t-i*t,o=2*i-r;this.r=Su(o,r,e+1/3),this.g=Su(o,r,e),this.b=Su(o,r,e-1/3)}return Dt.toWorkingColorSpace(this,n),this}setStyle(e,t=on){function i(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=n[1],a=n[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=n[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=on){const i=D0[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Rr(e.r),this.g=Rr(e.g),this.b=Rr(e.b),this}copyLinearToSRGB(e){return this.r=Eo(e.r),this.g=Eo(e.g),this.b=Eo(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=on){return Dt.fromWorkingColorSpace(Kn.copy(this),e),Math.round(wt(Kn.r*255,0,255))*65536+Math.round(wt(Kn.g*255,0,255))*256+Math.round(wt(Kn.b*255,0,255))}getHexString(e=on){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Dt.workingColorSpace){Dt.fromWorkingColorSpace(Kn.copy(this),t);const i=Kn.r,n=Kn.g,r=Kn.b,o=Math.max(i,n,r),a=Math.min(i,n,r);let l,c;const h=(a+o)/2;if(a===o)l=0,c=0;else{const u=o-a;switch(c=h<=.5?u/(o+a):u/(2-o-a),o){case i:l=(n-r)/u+(n<r?6:0);break;case n:l=(r-i)/u+2;break;case r:l=(i-n)/u+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=Dt.workingColorSpace){return Dt.fromWorkingColorSpace(Kn.copy(this),t),e.r=Kn.r,e.g=Kn.g,e.b=Kn.b,e}getStyle(e=on){Dt.fromWorkingColorSpace(Kn.copy(this),e);const t=Kn.r,i=Kn.g,n=Kn.b;return e!==on?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(n*255)})`}offsetHSL(e,t,i){return this.getHSL(Gr),this.setHSL(Gr.h+e,Gr.s+t,Gr.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(Gr),e.getHSL(gl);const i=xa(Gr.h,gl.h,t),n=xa(Gr.s,gl.s,t),r=xa(Gr.l,gl.l,t);return this.setHSL(i,n,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,n=this.b,r=e.elements;return this.r=r[0]*t+r[3]*i+r[6]*n,this.g=r[1]*t+r[4]*i+r[7]*n,this.b=r[2]*t+r[5]*i+r[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Kn=new Be;Be.NAMES=D0;let Qy=0;class ii extends mr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Qy++}),this.uuid=Ui(),this.name="",this.type="Material",this.blending=Ls,this.side=ur,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=wc,this.blendDst=Ec,this.blendEquation=qr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Be(0,0,0),this.blendAlpha=0,this.depthFunc=Bs,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=_d,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ws,this.stencilZFail=ws,this.stencilZPass=ws,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Ls&&(i.blending=this.blending),this.side!==ur&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==wc&&(i.blendSrc=this.blendSrc),this.blendDst!==Ec&&(i.blendDst=this.blendDst),this.blendEquation!==qr&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==Bs&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==_d&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==ws&&(i.stencilFail=this.stencilFail),this.stencilZFail!==ws&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==ws&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function n(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(t){const r=n(e.textures),o=n(e.images);r.length>0&&(i.textures=r),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const n=t.length;i=new Array(n);for(let r=0;r!==n;++r)i[r]=t[r].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Ln extends ii{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Be(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new bi,this.combine=ja,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Mr=$y();function $y(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),i=new Uint32Array(512),n=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(i[l]=0,i[l|256]=32768,n[l]=24,n[l|256]=24):c<-14?(i[l]=1024>>-c-14,i[l|256]=1024>>-c-14|32768,n[l]=-c-1,n[l|256]=-c-1):c<=15?(i[l]=c+15<<10,i[l|256]=c+15<<10|32768,n[l]=13,n[l|256]=13):c<128?(i[l]=31744,i[l|256]=64512,n[l]=24,n[l|256]=24):(i[l]=31744,i[l|256]=64512,n[l]=13,n[l|256]=13)}const r=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;(c&8388608)===0;)c<<=1,h-=8388608;c&=-8388609,h+=947912704,r[l]=c|h}for(let l=1024;l<2048;++l)r[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:i,shiftTable:n,mantissaTable:r,exponentTable:o,offsetTable:a}}function mi(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=wt(s,-65504,65504),Mr.floatView[0]=s;const e=Mr.uint32View[0],t=e>>23&511;return Mr.baseTable[t]+((e&8388607)>>Mr.shiftTable[t])}function sa(s){const e=s>>10;return Mr.uint32View[0]=Mr.mantissaTable[Mr.offsetTable[e]+(s&1023)]+Mr.exponentTable[e],Mr.floatView[0]}class ex{static toHalfFloat(e){return mi(e)}static fromHalfFloat(e){return sa(e)}}const wn=new D,vl=new ge;let tx=0;class Tt{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:tx++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=Da,this.updateRanges=[],this.gpuType=xi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)vl.fromBufferAttribute(this,t),vl.applyMatrix3(e),this.setXY(t,vl.x,vl.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)wn.fromBufferAttribute(this,t),wn.applyMatrix3(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)wn.fromBufferAttribute(this,t),wn.applyMatrix4(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)wn.fromBufferAttribute(this,t),wn.applyNormalMatrix(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)wn.fromBufferAttribute(this,t),wn.transformDirection(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=li(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=Ct(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=li(t,this.array)),t}setX(e,t){return this.normalized&&(t=Ct(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=li(t,this.array)),t}setY(e,t){return this.normalized&&(t=Ct(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=li(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Ct(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=li(t,this.array)),t}setW(e,t){return this.normalized&&(t=Ct(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=Ct(t,this.array),i=Ct(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=Ct(t,this.array),i=Ct(i,this.array),n=Ct(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e*=this.itemSize,this.normalized&&(t=Ct(t,this.array),i=Ct(i,this.array),n=Ct(n,this.array),r=Ct(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Da&&(e.usage=this.usage),e}}class nx extends Tt{constructor(e,t,i){super(new Int8Array(e),t,i)}}class ix extends Tt{constructor(e,t,i){super(new Uint8Array(e),t,i)}}class rx extends Tt{constructor(e,t,i){super(new Uint8ClampedArray(e),t,i)}}class sx extends Tt{constructor(e,t,i){super(new Int16Array(e),t,i)}}class of extends Tt{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class ox extends Tt{constructor(e,t,i){super(new Int32Array(e),t,i)}}class af extends Tt{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class ax extends Tt{constructor(e,t,i){super(new Uint16Array(e),t,i),this.isFloat16BufferAttribute=!0}getX(e){let t=sa(this.array[e*this.itemSize]);return this.normalized&&(t=li(t,this.array)),t}setX(e,t){return this.normalized&&(t=Ct(t,this.array)),this.array[e*this.itemSize]=mi(t),this}getY(e){let t=sa(this.array[e*this.itemSize+1]);return this.normalized&&(t=li(t,this.array)),t}setY(e,t){return this.normalized&&(t=Ct(t,this.array)),this.array[e*this.itemSize+1]=mi(t),this}getZ(e){let t=sa(this.array[e*this.itemSize+2]);return this.normalized&&(t=li(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Ct(t,this.array)),this.array[e*this.itemSize+2]=mi(t),this}getW(e){let t=sa(this.array[e*this.itemSize+3]);return this.normalized&&(t=li(t,this.array)),t}setW(e,t){return this.normalized&&(t=Ct(t,this.array)),this.array[e*this.itemSize+3]=mi(t),this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=Ct(t,this.array),i=Ct(i,this.array)),this.array[e+0]=mi(t),this.array[e+1]=mi(i),this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=Ct(t,this.array),i=Ct(i,this.array),n=Ct(n,this.array)),this.array[e+0]=mi(t),this.array[e+1]=mi(i),this.array[e+2]=mi(n),this}setXYZW(e,t,i,n,r){return e*=this.itemSize,this.normalized&&(t=Ct(t,this.array),i=Ct(i,this.array),n=Ct(n,this.array),r=Ct(r,this.array)),this.array[e+0]=mi(t),this.array[e+1]=mi(i),this.array[e+2]=mi(n),this.array[e+3]=mi(r),this}}class je extends Tt{constructor(e,t,i){super(new Float32Array(e),t,i)}}let lx=0;const Fi=new rt,Mu=new Ut,lo=new D,Ri=new Sn,Yo=new Sn,Un=new D;class _t extends mr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:lx++}),this.uuid=Ui(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(R0(e)?af:of)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const r=new Mt().getNormalMatrix(e);i.applyNormalMatrix(r),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(e),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Fi.makeRotationFromQuaternion(e),this.applyMatrix4(Fi),this}rotateX(e){return Fi.makeRotationX(e),this.applyMatrix4(Fi),this}rotateY(e){return Fi.makeRotationY(e),this.applyMatrix4(Fi),this}rotateZ(e){return Fi.makeRotationZ(e),this.applyMatrix4(Fi),this}translate(e,t,i){return Fi.makeTranslation(e,t,i),this.applyMatrix4(Fi),this}scale(e,t,i){return Fi.makeScale(e,t,i),this.applyMatrix4(Fi),this}lookAt(e){return Mu.lookAt(e),Mu.updateMatrix(),this.applyMatrix4(Mu.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(lo).negate(),this.translate(lo.x,lo.y,lo.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const i=[];for(let n=0,r=e.length;n<r;n++){const o=e[n];i.push(o.x,o.y,o.z||0)}this.setAttribute("position",new je(i,3))}else{const i=Math.min(e.length,t.count);for(let n=0;n<i;n++){const r=e[n];t.setXYZ(n,r.x,r.y,r.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Sn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){const r=t[i];Ri.setFromBufferAttribute(r),this.morphTargetsRelative?(Un.addVectors(this.boundingBox.min,Ri.min),this.boundingBox.expandByPoint(Un),Un.addVectors(this.boundingBox.max,Ri.max),this.boundingBox.expandByPoint(Un)):(this.boundingBox.expandByPoint(Ri.min),this.boundingBox.expandByPoint(Ri.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Tn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new D,1/0);return}if(e){const i=this.boundingSphere.center;if(Ri.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const a=t[r];Yo.setFromBufferAttribute(a),this.morphTargetsRelative?(Un.addVectors(Ri.min,Yo.min),Ri.expandByPoint(Un),Un.addVectors(Ri.max,Yo.max),Ri.expandByPoint(Un)):(Ri.expandByPoint(Yo.min),Ri.expandByPoint(Yo.max))}Ri.getCenter(i);let n=0;for(let r=0,o=e.count;r<o;r++)Un.fromBufferAttribute(e,r),n=Math.max(n,i.distanceToSquared(Un));if(t)for(let r=0,o=t.length;r<o;r++){const a=t[r],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)Un.fromBufferAttribute(a,c),l&&(lo.fromBufferAttribute(e,c),Un.add(lo)),n=Math.max(n,i.distanceToSquared(Un))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,n=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Tt(new Float32Array(4*i.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let T=0;T<i.count;T++)a[T]=new D,l[T]=new D;const c=new D,h=new D,u=new D,d=new ge,f=new ge,p=new ge,v=new D,m=new D;function g(T,S,b){c.fromBufferAttribute(i,T),h.fromBufferAttribute(i,S),u.fromBufferAttribute(i,b),d.fromBufferAttribute(r,T),f.fromBufferAttribute(r,S),p.fromBufferAttribute(r,b),h.sub(c),u.sub(c),f.sub(d),p.sub(d);const U=1/(f.x*p.y-p.x*f.y);isFinite(U)&&(v.copy(h).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(U),m.copy(u).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(U),a[T].add(v),a[S].add(v),a[b].add(v),l[T].add(m),l[S].add(m),l[b].add(m))}let y=this.groups;y.length===0&&(y=[{start:0,count:e.count}]);for(let T=0,S=y.length;T<S;++T){const b=y[T],U=b.start,I=b.count;for(let B=U,G=U+I;B<G;B+=3)g(e.getX(B+0),e.getX(B+1),e.getX(B+2))}const x=new D,_=new D,E=new D,w=new D;function M(T){E.fromBufferAttribute(n,T),w.copy(E);const S=a[T];x.copy(S),x.sub(E.multiplyScalar(E.dot(S))).normalize(),_.crossVectors(w,S);const U=_.dot(l[T])<0?-1:1;o.setXYZW(T,x.x,x.y,x.z,U)}for(let T=0,S=y.length;T<S;++T){const b=y[T],U=b.start,I=b.count;for(let B=U,G=U+I;B<G;B+=3)M(e.getX(B+0)),M(e.getX(B+1)),M(e.getX(B+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Tt(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let d=0,f=i.count;d<f;d++)i.setXYZ(d,0,0,0);const n=new D,r=new D,o=new D,a=new D,l=new D,c=new D,h=new D,u=new D;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),v=e.getX(d+1),m=e.getX(d+2);n.fromBufferAttribute(t,p),r.fromBufferAttribute(t,v),o.fromBufferAttribute(t,m),h.subVectors(o,r),u.subVectors(n,r),h.cross(u),a.fromBufferAttribute(i,p),l.fromBufferAttribute(i,v),c.fromBufferAttribute(i,m),a.add(h),l.add(h),c.add(h),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(v,l.x,l.y,l.z),i.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)n.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),h.subVectors(o,r),u.subVectors(n,r),h.cross(u),i.setXYZ(d+0,h.x,h.y,h.z),i.setXYZ(d+1,h.x,h.y,h.z),i.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Un.fromBufferAttribute(e,t),Un.normalize(),e.setXYZ(t,Un.x,Un.y,Un.z)}toNonIndexed(){function e(a,l){const c=a.array,h=a.itemSize,u=a.normalized,d=new c.constructor(l.length*h);let f=0,p=0;for(let v=0,m=l.length;v<m;v++){a.isInterleavedBufferAttribute?f=l[v]*a.data.stride+a.offset:f=l[v]*h;for(let g=0;g<h;g++)d[p++]=c[f++]}return new Tt(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new _t,i=this.index.array,n=this.attributes;for(const a in n){const l=n[a],c=e(l,i);t.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let h=0,u=c.length;h<u;h++){const d=c[h],f=e(d,i);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const n={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u];h.push(f.toJSON(e.data))}h.length>0&&(n[l]=h,r=!0)}r&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone());const n=e.attributes;for(const c in n){const h=n[c];this.setAttribute(c,h.clone(t))}const r=e.morphAttributes;for(const c in r){const h=[],u=r[c];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,h=o.length;c<h;c++){const u=o[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const bp=new rt,ls=new Qr,_l=new Tn,Sp=new D,yl=new D,xl=new D,bl=new D,wu=new D,Sl=new D,Mp=new D,Ml=new D;class Ne extends Ut{constructor(e=new _t,t=new Ln){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=n.length;r<o;r++){const a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(e,t){const i=this.geometry,n=i.attributes.position,r=i.morphAttributes.position,o=i.morphTargetsRelative;t.fromBufferAttribute(n,e);const a=this.morphTargetInfluences;if(r&&a){Sl.set(0,0,0);for(let l=0,c=r.length;l<c;l++){const h=a[l],u=r[l];h!==0&&(wu.fromBufferAttribute(u,e),o?Sl.addScaledVector(wu,h):Sl.addScaledVector(wu.sub(t),h))}t.add(Sl)}return t}raycast(e,t){const i=this.geometry,n=this.material,r=this.matrixWorld;n!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),_l.copy(i.boundingSphere),_l.applyMatrix4(r),ls.copy(e.ray).recast(e.near),!(_l.containsPoint(ls.origin)===!1&&(ls.intersectSphere(_l,Sp)===null||ls.origin.distanceToSquared(Sp)>(e.far-e.near)**2))&&(bp.copy(r).invert(),ls.copy(e.ray).applyMatrix4(bp),!(i.boundingBox!==null&&ls.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,ls)))}_computeIntersections(e,t,i){let n;const r=this.geometry,o=this.material,a=r.index,l=r.attributes.position,c=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,d=r.groups,f=r.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,v=d.length;p<v;p++){const m=d[p],g=o[m.materialIndex],y=Math.max(m.start,f.start),x=Math.min(a.count,Math.min(m.start+m.count,f.start+f.count));for(let _=y,E=x;_<E;_+=3){const w=a.getX(_),M=a.getX(_+1),T=a.getX(_+2);n=wl(this,g,e,i,c,h,u,w,M,T),n&&(n.faceIndex=Math.floor(_/3),n.face.materialIndex=m.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),v=Math.min(a.count,f.start+f.count);for(let m=p,g=v;m<g;m+=3){const y=a.getX(m),x=a.getX(m+1),_=a.getX(m+2);n=wl(this,o,e,i,c,h,u,y,x,_),n&&(n.faceIndex=Math.floor(m/3),t.push(n))}}else if(l!==void 0)if(Array.isArray(o))for(let p=0,v=d.length;p<v;p++){const m=d[p],g=o[m.materialIndex],y=Math.max(m.start,f.start),x=Math.min(l.count,Math.min(m.start+m.count,f.start+f.count));for(let _=y,E=x;_<E;_+=3){const w=_,M=_+1,T=_+2;n=wl(this,g,e,i,c,h,u,w,M,T),n&&(n.faceIndex=Math.floor(_/3),n.face.materialIndex=m.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),v=Math.min(l.count,f.start+f.count);for(let m=p,g=v;m<g;m+=3){const y=m,x=m+1,_=m+2;n=wl(this,o,e,i,c,h,u,y,x,_),n&&(n.faceIndex=Math.floor(m/3),t.push(n))}}}}function cx(s,e,t,i,n,r,o,a){let l;if(e.side===ti?l=i.intersectTriangle(o,r,n,!0,a):l=i.intersectTriangle(n,r,o,e.side===ur,a),l===null)return null;Ml.copy(a),Ml.applyMatrix4(s.matrixWorld);const c=t.ray.origin.distanceTo(Ml);return c<t.near||c>t.far?null:{distance:c,point:Ml.clone(),object:s}}function wl(s,e,t,i,n,r,o,a,l,c){s.getVertexPosition(a,yl),s.getVertexPosition(l,xl),s.getVertexPosition(c,bl);const h=cx(s,e,t,i,yl,xl,bl,Mp);if(h){const u=new D;_i.getBarycoord(Mp,yl,xl,bl,u),n&&(h.uv=_i.getInterpolatedAttribute(n,a,l,c,u,new ge)),r&&(h.uv1=_i.getInterpolatedAttribute(r,a,l,c,u,new ge)),o&&(h.normal=_i.getInterpolatedAttribute(o,a,l,c,u,new D),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new D,materialIndex:0};_i.getNormal(yl,xl,bl,d.normal),h.face=d,h.barycoord=u}return h}class gn extends _t{constructor(e=1,t=1,i=1,n=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:r,depthSegments:o};const a=this;n=Math.floor(n),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,i,t,e,o,r,0),p("z","y","x",1,-1,i,t,-e,o,r,1),p("x","z","y",1,1,e,i,t,n,o,2),p("x","z","y",1,-1,e,i,-t,n,o,3),p("x","y","z",1,-1,e,t,i,n,r,4),p("x","y","z",-1,-1,e,t,-i,n,r,5),this.setIndex(l),this.setAttribute("position",new je(c,3)),this.setAttribute("normal",new je(h,3)),this.setAttribute("uv",new je(u,2));function p(v,m,g,y,x,_,E,w,M,T,S){const b=_/M,U=E/T,I=_/2,B=E/2,G=w/2,j=M+1,N=T+1;let ee=0,W=0;const Y=new D;for(let Q=0;Q<N;Q++){const z=Q*U-B;for(let J=0;J<j;J++){const $=J*b-I;Y[v]=$*y,Y[m]=z*x,Y[g]=G,c.push(Y.x,Y.y,Y.z),Y[v]=0,Y[m]=0,Y[g]=w>0?1:-1,h.push(Y.x,Y.y,Y.z),u.push(J/M),u.push(1-Q/T),ee+=1}}for(let Q=0;Q<T;Q++)for(let z=0;z<M;z++){const J=d+z+j*Q,$=d+z+j*(Q+1),V=d+(z+1)+j*(Q+1),H=d+(z+1)+j*Q;l.push(J,$,H),l.push($,V,H),W+=6}a.addGroup(f,W,S),f+=W,d+=ee}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new gn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Io(s){const e={};for(const t in s){e[t]={};for(const i in s[t]){const n=s[t][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=n.clone():Array.isArray(n)?e[t][i]=n.slice():e[t][i]=n}}return e}function oi(s){const e={};for(let t=0;t<s.length;t++){const i=Io(s[t]);for(const n in i)e[n]=i[n]}return e}function hx(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function U0(s){const e=s.getRenderTarget();return e===null?s.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Dt.workingColorSpace}const Ja={clone:Io,merge:oi};var ux=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,dx=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Si extends ii{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=ux,this.fragmentShader=dx,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Io(e.uniforms),this.uniformsGroups=hx(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const o=this.uniforms[n].value;o&&o.isTexture?t.uniforms[n]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[n]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[n]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[n]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[n]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[n]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[n]={type:"m4",value:o.toArray()}:t.uniforms[n]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const n in this.extensions)this.extensions[n]===!0&&(i[n]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class Ah extends Ut{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new rt,this.projectionMatrix=new rt,this.projectionMatrixInverse=new rt,this.coordinateSystem=Ki}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Vr=new D,wp=new ge,Ep=new ge;class xn extends Ah{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Po*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Ns*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Po*2*Math.atan(Math.tan(Ns*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){Vr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Vr.x,Vr.y).multiplyScalar(-e/Vr.z),Vr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(Vr.x,Vr.y).multiplyScalar(-e/Vr.z)}getViewSize(e,t){return this.getViewBounds(e,wp,Ep),t.subVectors(Ep,wp)}setViewOffset(e,t,i,n,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Ns*.5*this.fov)/this.zoom,i=2*t,n=this.aspect*i,r=-.5*n;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*n/l,t-=o.offsetY*i/c,n*=o.width/l,i*=o.height/c}const a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const co=-90,ho=1;class L0 extends Ut{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new xn(co,ho,e,t);n.layers=this.layers,this.add(n);const r=new xn(co,ho,e,t);r.layers=this.layers,this.add(r);const o=new xn(co,ho,e,t);o.layers=this.layers,this.add(o);const a=new xn(co,ho,e,t);a.layers=this.layers,this.add(a);const l=new xn(co,ho,e,t);l.layers=this.layers,this.add(l);const c=new xn(co,ho,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,n,r,o,a,l]=t;for(const c of t)this.remove(c);if(e===Ki)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===Ua)i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,o,a,l,c,h]=this.children,u=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const v=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,n),e.render(t,r),e.setRenderTarget(i,1,n),e.render(t,o),e.setRenderTarget(i,2,n),e.render(t,a),e.setRenderTarget(i,3,n),e.render(t,l),e.setRenderTarget(i,4,n),e.render(t,c),i.texture.generateMipmaps=v,e.setRenderTarget(i,5,n),e.render(t,h),e.setRenderTarget(u,d,f),e.xr.enabled=p,i.texture.needsPMREMUpdate=!0}}class Qa extends fn{constructor(e=[],t=Dr,i,n,r,o,a,l,c,h){super(e,t,i,n,r,o,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class N0 extends zi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},n=[i,i,i,i,i,i];this.texture=new Qa(n,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:bn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new gn(5,5,5),r=new Si({name:"CubemapFromEquirect",uniforms:Io(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:ti,blending:Cr});r.uniforms.tEquirect.value=t;const o=new Ne(n,r),a=t.minFilter;return t.minFilter===Zi&&(t.minFilter=bn),new L0(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t=!0,i=!0,n=!0){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,n);e.setRenderTarget(r)}}class ki extends Ut{constructor(){super(),this.isGroup=!0,this.type="Group"}}const fx={type:"move"};class vc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ki,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ki,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new D,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new D),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ki,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new D,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new D),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let n=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const v of e.hand.values()){const m=t.getJointPose(v,i),g=this._getHandJoint(c,v);m!==null&&(g.matrix.fromArray(m.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=m.radius),g.visible=m!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],d=h.position.distanceTo(u.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,i),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(n=t.getPose(e.targetRaySpace,i),n===null&&r!==null&&(n=r),n!==null&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(fx)))}return a!==null&&(a.visible=n!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new ki;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class Ch{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Be(e),this.density=t}clone(){return new Ch(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Rh{constructor(e,t=1,i=1e3){this.isFog=!0,this.name="",this.color=new Be(e),this.near=t,this.far=i}clone(){return new Rh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class $a extends Ut{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new bi,this.environmentIntensity=1,this.environmentRotation=new bi,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class Ph{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Da,this.updateRanges=[],this.version=0,this.uuid=Ui()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,r=this.stride;n<r;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ui()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ui()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const si=new D;class Ii{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)si.fromBufferAttribute(this,t),si.applyMatrix4(e),this.setXYZ(t,si.x,si.y,si.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)si.fromBufferAttribute(this,t),si.applyNormalMatrix(e),this.setXYZ(t,si.x,si.y,si.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)si.fromBufferAttribute(this,t),si.transformDirection(e),this.setXYZ(t,si.x,si.y,si.z);return this}getComponent(e,t){let i=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(i=li(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=Ct(i,this.array)),this.data.array[e*this.data.stride+this.offset+t]=i,this}setX(e,t){return this.normalized&&(t=Ct(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=li(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=li(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=li(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=li(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ct(t,this.array),i=Ct(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ct(t,this.array),i=Ct(i,this.array),n=Ct(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ct(t,this.array),i=Ct(i,this.array),n=Ct(n,this.array),r=Ct(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[n+r])}return new Tt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ii(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[n+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class No extends ii{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Be(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let uo;const qo=new D,fo=new D,po=new D,mo=new ge,jo=new ge,O0=new rt,El=new D,Zo=new D,Tl=new D,Tp=new ge,Eu=new ge,Ap=new ge;class el extends Ut{constructor(e=new No){if(super(),this.isSprite=!0,this.type="Sprite",uo===void 0){uo=new _t;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new Ph(t,5);uo.setIndex([0,1,2,0,2,3]),uo.setAttribute("position",new Ii(i,3,0,!1)),uo.setAttribute("uv",new Ii(i,2,3,!1))}this.geometry=uo,this.material=e,this.center=new ge(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),fo.setFromMatrixScale(this.matrixWorld),O0.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),po.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&fo.multiplyScalar(-po.z);const i=this.material.rotation;let n,r;i!==0&&(r=Math.cos(i),n=Math.sin(i));const o=this.center;Al(El.set(-.5,-.5,0),po,o,fo,n,r),Al(Zo.set(.5,-.5,0),po,o,fo,n,r),Al(Tl.set(.5,.5,0),po,o,fo,n,r),Tp.set(0,0),Eu.set(1,0),Ap.set(1,1);let a=e.ray.intersectTriangle(El,Zo,Tl,!1,qo);if(a===null&&(Al(Zo.set(-.5,.5,0),po,o,fo,n,r),Eu.set(0,1),a=e.ray.intersectTriangle(El,Tl,Zo,!1,qo),a===null))return;const l=e.ray.origin.distanceTo(qo);l<e.near||l>e.far||t.push({distance:l,point:qo.clone(),uv:_i.getInterpolation(qo,El,Zo,Tl,Tp,Eu,Ap,new ge),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Al(s,e,t,i,n,r){mo.subVectors(s,t).addScalar(.5).multiply(i),n!==void 0?(jo.x=r*mo.x-n*mo.y,jo.y=n*mo.x+r*mo.y):jo.copy(mo),s.copy(e),s.x+=jo.x,s.y+=jo.y,s.applyMatrix4(O0)}const Cl=new D,Cp=new D;class F0 extends Ut{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let i=0,n=t.length;i<n;i++){const r=t[i];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,i=0){t=Math.abs(t);const n=this.levels;let r;for(r=0;r<n.length&&!(t<n[r].distance);r++);return n.splice(r,0,{distance:t,hysteresis:i,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let i=0;i<t.length;i++)if(t[i].distance===e){const n=t.splice(i,1);return this.remove(n[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let i,n;for(i=1,n=t.length;i<n;i++){let r=t[i].distance;if(t[i].object.visible&&(r-=r*t[i].hysteresis),e<r)break}return t[i-1].object}return null}raycast(e,t){if(this.levels.length>0){Cl.setFromMatrixPosition(this.matrixWorld);const n=e.ray.origin.distanceTo(Cl);this.getObjectForDistance(n).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Cl.setFromMatrixPosition(e.matrixWorld),Cp.setFromMatrixPosition(this.matrixWorld);const i=Cl.distanceTo(Cp)/e.zoom;t[0].object.visible=!0;let n,r;for(n=1,r=t.length;n<r;n++){let o=t[n].distance;if(t[n].object.visible&&(o-=o*t[n].hysteresis),i>=o)t[n-1].object.visible=!1,t[n].object.visible=!0;else break}for(this._currentLevel=n-1;n<r;n++)t[n].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const i=this.levels;for(let n=0,r=i.length;n<r;n++){const o=i[n];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const Rp=new D,Pp=new Rt,Ip=new Rt,px=new D,Dp=new rt,Rl=new D,Tu=new Tn,Up=new rt,Au=new Qr;class lf extends Ne{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=vd,this.bindMatrix=new rt,this.bindMatrixInverse=new rt,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Sn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,Rl),this.boundingBox.expandByPoint(Rl)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Tn),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,Rl),this.boundingSphere.expandByPoint(Rl)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const i=this.material,n=this.matrixWorld;i!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Tu.copy(this.boundingSphere),Tu.applyMatrix4(n),e.ray.intersectsSphere(Tu)!==!1&&(Up.copy(n).invert(),Au.copy(e.ray).applyMatrix4(Up),!(this.boundingBox!==null&&Au.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Au)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Rt,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.fromBufferAttribute(t,i);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===vd?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===g0?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const i=this.skeleton,n=this.geometry;Pp.fromBufferAttribute(n.attributes.skinIndex,e),Ip.fromBufferAttribute(n.attributes.skinWeight,e),Rp.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const o=Ip.getComponent(r);if(o!==0){const a=Pp.getComponent(r);Dp.multiplyMatrices(i.bones[a].matrixWorld,i.boneInverses[a]),t.addScaledVector(px.copy(Rp).applyMatrix4(Dp),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Ih extends Ut{constructor(){super(),this.isBone=!0,this.type="Bone"}}class cr extends fn{constructor(e=null,t=1,i=1,n,r,o,a,l,c=Vn,h=Vn,u,d){super(null,o,a,l,c,h,n,r,u,d),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Lp=new rt,mx=new rt;class tl{constructor(e=[],t=[]){this.uuid=Ui(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new rt)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const i=new rt;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let r=0,o=e.length;r<o;r++){const a=e[r]?e[r].matrixWorld:mx;Lp.multiplyMatrices(a,t[r]),Lp.toArray(i,r*16)}n!==null&&(n.needsUpdate=!0)}clone(){return new tl(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const i=new cr(t,e,e,ci,xi);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){const n=this.bones[t];if(n.name===e)return n}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,n=e.bones.length;i<n;i++){const r=e.bones[i];let o=t[r];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),o=new Ih),this.bones.push(o),this.boneInverses.push(new rt().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,i=this.boneInverses;for(let n=0,r=t.length;n<r;n++){const o=t[n];e.bones.push(o.uuid);const a=i[n];e.boneInverses.push(a.toArray())}return e}}class Gs extends Tt{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const go=new rt,Np=new rt,Pl=[],Op=new Sn,gx=new rt,Ko=new Ne,Jo=new Tn;class k0 extends Ne{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Gs(new Float32Array(i*16),16),this.instanceColor=null,this.morphTexture=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let n=0;n<i;n++)this.setMatrixAt(n,gx)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Sn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,go),Op.copy(e.boundingBox).applyMatrix4(go),this.boundingBox.union(Op)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Tn),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,go),Jo.copy(e.boundingSphere).applyMatrix4(go),this.boundingSphere.union(Jo)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const i=t.morphTargetInfluences,n=this.morphTexture.source.data.data,r=i.length+1,o=e*r+1;for(let a=0;a<i.length;a++)i[a]=n[o+a]}raycast(e,t){const i=this.matrixWorld,n=this.count;if(Ko.geometry=this.geometry,Ko.material=this.material,Ko.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Jo.copy(this.boundingSphere),Jo.applyMatrix4(i),e.ray.intersectsSphere(Jo)!==!1))for(let r=0;r<n;r++){this.getMatrixAt(r,go),Np.multiplyMatrices(i,go),Ko.matrixWorld=Np,Ko.raycast(e,Pl);for(let o=0,a=Pl.length;o<a;o++){const l=Pl[o];l.instanceId=r,l.object=this,t.push(l)}Pl.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Gs(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const i=t.morphTargetInfluences,n=i.length+1;this.morphTexture===null&&(this.morphTexture=new cr(new Float32Array(n*this.count),n,this.count,xh,xi));const r=this.morphTexture.source.data.data;let o=0;for(let c=0;c<i.length;c++)o+=i[c];const a=this.geometry.morphTargetsRelative?1:1-o,l=n*e;r[l]=a,r.set(i,l+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const Cu=new D,vx=new D,_x=new Mt;class sr{constructor(e=new D(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=Cu.subVectors(i,t).cross(vx.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(Cu),n=this.normal.dot(i);if(n===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:t.copy(e.start).addScaledVector(i,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||_x.getNormalMatrix(e),n=this.coplanarPoint(Cu).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const cs=new Tn,Il=new D;class nl{constructor(e=new sr,t=new sr,i=new sr,n=new sr,r=new sr,o=new sr){this.planes=[e,t,i,n,r,o]}set(e,t,i,n,r,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(n),a[4].copy(r),a[5].copy(o),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=Ki){const i=this.planes,n=e.elements,r=n[0],o=n[1],a=n[2],l=n[3],c=n[4],h=n[5],u=n[6],d=n[7],f=n[8],p=n[9],v=n[10],m=n[11],g=n[12],y=n[13],x=n[14],_=n[15];if(i[0].setComponents(l-r,d-c,m-f,_-g).normalize(),i[1].setComponents(l+r,d+c,m+f,_+g).normalize(),i[2].setComponents(l+o,d+h,m+p,_+y).normalize(),i[3].setComponents(l-o,d-h,m-p,_-y).normalize(),i[4].setComponents(l-a,d-u,m-v,_-x).normalize(),t===Ki)i[5].setComponents(l+a,d+u,m+v,_+x).normalize();else if(t===Ua)i[5].setComponents(a,u,v,x).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),cs.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),cs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(cs)}intersectsSprite(e){return cs.center.set(0,0,0),cs.radius=.7071067811865476,cs.applyMatrix4(e.matrixWorld),this.intersectsSphere(cs)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(Il.x=n.normal.x>0?e.max.x:e.min.x,Il.y=n.normal.y>0?e.max.y:e.min.y,Il.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(Il)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Ru(s,e){return s-e}function yx(s,e){return s.z-e.z}function xx(s,e){return e.z-s.z}class bx{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,i,n){const r=this.pool,o=this.list;this.index>=r.length&&r.push({start:-1,count:-1,z:-1,index:-1});const a=r[this.index];o.push(a),this.index++,a.start=e,a.count=t,a.z=i,a.index=n}reset(){this.list.length=0,this.index=0}}const fi=new rt,Sx=new Be(1,1,1),Pu=new nl,Dl=new Sn,hs=new Tn,Qo=new D,Fp=new D,Mx=new D,Iu=new bx,Jn=new Ne,Ul=[];function wx(s,e,t=0){const i=e.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==e.array.constructor){const n=s.count;for(let r=0;r<n;r++)for(let o=0;o<i;o++)e.setComponent(r+t,o,s.getComponent(r,o))}else e.array.set(s.array,t*i);e.needsUpdate=!0}function us(s,e){if(s.constructor!==e.constructor){const t=Math.min(s.length,e.length);for(let i=0;i<t;i++)e[i]=s[i]}else{const t=Math.min(s.length,e.length);e.set(new s.constructor(s.buffer,0,t))}}class B0 extends Ne{constructor(e,t,i=t*2,n){super(new _t,n),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=i,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),i=new cr(t,e,e,ci,xi);this._matricesTexture=i}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),i=new cr(t,e,e,Za,Ur);this._indirectTexture=i}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),i=new cr(t,e,e,ci,xi);i.colorSpace=Dt.workingColorSpace,this._colorsTexture=i}_initializeGeometry(e){const t=this.geometry,i=this._maxVertexCount,n=this._maxIndexCount;if(this._geometryInitialized===!1){for(const r in e.attributes){const o=e.getAttribute(r),{array:a,itemSize:l,normalized:c}=o,h=new a.constructor(i*l),u=new Tt(h,l,c);t.setAttribute(r,u)}if(e.getIndex()!==null){const r=i>65535?new Uint32Array(n):new Uint16Array(n);t.setIndex(new Tt(r,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const i in t.attributes){if(!e.hasAttribute(i))throw new Error(`THREE.BatchedMesh: Added geometry missing "${i}". All geometries must have consistent attributes.`);const n=e.getAttribute(i),r=t.getAttribute(i);if(n.itemSize!==r.itemSize||n.normalized!==r.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Sn);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let i=0,n=t.length;i<n;i++){if(t[i].active===!1)continue;const r=t[i].geometryIndex;this.getMatrixAt(i,fi),this.getBoundingBoxAt(r,Dl).applyMatrix4(fi),e.union(Dl)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Tn);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let i=0,n=t.length;i<n;i++){if(t[i].active===!1)continue;const r=t[i].geometryIndex;this.getMatrixAt(i,fi),this.getBoundingSphereAt(r,hs).applyMatrix4(fi),e.union(hs)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const i={visible:!0,active:!0,geometryIndex:e};let n=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Ru),n=this._availableInstanceIds.shift(),this._instanceInfo[n]=i):(n=this._instanceInfo.length,this._instanceInfo.push(i));const r=this._matricesTexture;fi.identity().toArray(r.image.data,n*16),r.needsUpdate=!0;const o=this._colorsTexture;return o&&(Sx.toArray(o.image.data,n*4),o.needsUpdate=!0),this._visibilityChanged=!0,n}addGeometry(e,t=-1,i=-1){this._initializeGeometry(e),this._validateGeometry(e);const n={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},r=this._geometryInfo;n.vertexStart=this._nextVertexStart,n.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const o=e.getIndex();if(o!==null&&(n.indexStart=this._nextIndexStart,n.reservedIndexCount=i===-1?o.count:i),n.indexStart!==-1&&n.indexStart+n.reservedIndexCount>this._maxIndexCount||n.vertexStart+n.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let l;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Ru),l=this._availableGeometryIds.shift(),r[l]=n):(l=this._geometryCount,this._geometryCount++,r.push(n)),this.setGeometryAt(l,e),this._nextIndexStart=n.indexStart+n.reservedIndexCount,this._nextVertexStart=n.vertexStart+n.reservedVertexCount,l}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const i=this.geometry,n=i.getIndex()!==null,r=i.getIndex(),o=t.getIndex(),a=this._geometryInfo[e];if(n&&o.count>a.reservedIndexCount||t.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const l=a.vertexStart,c=a.reservedVertexCount;a.vertexCount=t.getAttribute("position").count;for(const h in i.attributes){const u=t.getAttribute(h),d=i.getAttribute(h);wx(u,d,l);const f=u.itemSize;for(let p=u.count,v=c;p<v;p++){const m=l+p;for(let g=0;g<f;g++)d.setComponent(m,g,0)}d.needsUpdate=!0,d.addUpdateRange(l*f,c*f)}if(n){const h=a.indexStart,u=a.reservedIndexCount;a.indexCount=t.getIndex().count;for(let d=0;d<o.count;d++)r.setX(h+d,l+o.getX(d));for(let d=o.count,f=u;d<f;d++)r.setX(h+d,l);r.needsUpdate=!0,r.addUpdateRange(h,a.reservedIndexCount)}return a.start=n?a.indexStart:a.vertexStart,a.count=n?a.indexCount:a.vertexCount,a.boundingBox=null,t.boundingBox!==null&&(a.boundingBox=t.boundingBox.clone()),a.boundingSphere=null,t.boundingSphere!==null&&(a.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const i=this._instanceInfo;for(let n=0,r=i.length;n<r;n++)i[n].active&&i[n].geometryIndex===e&&this.deleteInstance(n);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const i=this._geometryInfo,n=i.map((o,a)=>a).sort((o,a)=>i[o].vertexStart-i[a].vertexStart),r=this.geometry;for(let o=0,a=i.length;o<a;o++){const l=n[o],c=i[l];if(c.active!==!1){if(r.index!==null){if(c.indexStart!==t){const{indexStart:h,vertexStart:u,reservedIndexCount:d}=c,f=r.index,p=f.array,v=e-u;for(let m=h;m<h+d;m++)p[m]=p[m]+v;f.array.copyWithin(t,h,h+d),f.addUpdateRange(t,d),c.indexStart=t}t+=c.reservedIndexCount}if(c.vertexStart!==e){const{vertexStart:h,reservedVertexCount:u}=c,d=r.attributes;for(const f in d){const p=d[f],{array:v,itemSize:m}=p;v.copyWithin(e*m,h*m,(h+u)*m),p.addUpdateRange(e*m,u*m)}c.vertexStart=e}e+=c.reservedVertexCount,c.start=r.index?c.indexStart:c.vertexStart,this._nextIndexStart=r.index?c.indexStart+c.reservedIndexCount:0,this._nextVertexStart=c.vertexStart+c.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const i=this.geometry,n=this._geometryInfo[e];if(n.boundingBox===null){const r=new Sn,o=i.index,a=i.attributes.position;for(let l=n.start,c=n.start+n.count;l<c;l++){let h=l;o&&(h=o.getX(h)),r.expandByPoint(Qo.fromBufferAttribute(a,h))}n.boundingBox=r}return t.copy(n.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const i=this.geometry,n=this._geometryInfo[e];if(n.boundingSphere===null){const r=new Tn;this.getBoundingBoxAt(e,Dl),Dl.getCenter(r.center);const o=i.index,a=i.attributes.position;let l=0;for(let c=n.start,h=n.start+n.count;c<h;c++){let u=c;o&&(u=o.getX(u)),Qo.fromBufferAttribute(a,u),l=Math.max(l,r.center.distanceToSquared(Qo))}r.radius=Math.sqrt(l),n.boundingSphere=r}return t.copy(n.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const i=this._matricesTexture,n=this._matricesTexture.image.data;return t.toArray(n,e*16),i.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,e*16)}setColorAt(e,t){return this.validateInstanceId(e),this._colorsTexture===null&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,e*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,e*4)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t?this:(this._instanceInfo[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const i=this._geometryInfo[e];return t.vertexStart=i.vertexStart,t.vertexCount=i.vertexCount,t.reservedVertexCount=i.reservedVertexCount,t.indexStart=i.indexStart,t.indexCount=i.indexCount,t.reservedIndexCount=i.reservedIndexCount,t.start=i.start,t.count=i.count,t}setInstanceCount(e){const t=this._availableInstanceIds,i=this._instanceInfo;for(t.sort(Ru);t[t.length-1]===i.length;)i.pop(),t.pop();if(e<i.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const n=new Int32Array(e),r=new Int32Array(e);us(this._multiDrawCounts,n),us(this._multiDrawStarts,r),this._multiDrawCounts=n,this._multiDrawStarts=r,this._maxInstanceCount=e;const o=this._indirectTexture,a=this._matricesTexture,l=this._colorsTexture;o.dispose(),this._initIndirectTexture(),us(o.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),us(a.image.data,this._matricesTexture.image.data),l&&(l.dispose(),this._initColorsTexture(),us(l.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const i=[...this._geometryInfo].filter(a=>a.active);if(Math.max(...i.map(a=>a.vertexStart+a.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...i.map(l=>l.indexStart+l.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const r=this.geometry;r.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new _t,this._initializeGeometry(r));const o=this.geometry;r.index&&us(r.index.array,o.index.array);for(const a in r.attributes)us(r.attributes[a].array,o.attributes[a].array)}raycast(e,t){const i=this._instanceInfo,n=this._geometryInfo,r=this.matrixWorld,o=this.geometry;Jn.material=this.material,Jn.geometry.index=o.index,Jn.geometry.attributes=o.attributes,Jn.geometry.boundingBox===null&&(Jn.geometry.boundingBox=new Sn),Jn.geometry.boundingSphere===null&&(Jn.geometry.boundingSphere=new Tn);for(let a=0,l=i.length;a<l;a++){if(!i[a].visible||!i[a].active)continue;const c=i[a].geometryIndex,h=n[c];Jn.geometry.setDrawRange(h.start,h.count),this.getMatrixAt(a,Jn.matrixWorld).premultiply(r),this.getBoundingBoxAt(c,Jn.geometry.boundingBox),this.getBoundingSphereAt(c,Jn.geometry.boundingSphere),Jn.raycast(e,Ul);for(let u=0,d=Ul.length;u<d;u++){const f=Ul[u];f.object=this,f.batchId=a,t.push(f)}Ul.length=0}Jn.material=null,Jn.geometry.index=null,Jn.geometry.attributes={},Jn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(e,t,i,n,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const o=n.getIndex(),a=o===null?1:o.array.BYTES_PER_ELEMENT,l=this._instanceInfo,c=this._multiDrawStarts,h=this._multiDrawCounts,u=this._geometryInfo,d=this.perObjectFrustumCulled,f=this._indirectTexture,p=f.image.data;d&&(fi.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse).multiply(this.matrixWorld),Pu.setFromProjectionMatrix(fi,e.coordinateSystem));let v=0;if(this.sortObjects){fi.copy(this.matrixWorld).invert(),Qo.setFromMatrixPosition(i.matrixWorld).applyMatrix4(fi),Fp.set(0,0,-1).transformDirection(i.matrixWorld).transformDirection(fi);for(let y=0,x=l.length;y<x;y++)if(l[y].visible&&l[y].active){const _=l[y].geometryIndex;this.getMatrixAt(y,fi),this.getBoundingSphereAt(_,hs).applyMatrix4(fi);let E=!1;if(d&&(E=!Pu.intersectsSphere(hs)),!E){const w=u[_],M=Mx.subVectors(hs.center,Qo).dot(Fp);Iu.push(w.start,w.count,M,y)}}const m=Iu.list,g=this.customSort;g===null?m.sort(r.transparent?xx:yx):g.call(this,m,i);for(let y=0,x=m.length;y<x;y++){const _=m[y];c[v]=_.start*a,h[v]=_.count,p[v]=_.index,v++}Iu.reset()}else for(let m=0,g=l.length;m<g;m++)if(l[m].visible&&l[m].active){const y=l[m].geometryIndex;let x=!1;if(d&&(this.getMatrixAt(m,fi),this.getBoundingSphereAt(y,hs).applyMatrix4(fi),x=!Pu.intersectsSphere(hs)),!x){const _=u[y];c[v]=_.start*a,h[v]=_.count,p[v]=m,v++}}f.needsUpdate=!0,this._multiDrawCount=v,this._visibilityChanged=!1}onBeforeShadow(e,t,i,n,r,o){this.onBeforeRender(e,null,n,r,o)}}class Nn extends ii{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Be(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const ah=new D,lh=new D,kp=new rt,$o=new Qr,Ll=new Tn,Du=new D,Bp=new D;class Gn extends Ut{constructor(e=new _t,t=new Nn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let n=1,r=t.count;n<r;n++)ah.fromBufferAttribute(t,n-1),lh.fromBufferAttribute(t,n),i[n]=i[n-1],i[n]+=ah.distanceTo(lh);e.setAttribute("lineDistance",new je(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,r=e.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Ll.copy(i.boundingSphere),Ll.applyMatrix4(n),Ll.radius+=r,e.ray.intersectsSphere(Ll)===!1)return;kp.copy(n).invert(),$o.copy(e.ray).applyMatrix4(kp);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,h=i.index,d=i.attributes.position;if(h!==null){const f=Math.max(0,o.start),p=Math.min(h.count,o.start+o.count);for(let v=f,m=p-1;v<m;v+=c){const g=h.getX(v),y=h.getX(v+1),x=Nl(this,e,$o,l,g,y,v);x&&t.push(x)}if(this.isLineLoop){const v=h.getX(p-1),m=h.getX(f),g=Nl(this,e,$o,l,v,m,p-1);g&&t.push(g)}}else{const f=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let v=f,m=p-1;v<m;v+=c){const g=Nl(this,e,$o,l,v,v+1,v);g&&t.push(g)}if(this.isLineLoop){const v=Nl(this,e,$o,l,p-1,f,p-1);v&&t.push(v)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=n.length;r<o;r++){const a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function Nl(s,e,t,i,n,r,o){const a=s.geometry.attributes.position;if(ah.fromBufferAttribute(a,n),lh.fromBufferAttribute(a,r),t.distanceSqToSegment(ah,lh,Du,Bp)>i)return;Du.applyMatrix4(s.matrixWorld);const c=e.ray.origin.distanceTo(Du);if(!(c<e.near||c>e.far))return{distance:c,point:Bp.clone().applyMatrix4(s.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:s}}const zp=new D,Gp=new D;class Qi extends Gn{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[];for(let n=0,r=t.count;n<r;n+=2)zp.fromBufferAttribute(t,n),Gp.fromBufferAttribute(t,n+1),i[n]=n===0?0:i[n-1],i[n+1]=i[n]+zp.distanceTo(Gp);e.setAttribute("lineDistance",new je(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class z0 extends Gn{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class cf extends ii{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Be(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Vp=new rt,xd=new Qr,Ol=new Tn,Fl=new D;class G0 extends Ut{constructor(e=new _t,t=new cf){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,r=e.params.Points.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Ol.copy(i.boundingSphere),Ol.applyMatrix4(n),Ol.radius+=r,e.ray.intersectsSphere(Ol)===!1)return;Vp.copy(n).invert(),xd.copy(e.ray).applyMatrix4(Vp);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=i.index,u=i.attributes.position;if(c!==null){const d=Math.max(0,o.start),f=Math.min(c.count,o.start+o.count);for(let p=d,v=f;p<v;p++){const m=c.getX(p);Fl.fromBufferAttribute(u,m),Hp(Fl,m,l,n,e,t,this)}}else{const d=Math.max(0,o.start),f=Math.min(u.count,o.start+o.count);for(let p=d,v=f;p<v;p++)Fl.fromBufferAttribute(u,p),Hp(Fl,p,l,n,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=n.length;r<o;r++){const a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function Hp(s,e,t,i,n,r,o){const a=xd.distanceSqToPoint(s);if(a<t){const l=new D;xd.closestPointToPoint(s,l),l.applyMatrix4(i);const c=n.ray.origin.distanceTo(l);if(c<n.near||c>n.far)return;r.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:o})}}class V0 extends fn{constructor(e,t,i,n,r=bn,o=bn,a,l,c){super(e,t,i,n,r,o,a,l,c),this.isVideoTexture=!0,this.generateMipmaps=!1;const h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Ex extends V0{constructor(e,t,i,n,r,o,a,l){super({},e,t,i,n,r,o,a,l),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(e){this.image=e,this.needsUpdate=!0}}class Tx extends fn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Vn,this.minFilter=Vn,this.generateMipmaps=!1,this.needsUpdate=!0}}class Dh extends fn{constructor(e,t,i,n,r,o,a,l,c,h,u,d){super(null,o,a,l,c,h,n,r,u,d),this.isCompressedTexture=!0,this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class Ax extends Dh{constructor(e,t,i,n,r,o){super(e,t,i,r,o),this.isCompressedArrayTexture=!0,this.image.depth=n,this.wrapR=yi,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Cx extends Dh{constructor(e,t,i){super(void 0,e[0].width,e[0].height,t,i,Dr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class H0 extends fn{constructor(e,t,i,n,r,o,a,l,c){super(e,t,i,n,r,o,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class hf extends fn{constructor(e,t,i=Ur,n,r,o,a=Vn,l=Vn,c,h=Co){if(h!==Co&&h!==Ro)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,n,r,o,a,l,h,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Zr(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class $i{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,n=this.getPoint(0),r=0;t.push(0);for(let o=1;o<=e;o++)i=this.getPoint(o/e),r+=i.distanceTo(n),t.push(r),n=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const i=this.getLengths();let n=0;const r=i.length;let o;t?o=t:o=e*i[r-1];let a=0,l=r-1,c;for(;a<=l;)if(n=Math.floor(a+(l-a)/2),c=i[n]-o,c<0)a=n+1;else if(c>0)l=n-1;else{l=n;break}if(n=l,i[n]===o)return n/(r-1);const h=i[n],d=i[n+1]-h,f=(o-h)/d;return(n+f)/(r-1)}getTangent(e,t){let n=e-1e-4,r=e+1e-4;n<0&&(n=0),r>1&&(r=1);const o=this.getPoint(n),a=this.getPoint(r),l=t||(o.isVector2?new ge:new D);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t=!1){const i=new D,n=[],r=[],o=[],a=new D,l=new rt;for(let f=0;f<=e;f++){const p=f/e;n[f]=this.getTangentAt(p,new D)}r[0]=new D,o[0]=new D;let c=Number.MAX_VALUE;const h=Math.abs(n[0].x),u=Math.abs(n[0].y),d=Math.abs(n[0].z);h<=c&&(c=h,i.set(1,0,0)),u<=c&&(c=u,i.set(0,1,0)),d<=c&&i.set(0,0,1),a.crossVectors(n[0],i).normalize(),r[0].crossVectors(n[0],a),o[0].crossVectors(n[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(n[f-1],n[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(wt(n[f-1].dot(n[f]),-1,1));r[f].applyMatrix4(l.makeRotationAxis(a,p))}o[f].crossVectors(n[f],r[f])}if(t===!0){let f=Math.acos(wt(r[0].dot(r[e]),-1,1));f/=e,n[0].dot(a.crossVectors(r[0],r[e]))>0&&(f=-f);for(let p=1;p<=e;p++)r[p].applyMatrix4(l.makeRotationAxis(n[p],f*p)),o[p].crossVectors(n[p],r[p])}return{tangents:n,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Uh extends $i{constructor(e=0,t=0,i=1,n=1,r=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=n,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t=new ge){const i=t,n=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=n;for(;r>n;)r-=n;r<Number.EPSILON&&(o?r=0:r=n),this.aClockwise===!0&&!o&&(r===n?r=-n:r=r-n);const a=this.aStartAngle+e*r;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*h-f*u+this.aX,c=d*u+f*h+this.aY}return i.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class W0 extends Uh{constructor(e,t,i,n,r,o){super(e,t,i,i,n,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function uf(){let s=0,e=0,t=0,i=0;function n(r,o,a,l){s=r,e=a,t=-3*r+3*o-2*a-l,i=2*r-2*o+a+l}return{initCatmullRom:function(r,o,a,l,c){n(o,a,c*(a-r),c*(l-o))},initNonuniformCatmullRom:function(r,o,a,l,c,h,u){let d=(o-r)/c-(a-r)/(c+h)+(a-o)/h,f=(a-o)/h-(l-o)/(h+u)+(l-a)/u;d*=h,f*=h,n(o,a,d,f)},calc:function(r){const o=r*r,a=o*r;return s+e*r+t*o+i*a}}}const kl=new D,Uu=new uf,Lu=new uf,Nu=new uf;class X0 extends $i{constructor(e=[],t=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=n}getPoint(e,t=new D){const i=t,n=this.points,r=n.length,o=(r-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:l===0&&a===r-1&&(a=r-2,l=1);let c,h;this.closed||a>0?c=n[(a-1)%r]:(kl.subVectors(n[0],n[1]).add(n[0]),c=kl);const u=n[a%r],d=n[(a+1)%r];if(this.closed||a+2<r?h=n[(a+2)%r]:(kl.subVectors(n[r-1],n[r-2]).add(n[r-1]),h=kl),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(u),f),v=Math.pow(u.distanceToSquared(d),f),m=Math.pow(d.distanceToSquared(h),f);v<1e-4&&(v=1),p<1e-4&&(p=v),m<1e-4&&(m=v),Uu.initNonuniformCatmullRom(c.x,u.x,d.x,h.x,p,v,m),Lu.initNonuniformCatmullRom(c.y,u.y,d.y,h.y,p,v,m),Nu.initNonuniformCatmullRom(c.z,u.z,d.z,h.z,p,v,m)}else this.curveType==="catmullrom"&&(Uu.initCatmullRom(c.x,u.x,d.x,h.x,this.tension),Lu.initCatmullRom(c.y,u.y,d.y,h.y,this.tension),Nu.initCatmullRom(c.z,u.z,d.z,h.z,this.tension));return i.set(Uu.calc(l),Lu.calc(l),Nu.calc(l)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(new D().fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Wp(s,e,t,i,n){const r=(i-e)*.5,o=(n-t)*.5,a=s*s,l=s*a;return(2*t-2*i+r+o)*l+(-3*t+3*i-2*r-o)*a+r*s+t}function Rx(s,e){const t=1-s;return t*t*e}function Px(s,e){return 2*(1-s)*s*e}function Ix(s,e){return s*s*e}function ba(s,e,t,i){return Rx(s,e)+Px(s,t)+Ix(s,i)}function Dx(s,e){const t=1-s;return t*t*t*e}function Ux(s,e){const t=1-s;return 3*t*t*s*e}function Lx(s,e){return 3*(1-s)*s*s*e}function Nx(s,e){return s*s*s*e}function Sa(s,e,t,i,n){return Dx(s,e)+Ux(s,t)+Lx(s,i)+Nx(s,n)}class df extends $i{constructor(e=new ge,t=new ge,i=new ge,n=new ge){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new ge){const i=t,n=this.v0,r=this.v1,o=this.v2,a=this.v3;return i.set(Sa(e,n.x,r.x,o.x,a.x),Sa(e,n.y,r.y,o.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Y0 extends $i{constructor(e=new D,t=new D,i=new D,n=new D){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new D){const i=t,n=this.v0,r=this.v1,o=this.v2,a=this.v3;return i.set(Sa(e,n.x,r.x,o.x,a.x),Sa(e,n.y,r.y,o.y,a.y),Sa(e,n.z,r.z,o.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ff extends $i{constructor(e=new ge,t=new ge){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ge){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ge){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class q0 extends $i{constructor(e=new D,t=new D){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new D){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new D){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class pf extends $i{constructor(e=new ge,t=new ge,i=new ge){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new ge){const i=t,n=this.v0,r=this.v1,o=this.v2;return i.set(ba(e,n.x,r.x,o.x),ba(e,n.y,r.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class mf extends $i{constructor(e=new D,t=new D,i=new D){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new D){const i=t,n=this.v0,r=this.v1,o=this.v2;return i.set(ba(e,n.x,r.x,o.x),ba(e,n.y,r.y,o.y),ba(e,n.z,r.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class gf extends $i{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ge){const i=t,n=this.points,r=(n.length-1)*e,o=Math.floor(r),a=r-o,l=n[o===0?o:o-1],c=n[o],h=n[o>n.length-2?n.length-1:o+1],u=n[o>n.length-3?n.length-1:o+2];return i.set(Wp(a,l.x,c.x,h.x,u.x),Wp(a,l.y,c.y,h.y,u.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(new ge().fromArray(n))}return this}}var ch=Object.freeze({__proto__:null,ArcCurve:W0,CatmullRomCurve3:X0,CubicBezierCurve:df,CubicBezierCurve3:Y0,EllipseCurve:Uh,LineCurve:ff,LineCurve3:q0,QuadraticBezierCurve:pf,QuadraticBezierCurve3:mf,SplineCurve:gf});class j0 extends $i{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const i=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new ch[i](t,e))}return this}getPoint(e,t){const i=e*this.getLength(),n=this.getCurveLengths();let r=0;for(;r<n.length;){if(n[r]>=i){const o=n[r]-i,a=this.curves[r],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,n=this.curves.length;i<n;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let i;for(let n=0,r=this.curves;n<r.length;n++){const o=r[n],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let c=0;c<l.length;c++){const h=l[c];i&&i.equals(h)||(t.push(h),i=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push(new ch[n.type]().fromJSON(n))}return this}}class Na extends j0{constructor(e){super(),this.type="Path",this.currentPoint=new ge,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const i=new ff(this.currentPoint.clone(),new ge(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,n){const r=new pf(this.currentPoint.clone(),new ge(e,t),new ge(i,n));return this.curves.push(r),this.currentPoint.set(i,n),this}bezierCurveTo(e,t,i,n,r,o){const a=new df(this.currentPoint.clone(),new ge(e,t),new ge(i,n),new ge(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),i=new gf(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,n,r,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,i,n,r,o),this}absarc(e,t,i,n,r,o){return this.absellipse(e,t,i,i,n,r,o),this}ellipse(e,t,i,n,r,o,a,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+c,t+h,i,n,r,o,a,l),this}absellipse(e,t,i,n,r,o,a,l){const c=new Uh(e,t,i,n,r,o,a,l);if(this.curves.length>0){const u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class il extends _t{constructor(e=[new ge(0,-.5),new ge(.5,0),new ge(0,.5)],t=12,i=0,n=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},t=Math.floor(t),n=wt(n,0,Math.PI*2);const r=[],o=[],a=[],l=[],c=[],h=1/t,u=new D,d=new ge,f=new D,p=new D,v=new D;let m=0,g=0;for(let y=0;y<=e.length-1;y++)switch(y){case 0:m=e[y+1].x-e[y].x,g=e[y+1].y-e[y].y,f.x=g*1,f.y=-m,f.z=g*0,v.copy(f),f.normalize(),l.push(f.x,f.y,f.z);break;case e.length-1:l.push(v.x,v.y,v.z);break;default:m=e[y+1].x-e[y].x,g=e[y+1].y-e[y].y,f.x=g*1,f.y=-m,f.z=g*0,p.copy(f),f.x+=v.x,f.y+=v.y,f.z+=v.z,f.normalize(),l.push(f.x,f.y,f.z),v.copy(p)}for(let y=0;y<=t;y++){const x=i+y*h*n,_=Math.sin(x),E=Math.cos(x);for(let w=0;w<=e.length-1;w++){u.x=e[w].x*_,u.y=e[w].y,u.z=e[w].x*E,o.push(u.x,u.y,u.z),d.x=y/t,d.y=w/(e.length-1),a.push(d.x,d.y);const M=l[3*w+0]*_,T=l[3*w+1],S=l[3*w+0]*E;c.push(M,T,S)}}for(let y=0;y<t;y++)for(let x=0;x<e.length-1;x++){const _=x+y*e.length,E=_,w=_+e.length,M=_+e.length+1,T=_+1;r.push(E,w,T),r.push(M,T,w)}this.setIndex(r),this.setAttribute("position",new je(o,3)),this.setAttribute("uv",new je(a,2)),this.setAttribute("normal",new je(c,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new il(e.points,e.segments,e.phiStart,e.phiLength)}}class Lh extends il{constructor(e=1,t=1,i=4,n=8){const r=new Na;r.absarc(0,-t/2,e,Math.PI*1.5,0),r.absarc(0,t/2,e,0,Math.PI*.5),super(r.getPoints(i),n),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:i,radialSegments:n}}static fromJSON(e){return new Lh(e.radius,e.length,e.capSegments,e.radialSegments)}}class Nh extends _t{constructor(e=1,t=32,i=0,n=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},t=Math.max(3,t);const r=[],o=[],a=[],l=[],c=new D,h=new ge;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let u=0,d=3;u<=t;u++,d+=3){const f=i+u/t*n;c.x=e*Math.cos(f),c.y=e*Math.sin(f),o.push(c.x,c.y,c.z),a.push(0,0,1),h.x=(o[d]/e+1)/2,h.y=(o[d+1]/e+1)/2,l.push(h.x,h.y)}for(let u=1;u<=t;u++)r.push(u,u+1,0);this.setIndex(r),this.setAttribute("position",new je(o,3)),this.setAttribute("normal",new je(a,3)),this.setAttribute("uv",new je(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Nh(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class En extends _t{constructor(e=1,t=1,i=1,n=32,r=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const c=this;n=Math.floor(n),r=Math.floor(r);const h=[],u=[],d=[],f=[];let p=0;const v=[],m=i/2;let g=0;y(),o===!1&&(e>0&&x(!0),t>0&&x(!1)),this.setIndex(h),this.setAttribute("position",new je(u,3)),this.setAttribute("normal",new je(d,3)),this.setAttribute("uv",new je(f,2));function y(){const _=new D,E=new D;let w=0;const M=(t-e)/i;for(let T=0;T<=r;T++){const S=[],b=T/r,U=b*(t-e)+e;for(let I=0;I<=n;I++){const B=I/n,G=B*l+a,j=Math.sin(G),N=Math.cos(G);E.x=U*j,E.y=-b*i+m,E.z=U*N,u.push(E.x,E.y,E.z),_.set(j,M,N).normalize(),d.push(_.x,_.y,_.z),f.push(B,1-b),S.push(p++)}v.push(S)}for(let T=0;T<n;T++)for(let S=0;S<r;S++){const b=v[S][T],U=v[S+1][T],I=v[S+1][T+1],B=v[S][T+1];(e>0||S!==0)&&(h.push(b,U,B),w+=3),(t>0||S!==r-1)&&(h.push(U,I,B),w+=3)}c.addGroup(g,w,0),g+=w}function x(_){const E=p,w=new ge,M=new D;let T=0;const S=_===!0?e:t,b=_===!0?1:-1;for(let I=1;I<=n;I++)u.push(0,m*b,0),d.push(0,b,0),f.push(.5,.5),p++;const U=p;for(let I=0;I<=n;I++){const G=I/n*l+a,j=Math.cos(G),N=Math.sin(G);M.x=S*N,M.y=m*b,M.z=S*j,u.push(M.x,M.y,M.z),d.push(0,b,0),w.x=j*.5+.5,w.y=N*.5*b+.5,f.push(w.x,w.y),p++}for(let I=0;I<n;I++){const B=E+I,G=U+I;_===!0?h.push(G,G+1,B):h.push(G+1,G,B),T+=3}c.addGroup(g,T,_===!0?1:2),g+=T}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new En(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Oh extends En{constructor(e=1,t=1,i=32,n=1,r=!1,o=0,a=Math.PI*2){super(0,e,t,i,n,r,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:o,thetaLength:a}}static fromJSON(e){return new Oh(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class $r extends _t{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};const r=[],o=[];a(n),c(i),h(),this.setAttribute("position",new je(r,3)),this.setAttribute("normal",new je(r.slice(),3)),this.setAttribute("uv",new je(o,2)),n===0?this.computeVertexNormals():this.normalizeNormals();function a(y){const x=new D,_=new D,E=new D;for(let w=0;w<t.length;w+=3)f(t[w+0],x),f(t[w+1],_),f(t[w+2],E),l(x,_,E,y)}function l(y,x,_,E){const w=E+1,M=[];for(let T=0;T<=w;T++){M[T]=[];const S=y.clone().lerp(_,T/w),b=x.clone().lerp(_,T/w),U=w-T;for(let I=0;I<=U;I++)I===0&&T===w?M[T][I]=S:M[T][I]=S.clone().lerp(b,I/U)}for(let T=0;T<w;T++)for(let S=0;S<2*(w-T)-1;S++){const b=Math.floor(S/2);S%2===0?(d(M[T][b+1]),d(M[T+1][b]),d(M[T][b])):(d(M[T][b+1]),d(M[T+1][b+1]),d(M[T+1][b]))}}function c(y){const x=new D;for(let _=0;_<r.length;_+=3)x.x=r[_+0],x.y=r[_+1],x.z=r[_+2],x.normalize().multiplyScalar(y),r[_+0]=x.x,r[_+1]=x.y,r[_+2]=x.z}function h(){const y=new D;for(let x=0;x<r.length;x+=3){y.x=r[x+0],y.y=r[x+1],y.z=r[x+2];const _=m(y)/2/Math.PI+.5,E=g(y)/Math.PI+.5;o.push(_,1-E)}p(),u()}function u(){for(let y=0;y<o.length;y+=6){const x=o[y+0],_=o[y+2],E=o[y+4],w=Math.max(x,_,E),M=Math.min(x,_,E);w>.9&&M<.1&&(x<.2&&(o[y+0]+=1),_<.2&&(o[y+2]+=1),E<.2&&(o[y+4]+=1))}}function d(y){r.push(y.x,y.y,y.z)}function f(y,x){const _=y*3;x.x=e[_+0],x.y=e[_+1],x.z=e[_+2]}function p(){const y=new D,x=new D,_=new D,E=new D,w=new ge,M=new ge,T=new ge;for(let S=0,b=0;S<r.length;S+=9,b+=6){y.set(r[S+0],r[S+1],r[S+2]),x.set(r[S+3],r[S+4],r[S+5]),_.set(r[S+6],r[S+7],r[S+8]),w.set(o[b+0],o[b+1]),M.set(o[b+2],o[b+3]),T.set(o[b+4],o[b+5]),E.copy(y).add(x).add(_).divideScalar(3);const U=m(E);v(w,b+0,y,U),v(M,b+2,x,U),v(T,b+4,_,U)}}function v(y,x,_,E){E<0&&y.x===1&&(o[x]=y.x-1),_.x===0&&_.z===0&&(o[x]=E/2/Math.PI+.5)}function m(y){return Math.atan2(y.z,-y.x)}function g(y){return Math.atan2(-y.y,Math.sqrt(y.x*y.x+y.z*y.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new $r(e.vertices,e.indices,e.radius,e.details)}}class Fh extends $r{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,n=1/i,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Fh(e.radius,e.detail)}}const Bl=new D,zl=new D,Ou=new D,Gl=new _i;class Z0 extends _t{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const n=Math.pow(10,4),r=Math.cos(Ns*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],h=["a","b","c"],u=new Array(3),d={},f=[];for(let p=0;p<l;p+=3){o?(c[0]=o.getX(p),c[1]=o.getX(p+1),c[2]=o.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:v,b:m,c:g}=Gl;if(v.fromBufferAttribute(a,c[0]),m.fromBufferAttribute(a,c[1]),g.fromBufferAttribute(a,c[2]),Gl.getNormal(Ou),u[0]=`${Math.round(v.x*n)},${Math.round(v.y*n)},${Math.round(v.z*n)}`,u[1]=`${Math.round(m.x*n)},${Math.round(m.y*n)},${Math.round(m.z*n)}`,u[2]=`${Math.round(g.x*n)},${Math.round(g.y*n)},${Math.round(g.z*n)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let y=0;y<3;y++){const x=(y+1)%3,_=u[y],E=u[x],w=Gl[h[y]],M=Gl[h[x]],T=`${_}_${E}`,S=`${E}_${_}`;S in d&&d[S]?(Ou.dot(d[S].normal)<=r&&(f.push(w.x,w.y,w.z),f.push(M.x,M.y,M.z)),d[S]=null):T in d||(d[T]={index0:c[y],index1:c[x],normal:Ou.clone()})}}for(const p in d)if(d[p]){const{index0:v,index1:m}=d[p];Bl.fromBufferAttribute(a,v),zl.fromBufferAttribute(a,m),f.push(Bl.x,Bl.y,Bl.z),f.push(zl.x,zl.y,zl.z)}this.setAttribute("position",new je(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Os extends Na{constructor(e){super(e),this.uuid=Ui(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push(new Na().fromJSON(n))}return this}}function Ox(s,e,t=2){const i=e&&e.length,n=i?e[0]*t:s.length;let r=K0(s,0,n,t,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c;if(i&&(r=Gx(s,e,r,t)),s.length>80*t){a=1/0,l=1/0;let h=-1/0,u=-1/0;for(let d=t;d<n;d+=t){const f=s[d],p=s[d+1];f<a&&(a=f),p<l&&(l=p),f>h&&(h=f),p>u&&(u=p)}c=Math.max(h-a,u-l),c=c!==0?32767/c:0}return Oa(r,o,t,a,l,c,0),o}function K0(s,e,t,i,n){let r;if(n===Qx(s,e,t,i)>0)for(let o=e;o<t;o+=i)r=Xp(o/i|0,s[o],s[o+1],r);else for(let o=t-i;o>=e;o-=i)r=Xp(o/i|0,s[o],s[o+1],r);return r&&Do(r,r.next)&&(ka(r),r=r.next),r}function Vs(s,e){if(!s)return s;e||(e=s);let t=s,i;do if(i=!1,!t.steiner&&(Do(t,t.next)||hn(t.prev,t,t.next)===0)){if(ka(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function Oa(s,e,t,i,n,r,o){if(!s)return;!o&&r&&Yx(s,i,n,r);let a=s;for(;s.prev!==s.next;){const l=s.prev,c=s.next;if(r?kx(s,i,n,r):Fx(s)){e.push(l.i,s.i,c.i),ka(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=Bx(Vs(s),e),Oa(s,e,t,i,n,r,2)):o===2&&zx(s,e,t,i,n,r):Oa(Vs(s),e,t,i,n,r,1);break}}}function Fx(s){const e=s.prev,t=s,i=s.next;if(hn(e,t,i)>=0)return!1;const n=e.x,r=t.x,o=i.x,a=e.y,l=t.y,c=i.y,h=Math.min(n,r,o),u=Math.min(a,l,c),d=Math.max(n,r,o),f=Math.max(a,l,c);let p=i.next;for(;p!==e;){if(p.x>=h&&p.x<=d&&p.y>=u&&p.y<=f&&oa(n,a,r,l,o,c,p.x,p.y)&&hn(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function kx(s,e,t,i){const n=s.prev,r=s,o=s.next;if(hn(n,r,o)>=0)return!1;const a=n.x,l=r.x,c=o.x,h=n.y,u=r.y,d=o.y,f=Math.min(a,l,c),p=Math.min(h,u,d),v=Math.max(a,l,c),m=Math.max(h,u,d),g=bd(f,p,e,t,i),y=bd(v,m,e,t,i);let x=s.prevZ,_=s.nextZ;for(;x&&x.z>=g&&_&&_.z<=y;){if(x.x>=f&&x.x<=v&&x.y>=p&&x.y<=m&&x!==n&&x!==o&&oa(a,h,l,u,c,d,x.x,x.y)&&hn(x.prev,x,x.next)>=0||(x=x.prevZ,_.x>=f&&_.x<=v&&_.y>=p&&_.y<=m&&_!==n&&_!==o&&oa(a,h,l,u,c,d,_.x,_.y)&&hn(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;x&&x.z>=g;){if(x.x>=f&&x.x<=v&&x.y>=p&&x.y<=m&&x!==n&&x!==o&&oa(a,h,l,u,c,d,x.x,x.y)&&hn(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;_&&_.z<=y;){if(_.x>=f&&_.x<=v&&_.y>=p&&_.y<=m&&_!==n&&_!==o&&oa(a,h,l,u,c,d,_.x,_.y)&&hn(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function Bx(s,e){let t=s;do{const i=t.prev,n=t.next.next;!Do(i,n)&&Q0(i,t,t.next,n)&&Fa(i,n)&&Fa(n,i)&&(e.push(i.i,t.i,n.i),ka(t),ka(t.next),t=s=n),t=t.next}while(t!==s);return Vs(t)}function zx(s,e,t,i,n,r){let o=s;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&Zx(o,a)){let l=$0(o,a);o=Vs(o,o.next),l=Vs(l,l.next),Oa(o,e,t,i,n,r,0),Oa(l,e,t,i,n,r,0);return}a=a.next}o=o.next}while(o!==s)}function Gx(s,e,t,i){const n=[];for(let r=0,o=e.length;r<o;r++){const a=e[r]*i,l=r<o-1?e[r+1]*i:s.length,c=K0(s,a,l,i,!1);c===c.next&&(c.steiner=!0),n.push(jx(c))}n.sort(Vx);for(let r=0;r<n.length;r++)t=Hx(n[r],t);return t}function Vx(s,e){let t=s.x-e.x;if(t===0&&(t=s.y-e.y,t===0)){const i=(s.next.y-s.y)/(s.next.x-s.x),n=(e.next.y-e.y)/(e.next.x-e.x);t=i-n}return t}function Hx(s,e){const t=Wx(s,e);if(!t)return e;const i=$0(t,s);return Vs(i,i.next),Vs(t,t.next)}function Wx(s,e){let t=e;const i=s.x,n=s.y;let r=-1/0,o;if(Do(s,t))return t;do{if(Do(s,t.next))return t.next;if(n<=t.y&&n>=t.next.y&&t.next.y!==t.y){const u=t.x+(n-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(u<=i&&u>r&&(r=u,o=t.x<t.next.x?t:t.next,u===i))return o}t=t.next}while(t!==e);if(!o)return null;const a=o,l=o.x,c=o.y;let h=1/0;t=o;do{if(i>=t.x&&t.x>=l&&i!==t.x&&J0(n<c?i:r,n,l,c,n<c?r:i,n,t.x,t.y)){const u=Math.abs(n-t.y)/(i-t.x);Fa(t,s)&&(u<h||u===h&&(t.x>o.x||t.x===o.x&&Xx(o,t)))&&(o=t,h=u)}t=t.next}while(t!==a);return o}function Xx(s,e){return hn(s.prev,s,e.prev)<0&&hn(e.next,s,s.next)<0}function Yx(s,e,t,i){let n=s;do n.z===0&&(n.z=bd(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==s);n.prevZ.nextZ=null,n.prevZ=null,qx(n)}function qx(s){let e,t=1;do{let i=s,n;s=null;let r=null;for(e=0;i;){e++;let o=i,a=0;for(let c=0;c<t&&(a++,o=o.nextZ,!!o);c++);let l=t;for(;a>0||l>0&&o;)a!==0&&(l===0||!o||i.z<=o.z)?(n=i,i=i.nextZ,a--):(n=o,o=o.nextZ,l--),r?r.nextZ=n:s=n,n.prevZ=r,r=n;i=o}r.nextZ=null,t*=2}while(e>1);return s}function bd(s,e,t,i,n){return s=(s-t)*n|0,e=(e-i)*n|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function jx(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function J0(s,e,t,i,n,r,o,a){return(n-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(n-o)*(i-a)}function oa(s,e,t,i,n,r,o,a){return!(s===o&&e===a)&&J0(s,e,t,i,n,r,o,a)}function Zx(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!Kx(s,e)&&(Fa(s,e)&&Fa(e,s)&&Jx(s,e)&&(hn(s.prev,s,e.prev)||hn(s,e.prev,e))||Do(s,e)&&hn(s.prev,s,s.next)>0&&hn(e.prev,e,e.next)>0)}function hn(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function Do(s,e){return s.x===e.x&&s.y===e.y}function Q0(s,e,t,i){const n=Hl(hn(s,e,t)),r=Hl(hn(s,e,i)),o=Hl(hn(t,i,s)),a=Hl(hn(t,i,e));return!!(n!==r&&o!==a||n===0&&Vl(s,t,e)||r===0&&Vl(s,i,e)||o===0&&Vl(t,s,i)||a===0&&Vl(t,e,i))}function Vl(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function Hl(s){return s>0?1:s<0?-1:0}function Kx(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&Q0(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function Fa(s,e){return hn(s.prev,s,s.next)<0?hn(s,e,s.next)>=0&&hn(s,s.prev,e)>=0:hn(s,e,s.prev)<0||hn(s,s.next,e)<0}function Jx(s,e){let t=s,i=!1;const n=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&n<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==s);return i}function $0(s,e){const t=Sd(s.i,s.x,s.y),i=Sd(e.i,e.x,e.y),n=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=n,n.prev=t,i.next=t,t.prev=i,r.next=i,i.prev=r,i}function Xp(s,e,t,i){const n=Sd(s,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function ka(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Sd(s,e,t){return{i:s,x:e,y:t,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function Qx(s,e,t,i){let n=0;for(let r=e,o=t-i;r<t;r+=i)n+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return n}class $x{static triangulate(e,t,i=2){return Ox(e,t,i)}}class hr{static area(e){const t=e.length;let i=0;for(let n=t-1,r=0;r<t;n=r++)i+=e[n].x*e[r].y-e[r].x*e[n].y;return i*.5}static isClockWise(e){return hr.area(e)<0}static triangulateShape(e,t){const i=[],n=[],r=[];Yp(e),qp(i,e);let o=e.length;t.forEach(Yp);for(let l=0;l<t.length;l++)n.push(o),o+=t[l].length,qp(i,t[l]);const a=$x.triangulate(i,n);for(let l=0;l<a.length;l+=3)r.push(a.slice(l,l+3));return r}}function Yp(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function qp(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class kh extends _t{constructor(e=new Os([new ge(.5,.5),new ge(-.5,.5),new ge(-.5,-.5),new ge(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,n=[],r=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new je(n,3)),this.setAttribute("uv",new je(r,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,u=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:f-.1,v=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const g=t.extrudePath,y=t.UVGenerator!==void 0?t.UVGenerator:eb;let x,_=!1,E,w,M,T;g&&(x=g.getSpacedPoints(h),_=!0,d=!1,E=g.computeFrenetFrames(h,!1),w=new D,M=new D,T=new D),d||(m=0,f=0,p=0,v=0);const S=a.extractPoints(c);let b=S.shape;const U=S.holes;if(!hr.isClockWise(b)){b=b.reverse();for(let he=0,ue=U.length;he<ue;he++){const ne=U[he];hr.isClockWise(ne)&&(U[he]=ne.reverse())}}function B(he){const ne=10000000000000001e-36;let _e=he[0];for(let le=1;le<=he.length;le++){const P=le%he.length,A=he[P],Z=A.x-_e.x,ae=A.y-_e.y,se=Z*Z+ae*ae,de=Math.max(Math.abs(A.x),Math.abs(A.y),Math.abs(_e.x),Math.abs(_e.y)),we=ne*de*de;if(se<=we){he.splice(P,1),le--;continue}_e=A}}B(b),U.forEach(B);const G=U.length,j=b;for(let he=0;he<G;he++){const ue=U[he];b=b.concat(ue)}function N(he,ue,ne){return ue||console.error("THREE.ExtrudeGeometry: vec does not exist"),he.clone().addScaledVector(ue,ne)}const ee=b.length;function W(he,ue,ne){let _e,le,P;const A=he.x-ue.x,Z=he.y-ue.y,ae=ne.x-he.x,se=ne.y-he.y,de=A*A+Z*Z,we=A*se-Z*ae;if(Math.abs(we)>Number.EPSILON){const ve=Math.sqrt(de),Ae=Math.sqrt(ae*ae+se*se),Xe=ue.x-Z/ve,Re=ue.y+A/ve,Oe=ne.x-se/Ae,ke=ne.y+ae/Ae,ze=((Oe-Xe)*se-(ke-Re)*ae)/(A*se-Z*ae);_e=Xe+A*ze-he.x,le=Re+Z*ze-he.y;const Te=_e*_e+le*le;if(Te<=2)return new ge(_e,le);P=Math.sqrt(Te/2)}else{let ve=!1;A>Number.EPSILON?ae>Number.EPSILON&&(ve=!0):A<-Number.EPSILON?ae<-Number.EPSILON&&(ve=!0):Math.sign(Z)===Math.sign(se)&&(ve=!0),ve?(_e=-Z,le=A,P=Math.sqrt(de)):(_e=A,le=Z,P=Math.sqrt(de/2))}return new ge(_e/P,le/P)}const Y=[];for(let he=0,ue=j.length,ne=ue-1,_e=he+1;he<ue;he++,ne++,_e++)ne===ue&&(ne=0),_e===ue&&(_e=0),Y[he]=W(j[he],j[ne],j[_e]);const Q=[];let z,J=Y.concat();for(let he=0,ue=G;he<ue;he++){const ne=U[he];z=[];for(let _e=0,le=ne.length,P=le-1,A=_e+1;_e<le;_e++,P++,A++)P===le&&(P=0),A===le&&(A=0),z[_e]=W(ne[_e],ne[P],ne[A]);Q.push(z),J=J.concat(z)}const $=[],V=[];for(let he=0;he<m;he++){const ue=he/m,ne=f*Math.cos(ue*Math.PI/2),_e=p*Math.sin(ue*Math.PI/2)+v;for(let le=0,P=j.length;le<P;le++){const A=N(j[le],Y[le],_e);Me(A.x,A.y,-ne),ue==0&&$.push(A)}for(let le=0,P=G;le<P;le++){const A=U[le];z=Q[le];const Z=[];for(let ae=0,se=A.length;ae<se;ae++){const de=N(A[ae],z[ae],_e);Me(de.x,de.y,-ne),ue==0&&Z.push(de)}ue==0&&V.push(Z)}}const H=hr.triangulateShape($,V),K=H.length,q=p+v;for(let he=0;he<ee;he++){const ue=d?N(b[he],J[he],q):b[he];_?(M.copy(E.normals[0]).multiplyScalar(ue.x),w.copy(E.binormals[0]).multiplyScalar(ue.y),T.copy(x[0]).add(M).add(w),Me(T.x,T.y,T.z)):Me(ue.x,ue.y,0)}for(let he=1;he<=h;he++)for(let ue=0;ue<ee;ue++){const ne=d?N(b[ue],J[ue],q):b[ue];_?(M.copy(E.normals[he]).multiplyScalar(ne.x),w.copy(E.binormals[he]).multiplyScalar(ne.y),T.copy(x[he]).add(M).add(w),Me(T.x,T.y,T.z)):Me(ne.x,ne.y,u/h*he)}for(let he=m-1;he>=0;he--){const ue=he/m,ne=f*Math.cos(ue*Math.PI/2),_e=p*Math.sin(ue*Math.PI/2)+v;for(let le=0,P=j.length;le<P;le++){const A=N(j[le],Y[le],_e);Me(A.x,A.y,u+ne)}for(let le=0,P=U.length;le<P;le++){const A=U[le];z=Q[le];for(let Z=0,ae=A.length;Z<ae;Z++){const se=N(A[Z],z[Z],_e);_?Me(se.x,se.y+x[h-1].y,x[h-1].x+ne):Me(se.x,se.y,u+ne)}}}re(),be();function re(){const he=n.length/3;if(d){let ue=0,ne=ee*ue;for(let _e=0;_e<K;_e++){const le=H[_e];ye(le[2]+ne,le[1]+ne,le[0]+ne)}ue=h+m*2,ne=ee*ue;for(let _e=0;_e<K;_e++){const le=H[_e];ye(le[0]+ne,le[1]+ne,le[2]+ne)}}else{for(let ue=0;ue<K;ue++){const ne=H[ue];ye(ne[2],ne[1],ne[0])}for(let ue=0;ue<K;ue++){const ne=H[ue];ye(ne[0]+ee*h,ne[1]+ee*h,ne[2]+ee*h)}}i.addGroup(he,n.length/3-he,0)}function be(){const he=n.length/3;let ue=0;Se(j,ue),ue+=j.length;for(let ne=0,_e=U.length;ne<_e;ne++){const le=U[ne];Se(le,ue),ue+=le.length}i.addGroup(he,n.length/3-he,1)}function Se(he,ue){let ne=he.length;for(;--ne>=0;){const _e=ne;let le=ne-1;le<0&&(le=he.length-1);for(let P=0,A=h+m*2;P<A;P++){const Z=ee*P,ae=ee*(P+1),se=ue+_e+Z,de=ue+le+Z,we=ue+le+ae,ve=ue+_e+ae;We(se,de,we,ve)}}}function Me(he,ue,ne){l.push(he),l.push(ue),l.push(ne)}function ye(he,ue,ne){X(he),X(ue),X(ne);const _e=n.length/3,le=y.generateTopUV(i,n,_e-3,_e-2,_e-1);Fe(le[0]),Fe(le[1]),Fe(le[2])}function We(he,ue,ne,_e){X(he),X(ue),X(_e),X(ue),X(ne),X(_e);const le=n.length/3,P=y.generateSideWallUV(i,n,le-6,le-3,le-2,le-1);Fe(P[0]),Fe(P[1]),Fe(P[3]),Fe(P[1]),Fe(P[2]),Fe(P[3])}function X(he){n.push(l[he*3+0]),n.push(l[he*3+1]),n.push(l[he*3+2])}function Fe(he){r.push(he.x),r.push(he.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return tb(t,i,e)}static fromJSON(e,t){const i=[];for(let r=0,o=e.shapes.length;r<o;r++){const a=t[e.shapes[r]];i.push(a)}const n=e.options.extrudePath;return n!==void 0&&(e.options.extrudePath=new ch[n.type]().fromJSON(n)),new kh(i,e.options)}}const eb={generateTopUV:function(s,e,t,i,n){const r=e[t*3],o=e[t*3+1],a=e[i*3],l=e[i*3+1],c=e[n*3],h=e[n*3+1];return[new ge(r,o),new ge(a,l),new ge(c,h)]},generateSideWallUV:function(s,e,t,i,n,r){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[i*3],h=e[i*3+1],u=e[i*3+2],d=e[n*3],f=e[n*3+1],p=e[n*3+2],v=e[r*3],m=e[r*3+1],g=e[r*3+2];return Math.abs(a-h)<Math.abs(o-c)?[new ge(o,1-l),new ge(c,1-u),new ge(d,1-p),new ge(v,1-g)]:[new ge(a,1-l),new ge(h,1-u),new ge(f,1-p),new ge(m,1-g)]}};function tb(s,e,t){if(t.shapes=[],Array.isArray(s))for(let i=0,n=s.length;i<n;i++){const r=s[i];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Bh extends $r{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,n=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(n,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Bh(e.radius,e.detail)}}class Tr extends $r{constructor(e=1,t=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],n=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,n,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Tr(e.radius,e.detail)}}class er extends _t{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};const r=e/2,o=t/2,a=Math.floor(i),l=Math.floor(n),c=a+1,h=l+1,u=e/a,d=t/l,f=[],p=[],v=[],m=[];for(let g=0;g<h;g++){const y=g*d-o;for(let x=0;x<c;x++){const _=x*u-r;p.push(_,-y,0),v.push(0,0,1),m.push(x/a),m.push(1-g/l)}}for(let g=0;g<l;g++)for(let y=0;y<a;y++){const x=y+c*g,_=y+c*(g+1),E=y+1+c*(g+1),w=y+1+c*g;f.push(x,_,w),f.push(_,E,w)}this.setIndex(f),this.setAttribute("position",new je(p,3)),this.setAttribute("normal",new je(v,3)),this.setAttribute("uv",new je(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new er(e.width,e.height,e.widthSegments,e.heightSegments)}}class zh extends _t{constructor(e=.5,t=1,i=32,n=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:o},i=Math.max(3,i),n=Math.max(1,n);const a=[],l=[],c=[],h=[];let u=e;const d=(t-e)/n,f=new D,p=new ge;for(let v=0;v<=n;v++){for(let m=0;m<=i;m++){const g=r+m/i*o;f.x=u*Math.cos(g),f.y=u*Math.sin(g),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(f.x/t+1)/2,p.y=(f.y/t+1)/2,h.push(p.x,p.y)}u+=d}for(let v=0;v<n;v++){const m=v*(i+1);for(let g=0;g<i;g++){const y=g+m,x=y,_=y+i+1,E=y+i+2,w=y+1;a.push(x,_,w),a.push(_,E,w)}}this.setIndex(a),this.setAttribute("position",new je(l,3)),this.setAttribute("normal",new je(c,3)),this.setAttribute("uv",new je(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new zh(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Gh extends _t{constructor(e=new Os([new ge(0,.5),new ge(-.5,-.5),new ge(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const i=[],n=[],r=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let h=0;h<e.length;h++)c(e[h]),this.addGroup(a,l,h),a+=l,l=0;this.setIndex(i),this.setAttribute("position",new je(n,3)),this.setAttribute("normal",new je(r,3)),this.setAttribute("uv",new je(o,2));function c(h){const u=n.length/3,d=h.extractPoints(t);let f=d.shape;const p=d.holes;hr.isClockWise(f)===!1&&(f=f.reverse());for(let m=0,g=p.length;m<g;m++){const y=p[m];hr.isClockWise(y)===!0&&(p[m]=y.reverse())}const v=hr.triangulateShape(f,p);for(let m=0,g=p.length;m<g;m++){const y=p[m];f=f.concat(y)}for(let m=0,g=f.length;m<g;m++){const y=f[m];n.push(y.x,y.y,0),r.push(0,0,1),o.push(y.x,y.y)}for(let m=0,g=v.length;m<g;m++){const y=v[m],x=y[0]+u,_=y[1]+u,E=y[2]+u;i.push(x,_,E),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return nb(t,e)}static fromJSON(e,t){const i=[];for(let n=0,r=e.shapes.length;n<r;n++){const o=t[e.shapes[n]];i.push(o)}return new Gh(i,e.curveSegments)}}function nb(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,i=s.length;t<i;t++){const n=s[t];e.shapes.push(n.uuid)}else e.shapes.push(s.uuid);return e}class qs extends _t{constructor(e=1,t=32,i=16,n=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:r,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(o+a,Math.PI);let c=0;const h=[],u=new D,d=new D,f=[],p=[],v=[],m=[];for(let g=0;g<=i;g++){const y=[],x=g/i;let _=0;g===0&&o===0?_=.5/t:g===i&&l===Math.PI&&(_=-.5/t);for(let E=0;E<=t;E++){const w=E/t;u.x=-e*Math.cos(n+w*r)*Math.sin(o+x*a),u.y=e*Math.cos(o+x*a),u.z=e*Math.sin(n+w*r)*Math.sin(o+x*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),v.push(d.x,d.y,d.z),m.push(w+_,1-x),y.push(c++)}h.push(y)}for(let g=0;g<i;g++)for(let y=0;y<t;y++){const x=h[g][y+1],_=h[g][y],E=h[g+1][y],w=h[g+1][y+1];(g!==0||o>0)&&f.push(x,_,w),(g!==i-1||l<Math.PI)&&f.push(_,E,w)}this.setIndex(f),this.setAttribute("position",new je(p,3)),this.setAttribute("normal",new je(v,3)),this.setAttribute("uv",new je(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new qs(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Vh extends $r{constructor(e=1,t=0){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],n=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,n,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Vh(e.radius,e.detail)}}class wr extends _t{constructor(e=1,t=.4,i=12,n=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:r},i=Math.floor(i),n=Math.floor(n);const o=[],a=[],l=[],c=[],h=new D,u=new D,d=new D;for(let f=0;f<=i;f++)for(let p=0;p<=n;p++){const v=p/n*r,m=f/i*Math.PI*2;u.x=(e+t*Math.cos(m))*Math.cos(v),u.y=(e+t*Math.cos(m))*Math.sin(v),u.z=t*Math.sin(m),a.push(u.x,u.y,u.z),h.x=e*Math.cos(v),h.y=e*Math.sin(v),d.subVectors(u,h).normalize(),l.push(d.x,d.y,d.z),c.push(p/n),c.push(f/i)}for(let f=1;f<=i;f++)for(let p=1;p<=n;p++){const v=(n+1)*f+p-1,m=(n+1)*(f-1)+p-1,g=(n+1)*(f-1)+p,y=(n+1)*f+p;o.push(v,m,y),o.push(m,g,y)}this.setIndex(o),this.setAttribute("position",new je(a,3)),this.setAttribute("normal",new je(l,3)),this.setAttribute("uv",new je(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new wr(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Hh extends _t{constructor(e=1,t=.4,i=64,n=8,r=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:r,q:o},i=Math.floor(i),n=Math.floor(n);const a=[],l=[],c=[],h=[],u=new D,d=new D,f=new D,p=new D,v=new D,m=new D,g=new D;for(let x=0;x<=i;++x){const _=x/i*r*Math.PI*2;y(_,r,o,e,f),y(_+.01,r,o,e,p),m.subVectors(p,f),g.addVectors(p,f),v.crossVectors(m,g),g.crossVectors(v,m),v.normalize(),g.normalize();for(let E=0;E<=n;++E){const w=E/n*Math.PI*2,M=-t*Math.cos(w),T=t*Math.sin(w);u.x=f.x+(M*g.x+T*v.x),u.y=f.y+(M*g.y+T*v.y),u.z=f.z+(M*g.z+T*v.z),l.push(u.x,u.y,u.z),d.subVectors(u,f).normalize(),c.push(d.x,d.y,d.z),h.push(x/i),h.push(E/n)}}for(let x=1;x<=i;x++)for(let _=1;_<=n;_++){const E=(n+1)*(x-1)+(_-1),w=(n+1)*x+(_-1),M=(n+1)*x+_,T=(n+1)*(x-1)+_;a.push(E,w,T),a.push(w,M,T)}this.setIndex(a),this.setAttribute("position",new je(l,3)),this.setAttribute("normal",new je(c,3)),this.setAttribute("uv",new je(h,2));function y(x,_,E,w,M){const T=Math.cos(x),S=Math.sin(x),b=E/_*x,U=Math.cos(b);M.x=w*(2+U)*.5*T,M.y=w*(2+U)*S*.5,M.z=w*Math.sin(b)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Hh(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Wh extends _t{constructor(e=new mf(new D(-1,-1,0),new D(-1,1,0),new D(1,1,0)),t=64,i=1,n=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:r};const o=e.computeFrenetFrames(t,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new D,l=new D,c=new ge;let h=new D;const u=[],d=[],f=[],p=[];v(),this.setIndex(p),this.setAttribute("position",new je(u,3)),this.setAttribute("normal",new je(d,3)),this.setAttribute("uv",new je(f,2));function v(){for(let x=0;x<t;x++)m(x);m(r===!1?t:0),y(),g()}function m(x){h=e.getPointAt(x/t,h);const _=o.normals[x],E=o.binormals[x];for(let w=0;w<=n;w++){const M=w/n*Math.PI*2,T=Math.sin(M),S=-Math.cos(M);l.x=S*_.x+T*E.x,l.y=S*_.y+T*E.y,l.z=S*_.z+T*E.z,l.normalize(),d.push(l.x,l.y,l.z),a.x=h.x+i*l.x,a.y=h.y+i*l.y,a.z=h.z+i*l.z,u.push(a.x,a.y,a.z)}}function g(){for(let x=1;x<=t;x++)for(let _=1;_<=n;_++){const E=(n+1)*(x-1)+(_-1),w=(n+1)*x+(_-1),M=(n+1)*x+_,T=(n+1)*(x-1)+_;p.push(E,w,T),p.push(w,M,T)}}function y(){for(let x=0;x<=t;x++)for(let _=0;_<=n;_++)c.x=x/t,c.y=_/n,f.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Wh(new ch[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class vf extends _t{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],i=new Set,n=new D,r=new D;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const u=l[c],d=u.start,f=u.count;for(let p=d,v=d+f;p<v;p+=3)for(let m=0;m<3;m++){const g=a.getX(p+m),y=a.getX(p+(m+1)%3);n.fromBufferAttribute(o,g),r.fromBufferAttribute(o,y),jp(n,r,i)===!0&&(t.push(n.x,n.y,n.z),t.push(r.x,r.y,r.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const h=3*a+c,u=3*a+(c+1)%3;n.fromBufferAttribute(o,h),r.fromBufferAttribute(o,u),jp(n,r,i)===!0&&(t.push(n.x,n.y,n.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new je(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function jp(s,e,t){const i=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,n=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(i)===!0||t.has(n)===!0?!1:(t.add(i),t.add(n),!0)}var Zp=Object.freeze({__proto__:null,BoxGeometry:gn,CapsuleGeometry:Lh,CircleGeometry:Nh,ConeGeometry:Oh,CylinderGeometry:En,DodecahedronGeometry:Fh,EdgesGeometry:Z0,ExtrudeGeometry:kh,IcosahedronGeometry:Bh,LatheGeometry:il,OctahedronGeometry:Tr,PlaneGeometry:er,PolyhedronGeometry:$r,RingGeometry:zh,ShapeGeometry:Gh,SphereGeometry:qs,TetrahedronGeometry:Vh,TorusGeometry:wr,TorusKnotGeometry:Hh,TubeGeometry:Wh,WireframeGeometry:vf});class ev extends ii{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Be(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class tv extends Si{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class _f extends ii{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Be(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Jr,this.normalScale=new ge(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new bi,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class nv extends _f{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ge(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return wt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Be(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Be(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Be(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class hh extends ii{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Be(16777215),this.specular=new Be(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Jr,this.normalScale=new ge(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new bi,this.combine=ja,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class iv extends ii{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Be(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Jr,this.normalScale=new ge(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class rv extends ii{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Jr,this.normalScale=new ge(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class yf extends ii{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Be(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Jr,this.normalScale=new ge(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new bi,this.combine=ja,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class rl extends ii{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=x0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Xh extends ii{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class sv extends ii{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Be(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Jr,this.normalScale=new ge(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ov extends Nn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Ds(s,e){return!s||s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function av(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function lv(s){function e(n,r){return s[n]-s[r]}const t=s.length,i=new Array(t);for(let n=0;n!==t;++n)i[n]=n;return i.sort(e),i}function Md(s,e,t){const i=s.length,n=new s.constructor(i);for(let r=0,o=0;o!==i;++r){const a=t[r]*e;for(let l=0;l!==e;++l)n[o++]=s[a+l]}return n}function xf(s,e,t,i){let n=1,r=s[0];for(;r!==void 0&&r[i]===void 0;)r=s[n++];if(r===void 0)return;let o=r[i];if(o!==void 0)if(Array.isArray(o))do o=r[i],o!==void 0&&(e.push(r.time),t.push(...o)),r=s[n++];while(r!==void 0);else if(o.toArray!==void 0)do o=r[i],o!==void 0&&(e.push(r.time),o.toArray(t,t.length)),r=s[n++];while(r!==void 0);else do o=r[i],o!==void 0&&(e.push(r.time),t.push(o)),r=s[n++];while(r!==void 0)}function ib(s,e,t,i,n=30){const r=s.clone();r.name=e;const o=[];for(let l=0;l<r.tracks.length;++l){const c=r.tracks[l],h=c.getValueSize(),u=[],d=[];for(let f=0;f<c.times.length;++f){const p=c.times[f]*n;if(!(p<t||p>=i)){u.push(c.times[f]);for(let v=0;v<h;++v)d.push(c.values[f*h+v])}}u.length!==0&&(c.times=Ds(u,c.times.constructor),c.values=Ds(d,c.values.constructor),o.push(c))}r.tracks=o;let a=1/0;for(let l=0;l<r.tracks.length;++l)a>r.tracks[l].times[0]&&(a=r.tracks[l].times[0]);for(let l=0;l<r.tracks.length;++l)r.tracks[l].shift(-1*a);return r.resetDuration(),r}function rb(s,e=0,t=s,i=30){i<=0&&(i=30);const n=t.tracks.length,r=e/i;for(let o=0;o<n;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=s.tracks.find(function(g){return g.name===a.name&&g.ValueTypeName===l});if(c===void 0)continue;let h=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let d=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=a.times.length-1;let v;if(r<=a.times[0]){const g=h,y=u-h;v=a.values.slice(g,y)}else if(r>=a.times[p]){const g=p*u+h,y=g+u-h;v=a.values.slice(g,y)}else{const g=a.createInterpolant(),y=h,x=u-h;g.evaluate(r),v=g.resultBuffer.slice(y,x)}l==="quaternion"&&new Gt().fromArray(v).normalize().conjugate().toArray(v);const m=c.times.length;for(let g=0;g<m;++g){const y=g*f+d;if(l==="quaternion")Gt.multiplyQuaternionsFlat(c.values,y,v,0,c.values,y);else{const x=f-d*2;for(let _=0;_<x;++_)c.values[y+_]-=v[_]}}}return s.blendMode=tf,s}class sb{static convertArray(e,t){return Ds(e,t)}static isTypedArray(e){return av(e)}static getKeyframeOrder(e){return lv(e)}static sortedArray(e,t,i){return Md(e,t,i)}static flattenJSON(e,t,i,n){xf(e,t,i,n)}static subclip(e,t,i,n,r=30){return ib(e,t,i,n,r)}static makeClipAdditive(e,t=0,i=e,n=30){return rb(e,t,i,n)}}class sl{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=n!==void 0?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let i=this._cachedIndex,n=t[i],r=t[i-1];e:{t:{let o;n:{i:if(!(e<n)){for(let a=i+2;;){if(n===void 0){if(e<r)break i;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===a)break;if(r=n,n=t[++i],e<n)break t}o=t.length;break n}if(!(e>=r)){const a=t[1];e<a&&(i=2,r=a);for(let l=i-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(n=r,r=t[--i-1],e>=r)break t}o=i,i=0;break n}break e}for(;i<o;){const a=i+o>>>1;e<t[a]?o=a:i=a+1}if(n=t[i],r=t[i-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===void 0)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=e*n;for(let o=0;o!==n;++o)t[o]=i[r+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class cv extends sl{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ps,endingEnd:Ps}}intervalChanged_(e,t,i){const n=this.parameterPositions;let r=e-2,o=e+1,a=n[r],l=n[o];if(a===void 0)switch(this.getSettings_().endingStart){case Is:r=e,a=2*t-i;break;case Pa:r=n.length-2,a=t+n[r]-n[r+1];break;default:r=e,a=i}if(l===void 0)switch(this.getSettings_().endingEnd){case Is:o=e,l=2*i-t;break;case Pa:o=1,l=i+n[1]-n[0];break;default:o=e-1,l=t}const c=(i-t)*.5,h=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-i),this._offsetPrev=r*h,this._offsetNext=o*h}interpolate_(e,t,i,n){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,f=this._weightNext,p=(i-t)/(n-t),v=p*p,m=v*p,g=-d*m+2*d*v-d*p,y=(1+d)*m+(-1.5-2*d)*v+(-.5+d)*p+1,x=(-1-f)*m+(1.5+f)*v+.5*p,_=f*m-f*v;for(let E=0;E!==a;++E)r[E]=g*o[h+E]+y*o[c+E]+x*o[l+E]+_*o[u+E];return r}}class bf extends sl{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=(i-t)/(n-t),u=1-h;for(let d=0;d!==a;++d)r[d]=o[c+d]*u+o[l+d]*h;return r}}class hv extends sl{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class Gi{constructor(e,t,i,n){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ds(t,this.TimeBufferType),this.values=Ds(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:Ds(e.times,Array),values:Ds(e.values,Array)};const n=e.getInterpolation();n!==e.DefaultInterpolation&&(i.interpolation=n)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new hv(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new bf(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new cv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ra:t=this.InterpolantFactoryMethodDiscrete;break;case oh:t=this.InterpolantFactoryMethodLinear;break;case mc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ra;case this.InterpolantFactoryMethodLinear:return oh;case this.InterpolantFactoryMethodSmooth:return mc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){const i=this.times,n=i.length;let r=0,o=n-1;for(;r!==n&&i[r]<e;)++r;for(;o!==-1&&i[o]>t;)--o;if(++o,r!==0||o!==n){r>=o&&(o=Math.max(o,1),r=o-1);const a=this.getValueSize();this.times=i.slice(r,o),this.values=this.values.slice(r*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,n=this.values,r=i.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==r;a++){const l=i[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(n!==void 0&&av(n))for(let a=0,l=n.length;a!==l;++a){const c=n[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),i=this.getValueSize(),n=this.getInterpolation()===mc,r=e.length-1;let o=1;for(let a=1;a<r;++a){let l=!1;const c=e[a],h=e[a+1];if(c!==h&&(a!==1||c!==e[0]))if(n)l=!0;else{const u=a*i,d=u-i,f=u+i;for(let p=0;p!==i;++p){const v=t[u+p];if(v!==t[d+p]||v!==t[f+p]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const u=a*i,d=o*i;for(let f=0;f!==i;++f)t[d+f]=t[u+f]}++o}}if(r>0){e[o]=e[r];for(let a=r*i,l=o*i,c=0;c!==i;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=e.slice(0,o),this.values=t.slice(0,o*i)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),i=this.constructor,n=new i(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}Gi.prototype.ValueTypeName="";Gi.prototype.TimeBufferType=Float32Array;Gi.prototype.ValueBufferType=Float32Array;Gi.prototype.DefaultInterpolation=oh;class js extends Gi{constructor(e,t,i){super(e,t,i)}}js.prototype.ValueTypeName="bool";js.prototype.ValueBufferType=Array;js.prototype.DefaultInterpolation=Ra;js.prototype.InterpolantFactoryMethodLinear=void 0;js.prototype.InterpolantFactoryMethodSmooth=void 0;class Sf extends Gi{constructor(e,t,i,n){super(e,t,i,n)}}Sf.prototype.ValueTypeName="color";class Ba extends Gi{constructor(e,t,i,n){super(e,t,i,n)}}Ba.prototype.ValueTypeName="number";class uv extends sl{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(i-t)/(n-t);let c=e*a;for(let h=c+a;c!==h;c+=4)Gt.slerpFlat(r,0,o,c-a,o,c,l);return r}}class Oo extends Gi{constructor(e,t,i,n){super(e,t,i,n)}InterpolantFactoryMethodLinear(e){return new uv(this.times,this.values,this.getValueSize(),e)}}Oo.prototype.ValueTypeName="quaternion";Oo.prototype.InterpolantFactoryMethodSmooth=void 0;class Zs extends Gi{constructor(e,t,i){super(e,t,i)}}Zs.prototype.ValueTypeName="string";Zs.prototype.ValueBufferType=Array;Zs.prototype.DefaultInterpolation=Ra;Zs.prototype.InterpolantFactoryMethodLinear=void 0;Zs.prototype.InterpolantFactoryMethodSmooth=void 0;class Hs extends Gi{constructor(e,t,i,n){super(e,t,i,n)}}Hs.prototype.ValueTypeName="vector";class Ws{constructor(e="",t=-1,i=[],n=Mh){this.name=e,this.tracks=i,this.duration=t,this.blendMode=n,this.uuid=Ui(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],i=e.tracks,n=1/(e.fps||1);for(let o=0,a=i.length;o!==a;++o)t.push(ab(i[o]).scale(n));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,o=i.length;r!==o;++r)t.push(Gi.toJSON(i[r]));return n}static CreateFromMorphTargetSequence(e,t,i,n){const r=t.length,o=[];for(let a=0;a<r;a++){let l=[],c=[];l.push((a+r-1)%r,a,(a+1)%r),c.push(0,1,0);const h=lv(l);l=Md(l,1,h),c=Md(c,1,h),!n&&l[0]===0&&(l.push(r),c.push(c[0])),o.push(new Ba(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/i))}return new this(e,-1,o)}static findByName(e,t){let i=e;if(!Array.isArray(e)){const n=e;i=n.geometry&&n.geometry.animations||n.animations}for(let n=0;n<i.length;n++)if(i[n].name===t)return i[n];return null}static CreateClipsFromMorphTargetSequences(e,t,i){const n={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],h=c.name.match(r);if(h&&h.length>1){const u=h[1];let d=n[u];d||(n[u]=d=[]),d.push(c)}}const o=[];for(const a in n)o.push(this.CreateFromMorphTargetSequence(a,n[a],t,i));return o}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(u,d,f,p,v){if(f.length!==0){const m=[],g=[];xf(f,m,g,p),m.length!==0&&v.push(new u(d,m,g))}},n=[],r=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let u=0;u<c.length;u++){const d=c[u].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let p;for(p=0;p<d.length;p++)if(d[p].morphTargets)for(let v=0;v<d[p].morphTargets.length;v++)f[d[p].morphTargets[v]]=-1;for(const v in f){const m=[],g=[];for(let y=0;y!==d[p].morphTargets.length;++y){const x=d[p];m.push(x.time),g.push(x.morphTarget===v?1:0)}n.push(new Ba(".morphTargetInfluence["+v+"]",m,g))}l=f.length*o}else{const f=".bones["+t[u].name+"]";i(Hs,f+".position",d,"pos",n),i(Oo,f+".quaternion",d,"rot",n),i(Hs,f+".scale",d,"scl",n)}}return n.length===0?null:new this(r,l,n,a)}resetDuration(){const e=this.tracks;let t=0;for(let i=0,n=e.length;i!==n;++i){const r=this.tracks[i];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function ob(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ba;case"vector":case"vector2":case"vector3":case"vector4":return Hs;case"color":return Sf;case"quaternion":return Oo;case"bool":case"boolean":return js;case"string":return Zs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function ab(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=ob(s.type);if(s.times===void 0){const t=[],i=[];xf(s.keys,t,i,"value"),s.times=t,s.values=i}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const Ar={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class Mf{constructor(e,t,i){const n=this;let r=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(h){a++,r===!1&&n.onStart!==void 0&&n.onStart(h,o,a),r=!0},this.itemEnd=function(h){o++,n.onProgress!==void 0&&n.onProgress(h,o,a),o===a&&(r=!1,n.onLoad!==void 0&&n.onLoad())},this.itemError=function(h){n.onError!==void 0&&n.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=c.length;u<d;u+=2){const f=c[u],p=c[u+1];if(f.global&&(f.lastIndex=0),f.test(h))return p}return null}}}const Ks=new Mf;class Hn{constructor(e){this.manager=e!==void 0?e:Ks,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(n,r){i.load(e,n,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Hn.DEFAULT_MATERIAL_NAME="__DEFAULT";const br={};class lb extends Error{constructor(e,t){super(e),this.response=t}}class Ji extends Hn{constructor(e){super(e),this.mimeType="",this.responseType=""}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=Ar.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(br[e]!==void 0){br[e].push({onLoad:t,onProgress:i,onError:n});return}br[e]=[],br[e].push({onLoad:t,onProgress:i,onError:n});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=br[e],u=c.body.getReader(),d=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let v=0;const m=new ReadableStream({start(g){y();function y(){u.read().then(({done:x,value:_})=>{if(x)g.close();else{v+=_.byteLength;const E=new ProgressEvent("progress",{lengthComputable:p,loaded:v,total:f});for(let w=0,M=h.length;w<M;w++){const T=h[w];T.onProgress&&T.onProgress(E)}g.enqueue(_),y()}},x=>{g.error(x)})}}});return new Response(m)}else throw new lb(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,a));case"json":return c.json();default:if(a==="")return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(a),d=u&&u[1]?u[1].toLowerCase():void 0,f=new TextDecoder(d);return c.arrayBuffer().then(p=>f.decode(p))}}}).then(c=>{Ar.add(e,c);const h=br[e];delete br[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onLoad&&f.onLoad(c)}}).catch(c=>{const h=br[e];if(h===void 0)throw this.manager.itemError(e),c;delete br[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onError&&f.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class cb extends Hn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=new Ji(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),r.manager.itemError(e)}},i,n)}parse(e){const t=[];for(let i=0;i<e.length;i++){const n=Ws.parse(e[i]);t.push(n)}return t}}class hb extends Hn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=[],a=new Dh,l=new Ji(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(r.withCredentials);let c=0;function h(u){l.load(e[u],function(d){const f=r.parse(d,!0);o[u]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},c+=1,c===6&&(f.mipmapCount===1&&(a.minFilter=bn),a.image=o,a.format=f.format,a.needsUpdate=!0,t&&t(a))},i,n)}if(Array.isArray(e))for(let u=0,d=e.length;u<d;++u)h(u);else l.load(e,function(u){const d=r.parse(u,!0);if(d.isCubemap){const f=d.mipmaps.length/d.mipmapCount;for(let p=0;p<f;p++){o[p]={mipmaps:[]};for(let v=0;v<d.mipmapCount;v++)o[p].mipmaps.push(d.mipmaps[p*d.mipmapCount+v]),o[p].format=d.format,o[p].width=d.width,o[p].height=d.height}a.image=o}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=bn),a.format=d.format,a.needsUpdate=!0,t&&t(a)},i,n);return a}}class za extends Hn{constructor(e){super(e)}load(e,t,i,n){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Ar.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const a=La("img");function l(){h(),Ar.add(e,this),t&&t(this),r.manager.itemEnd(e)}function c(u){h(),n&&n(u),r.manager.itemError(e),r.manager.itemEnd(e)}function h(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(e),a.src=e,a}}class ub extends Hn{constructor(e){super(e)}load(e,t,i,n){const r=new Qa;r.colorSpace=on;const o=new za(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(e[c],function(h){r.images[c]=h,a++,a===6&&(r.needsUpdate=!0,t&&t(r))},void 0,n)}for(let c=0;c<e.length;++c)l(c);return r}}class dv extends Hn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=new cr,a=new Ji(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(e,function(l){let c;try{c=r.parse(l)}catch(h){if(n!==void 0)n(h);else{console.error(h);return}}c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:yi,o.wrapT=c.wrapT!==void 0?c.wrapT:yi,o.magFilter=c.magFilter!==void 0?c.magFilter:bn,o.minFilter=c.minFilter!==void 0?c.minFilter:bn,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0&&(o.colorSpace=c.colorSpace),c.flipY!==void 0&&(o.flipY=c.flipY),c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=Zi),c.mipmapCount===1&&(o.minFilter=bn),c.generateMipmaps!==void 0&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,t&&t(o,c)},i,n),o}}class fv extends Hn{constructor(e){super(e)}load(e,t,i,n){const r=new fn,o=new za(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){r.image=a,r.needsUpdate=!0,t!==void 0&&t(r)},i,n),r}}class es extends Ut{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Be(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class pv extends es{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Ut.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Be(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Fu=new rt,Kp=new D,Jp=new D;class wf{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ge(512,512),this.map=null,this.mapPass=null,this.matrix=new rt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new nl,this._frameExtents=new ge(1,1),this._viewportCount=1,this._viewports=[new Rt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;Kp.setFromMatrixPosition(e.matrixWorld),t.position.copy(Kp),Jp.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Jp),t.updateMatrixWorld(),Fu.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Fu),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(Fu)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class db extends wf{constructor(){super(new xn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,i=Po*2*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(i!==t.fov||n!==t.aspect||r!==t.far)&&(t.fov=i,t.aspect=n,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Ef extends es{constructor(e,t,i=0,n=Math.PI/3,r=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Ut.DEFAULT_UP),this.updateMatrix(),this.target=new Ut,this.distance=i,this.angle=n,this.penumbra=r,this.decay=o,this.map=null,this.shadow=new db}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Qp=new rt,ea=new D,ku=new D;class fb extends wf{constructor(){super(new xn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ge(4,2),this._viewportCount=6,this._viewports=[new Rt(2,1,1,1),new Rt(0,1,1,1),new Rt(3,1,1,1),new Rt(1,1,1,1),new Rt(3,0,1,1),new Rt(1,0,1,1)],this._cubeDirections=[new D(1,0,0),new D(-1,0,0),new D(0,0,1),new D(0,0,-1),new D(0,1,0),new D(0,-1,0)],this._cubeUps=[new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,0,1),new D(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,n=this.matrix,r=e.distance||i.far;r!==i.far&&(i.far=r,i.updateProjectionMatrix()),ea.setFromMatrixPosition(e.matrixWorld),i.position.copy(ea),ku.copy(i.position),ku.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(ku),i.updateMatrixWorld(),n.makeTranslation(-ea.x,-ea.y,-ea.z),Qp.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Qp)}}class Tf extends es{constructor(e,t,i=0,n=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new fb}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class ts extends Ah{constructor(e=-1,t=1,i=1,n=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let r=i-e,o=i+e,a=n+t,l=n-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class pb extends wf{constructor(){super(new ts(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Af extends es{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ut.DEFAULT_UP),this.updateMatrix(),this.target=new Ut,this.shadow=new pb}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Cf extends es{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class mv extends es{constructor(e,t,i=10,n=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class gv{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new D)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,n=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*n),t.addScaledVector(o[2],.488603*r),t.addScaledVector(o[3],.488603*i),t.addScaledVector(o[4],1.092548*(i*n)),t.addScaledVector(o[5],1.092548*(n*r)),t.addScaledVector(o[6],.315392*(3*r*r-1)),t.addScaledVector(o[7],1.092548*(i*r)),t.addScaledVector(o[8],.546274*(i*i-n*n)),t}getIrradianceAt(e,t){const i=e.x,n=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*n),t.addScaledVector(o[2],2*.511664*r),t.addScaledVector(o[3],2*.511664*i),t.addScaledVector(o[4],2*.429043*i*n),t.addScaledVector(o[5],2*.429043*n*r),t.addScaledVector(o[6],.743125*r*r-.247708),t.addScaledVector(o[7],2*.429043*i*r),t.addScaledVector(o[8],.429043*(i*i-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(e,t+n*3);return this}toArray(e=[],t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(e,t+n*3);return e}static getBasisAt(e,t){const i=e.x,n=e.y,r=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*r,t[3]=.488603*i,t[4]=1.092548*i*n,t[5]=1.092548*n*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*i*r,t[8]=.546274*(i*i-n*n)}}class vv extends es{constructor(e=new gv,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Yh extends Hn{constructor(e){super(e),this.textures={}}load(e,t,i,n){const r=this,o=new Ji(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),r.manager.itemError(e)}},i,n)}parse(e){const t=this.textures;function i(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const n=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(n.uuid=e.uuid),e.name!==void 0&&(n.name=e.name),e.color!==void 0&&n.color!==void 0&&n.color.setHex(e.color),e.roughness!==void 0&&(n.roughness=e.roughness),e.metalness!==void 0&&(n.metalness=e.metalness),e.sheen!==void 0&&(n.sheen=e.sheen),e.sheenColor!==void 0&&(n.sheenColor=new Be().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(n.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&n.emissive!==void 0&&n.emissive.setHex(e.emissive),e.specular!==void 0&&n.specular!==void 0&&n.specular.setHex(e.specular),e.specularIntensity!==void 0&&(n.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&n.specularColor!==void 0&&n.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(n.shininess=e.shininess),e.clearcoat!==void 0&&(n.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(n.dispersion=e.dispersion),e.iridescence!==void 0&&(n.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(n.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(n.transmission=e.transmission),e.thickness!==void 0&&(n.thickness=e.thickness),e.attenuationDistance!==void 0&&(n.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&n.attenuationColor!==void 0&&n.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(n.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(n.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(n.fog=e.fog),e.flatShading!==void 0&&(n.flatShading=e.flatShading),e.blending!==void 0&&(n.blending=e.blending),e.combine!==void 0&&(n.combine=e.combine),e.side!==void 0&&(n.side=e.side),e.shadowSide!==void 0&&(n.shadowSide=e.shadowSide),e.opacity!==void 0&&(n.opacity=e.opacity),e.transparent!==void 0&&(n.transparent=e.transparent),e.alphaTest!==void 0&&(n.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(n.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(n.depthFunc=e.depthFunc),e.depthTest!==void 0&&(n.depthTest=e.depthTest),e.depthWrite!==void 0&&(n.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(n.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(n.blendSrc=e.blendSrc),e.blendDst!==void 0&&(n.blendDst=e.blendDst),e.blendEquation!==void 0&&(n.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(n.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(n.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(n.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&n.blendColor!==void 0&&n.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(n.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(n.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(n.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(n.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(n.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(n.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(n.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(n.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(n.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(n.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(n.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(n.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(n.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(n.rotation=e.rotation),e.linewidth!==void 0&&(n.linewidth=e.linewidth),e.dashSize!==void 0&&(n.dashSize=e.dashSize),e.gapSize!==void 0&&(n.gapSize=e.gapSize),e.scale!==void 0&&(n.scale=e.scale),e.polygonOffset!==void 0&&(n.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(n.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(n.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(n.dithering=e.dithering),e.alphaToCoverage!==void 0&&(n.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(n.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(n.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(n.visible=e.visible),e.toneMapped!==void 0&&(n.toneMapped=e.toneMapped),e.userData!==void 0&&(n.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const o=e.uniforms[r];switch(n.uniforms[r]={},o.type){case"t":n.uniforms[r].value=i(o.value);break;case"c":n.uniforms[r].value=new Be().setHex(o.value);break;case"v2":n.uniforms[r].value=new ge().fromArray(o.value);break;case"v3":n.uniforms[r].value=new D().fromArray(o.value);break;case"v4":n.uniforms[r].value=new Rt().fromArray(o.value);break;case"m3":n.uniforms[r].value=new Mt().fromArray(o.value);break;case"m4":n.uniforms[r].value=new rt().fromArray(o.value);break;default:n.uniforms[r].value=o.value}}if(e.defines!==void 0&&(n.defines=e.defines),e.vertexShader!==void 0&&(n.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(n.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(n.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)n.extensions[r]=e.extensions[r];if(e.lights!==void 0&&(n.lights=e.lights),e.clipping!==void 0&&(n.clipping=e.clipping),e.size!==void 0&&(n.size=e.size),e.sizeAttenuation!==void 0&&(n.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(n.map=i(e.map)),e.matcap!==void 0&&(n.matcap=i(e.matcap)),e.alphaMap!==void 0&&(n.alphaMap=i(e.alphaMap)),e.bumpMap!==void 0&&(n.bumpMap=i(e.bumpMap)),e.bumpScale!==void 0&&(n.bumpScale=e.bumpScale),e.normalMap!==void 0&&(n.normalMap=i(e.normalMap)),e.normalMapType!==void 0&&(n.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),n.normalScale=new ge().fromArray(r)}return e.displacementMap!==void 0&&(n.displacementMap=i(e.displacementMap)),e.displacementScale!==void 0&&(n.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(n.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(n.roughnessMap=i(e.roughnessMap)),e.metalnessMap!==void 0&&(n.metalnessMap=i(e.metalnessMap)),e.emissiveMap!==void 0&&(n.emissiveMap=i(e.emissiveMap)),e.emissiveIntensity!==void 0&&(n.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(n.specularMap=i(e.specularMap)),e.specularIntensityMap!==void 0&&(n.specularIntensityMap=i(e.specularIntensityMap)),e.specularColorMap!==void 0&&(n.specularColorMap=i(e.specularColorMap)),e.envMap!==void 0&&(n.envMap=i(e.envMap)),e.envMapRotation!==void 0&&n.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(n.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(n.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(n.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(n.lightMap=i(e.lightMap)),e.lightMapIntensity!==void 0&&(n.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(n.aoMap=i(e.aoMap)),e.aoMapIntensity!==void 0&&(n.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(n.gradientMap=i(e.gradientMap)),e.clearcoatMap!==void 0&&(n.clearcoatMap=i(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(n.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(n.clearcoatNormalMap=i(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(n.clearcoatNormalScale=new ge().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(n.iridescenceMap=i(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(n.iridescenceThicknessMap=i(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(n.transmissionMap=i(e.transmissionMap)),e.thicknessMap!==void 0&&(n.thicknessMap=i(e.thicknessMap)),e.anisotropyMap!==void 0&&(n.anisotropyMap=i(e.anisotropyMap)),e.sheenColorMap!==void 0&&(n.sheenColorMap=i(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(n.sheenRoughnessMap=i(e.sheenRoughnessMap)),n}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return Yh.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:ev,SpriteMaterial:No,RawShaderMaterial:tv,ShaderMaterial:Si,PointsMaterial:cf,MeshPhysicalMaterial:nv,MeshStandardMaterial:_f,MeshPhongMaterial:hh,MeshToonMaterial:iv,MeshNormalMaterial:rv,MeshLambertMaterial:yf,MeshDepthMaterial:rl,MeshDistanceMaterial:Xh,MeshBasicMaterial:Ln,MeshMatcapMaterial:sv,LineDashedMaterial:ov,LineBasicMaterial:Nn,Material:ii};return new t[e]}}class uh{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class qh extends _t{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class _v extends Hn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=new Ji(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),r.manager.itemError(e)}},i,n)}parse(e){const t={},i={};function n(f,p){if(t[p]!==void 0)return t[p];const m=f.interleavedBuffers[p],g=r(f,m.buffer),y=So(m.type,g),x=new Ph(y,m.stride);return x.uuid=m.uuid,t[p]=x,x}function r(f,p){if(i[p]!==void 0)return i[p];const m=f.arrayBuffers[p],g=new Uint32Array(m).buffer;return i[p]=g,g}const o=e.isInstancedBufferGeometry?new qh:new _t,a=e.data.index;if(a!==void 0){const f=So(a.type,a.array);o.setIndex(new Tt(f,1))}const l=e.data.attributes;for(const f in l){const p=l[f];let v;if(p.isInterleavedBufferAttribute){const m=n(e.data,p.data);v=new Ii(m,p.itemSize,p.offset,p.normalized)}else{const m=So(p.type,p.array),g=p.isInstancedBufferAttribute?Gs:Tt;v=new g(m,p.itemSize,p.normalized)}p.name!==void 0&&(v.name=p.name),p.usage!==void 0&&v.setUsage(p.usage),o.setAttribute(f,v)}const c=e.data.morphAttributes;if(c)for(const f in c){const p=c[f],v=[];for(let m=0,g=p.length;m<g;m++){const y=p[m];let x;if(y.isInterleavedBufferAttribute){const _=n(e.data,y.data);x=new Ii(_,y.itemSize,y.offset,y.normalized)}else{const _=So(y.type,y.array);x=new Tt(_,y.itemSize,y.normalized)}y.name!==void 0&&(x.name=y.name),v.push(x)}o.morphAttributes[f]=v}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const u=e.data.groups||e.data.drawcalls||e.data.offsets;if(u!==void 0)for(let f=0,p=u.length;f!==p;++f){const v=u[f];o.addGroup(v.start,v.count,v.materialIndex)}const d=e.data.boundingSphere;if(d!==void 0){const f=new D;d.center!==void 0&&f.fromArray(d.center),o.boundingSphere=new Tn(f,d.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class mb extends Hn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=this.path===""?uh.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new Ji(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(u){n!==void 0&&n(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}const h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){n!==void 0&&n(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(c,t)},i,n)}async loadAsync(e,t){const i=this,n=this.path===""?uh.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;const r=new Ji(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const o=await r.loadAsync(e,t),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await i.parseAsync(a)}parse(e,t){const i=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,n),o=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,r,l,a,i),h=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,h),this.bindLightTargets(c),t!==void 0){let u=!1;for(const d in o)if(o[d].data instanceof HTMLImageElement){u=!0;break}u===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),n=this.parseGeometries(e.geometries,i),r=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,r),a=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,n,a,o,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),this.bindLightTargets(l),l}parseShapes(e){const t={};if(e!==void 0)for(let i=0,n=e.length;i<n;i++){const r=new Os().fromJSON(e[i]);t[r.uuid]=r}return t}parseSkeletons(e,t){const i={},n={};if(t.traverse(function(r){r.isBone&&(n[r.uuid]=r)}),e!==void 0)for(let r=0,o=e.length;r<o;r++){const a=new tl().fromJSON(e[r],n);i[a.uuid]=a}return i}parseGeometries(e,t){const i={};if(e!==void 0){const n=new _v;for(let r=0,o=e.length;r<o;r++){let a;const l=e[r];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=n.parse(l);break;default:l.type in Zp?a=Zp[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),l.userData!==void 0&&(a.userData=l.userData),i[l.uuid]=a}}return i}parseMaterials(e,t){const i={},n={};if(e!==void 0){const r=new Yh;r.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];i[l.uuid]===void 0&&(i[l.uuid]=r.parse(l)),n[l.uuid]=i[l.uuid]}}return n}parseAnimations(e){const t={};if(e!==void 0)for(let i=0;i<e.length;i++){const n=e[i],r=Ws.parse(n);t[r.uuid]=r}return t}parseImages(e,t){const i=this,n={};let r;function o(l){return i.manager.itemStart(l),r.load(l,function(){i.manager.itemEnd(l)},void 0,function(){i.manager.itemError(l),i.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:i.resourcePath+c;return o(h)}else return l.data?{data:So(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new Mf(t);r=new za(l),r.setCrossOrigin(this.crossOrigin);for(let c=0,h=e.length;c<h;c++){const u=e[c],d=u.url;if(Array.isArray(d)){const f=[];for(let p=0,v=d.length;p<v;p++){const m=d[p],g=a(m);g!==null&&(g instanceof HTMLImageElement?f.push(g):f.push(new cr(g.data,g.width,g.height)))}n[u.uuid]=new Zr(f)}else{const f=a(u.url);n[u.uuid]=new Zr(f)}}}return n}async parseImagesAsync(e){const t=this,i={};let n;async function r(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await n.loadAsync(l)}else return o.data?{data:So(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){n=new za(this.manager),n.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const l=e[o],c=l.url;if(Array.isArray(c)){const h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u],p=await r(f);p!==null&&(p instanceof HTMLImageElement?h.push(p):h.push(new cr(p.data,p.width,p.height)))}i[l.uuid]=new Zr(h)}else{const h=await r(l.url);i[l.uuid]=new Zr(h)}}}return i}parseTextures(e,t){function i(r,o){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),o[r])}const n={};if(e!==void 0)for(let r=0,o=e.length;r<o;r++){const a=e[r];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],c=l.data;let h;Array.isArray(c)?(h=new Qa,c.length===6&&(h.needsUpdate=!0)):(c&&c.data?h=new cr:h=new fn,c&&(h.needsUpdate=!0)),h.source=l,h.uuid=a.uuid,a.name!==void 0&&(h.name=a.name),a.mapping!==void 0&&(h.mapping=i(a.mapping,gb)),a.channel!==void 0&&(h.channel=a.channel),a.offset!==void 0&&h.offset.fromArray(a.offset),a.repeat!==void 0&&h.repeat.fromArray(a.repeat),a.center!==void 0&&h.center.fromArray(a.center),a.rotation!==void 0&&(h.rotation=a.rotation),a.wrap!==void 0&&(h.wrapS=i(a.wrap[0],$p),h.wrapT=i(a.wrap[1],$p)),a.format!==void 0&&(h.format=a.format),a.internalFormat!==void 0&&(h.internalFormat=a.internalFormat),a.type!==void 0&&(h.type=a.type),a.colorSpace!==void 0&&(h.colorSpace=a.colorSpace),a.minFilter!==void 0&&(h.minFilter=i(a.minFilter,em)),a.magFilter!==void 0&&(h.magFilter=i(a.magFilter,em)),a.anisotropy!==void 0&&(h.anisotropy=a.anisotropy),a.flipY!==void 0&&(h.flipY=a.flipY),a.generateMipmaps!==void 0&&(h.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(h.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(h.compareFunction=a.compareFunction),a.userData!==void 0&&(h.userData=a.userData),n[a.uuid]=h}return n}parseObject(e,t,i,n,r){let o;function a(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function l(d){if(d!==void 0){if(Array.isArray(d)){const f=[];for(let p=0,v=d.length;p<v;p++){const m=d[p];i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),f.push(i[m])}return f}return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),i[d]}}function c(d){return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),n[d]}let h,u;switch(e.type){case"Scene":o=new $a,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new Be(e.background):o.background=c(e.background)),e.environment!==void 0&&(o.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Rh(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Ch(e.fog.color,e.fog.density)),e.fog.name!==""&&(o.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&o.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(o.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&o.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":o=new xn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new ts(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new Cf(e.color,e.intensity);break;case"DirectionalLight":o=new Af(e.color,e.intensity),o.target=e.target||"";break;case"PointLight":o=new Tf(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new mv(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new Ef(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),o.target=e.target||"";break;case"HemisphereLight":o=new pv(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new vv().fromJSON(e);break;case"SkinnedMesh":h=a(e.geometry),u=l(e.material),o=new lf(h,u),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":h=a(e.geometry),u=l(e.material),o=new Ne(h,u);break;case"InstancedMesh":h=a(e.geometry),u=l(e.material);const d=e.count,f=e.instanceMatrix,p=e.instanceColor;o=new k0(h,u,d),o.instanceMatrix=new Gs(new Float32Array(f.array),16),p!==void 0&&(o.instanceColor=new Gs(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":h=a(e.geometry),u=l(e.material),o=new B0(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,u),o.geometry=h,o.perObjectFrustumCulled=e.perObjectFrustumCulled,o.sortObjects=e.sortObjects,o._drawRanges=e.drawRanges,o._reservedRanges=e.reservedRanges,o._visibility=e.visibility,o._active=e.active,o._bounds=e.bounds.map(v=>{const m=new Sn;m.min.fromArray(v.boxMin),m.max.fromArray(v.boxMax);const g=new Tn;return g.radius=v.sphereRadius,g.center.fromArray(v.sphereCenter),{boxInitialized:v.boxInitialized,box:m,sphereInitialized:v.sphereInitialized,sphere:g}}),o._maxInstanceCount=e.maxInstanceCount,o._maxVertexCount=e.maxVertexCount,o._maxIndexCount=e.maxIndexCount,o._geometryInitialized=e.geometryInitialized,o._geometryCount=e.geometryCount,o._matricesTexture=c(e.matricesTexture.uuid),e.colorsTexture!==void 0&&(o._colorsTexture=c(e.colorsTexture.uuid));break;case"LOD":o=new F0;break;case"Line":o=new Gn(a(e.geometry),l(e.material));break;case"LineLoop":o=new z0(a(e.geometry),l(e.material));break;case"LineSegments":o=new Qi(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":o=new G0(a(e.geometry),l(e.material));break;case"Sprite":o=new el(l(e.material));break;case"Group":o=new ki;break;case"Bone":o=new Ih;break;default:o=new Ut}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(o.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let f=0;f<d.length;f++)o.add(this.parseObject(d[f],t,i,n,r))}if(e.animations!==void 0){const d=e.animations;for(let f=0;f<d.length;f++){const p=d[f];o.animations.push(r[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const d=e.levels;for(let f=0;f<d.length;f++){const p=d[f],v=o.getObjectByProperty("uuid",p.object);v!==void 0&&o.addLevel(v,p.distance,p.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(i){if(i.isSkinnedMesh===!0&&i.skeleton!==void 0){const n=t[i.skeleton];n===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",i.skeleton):i.bind(n,i.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const i=t.target,n=e.getObjectByProperty("uuid",i);n!==void 0?t.target=n:t.target=new Ut}})}}const gb={UVMapping:gh,CubeReflectionMapping:Dr,CubeRefractionMapping:Kr,EquirectangularReflectionMapping:Ta,EquirectangularRefractionMapping:Aa,CubeUVReflectionMapping:Uo},$p={RepeatWrapping:ji,ClampToEdgeWrapping:yi,MirroredRepeatWrapping:Ca},em={NearestFilter:Vn,NearestMipmapNearestFilter:Xd,NearestMipmapLinearFilter:bo,LinearFilter:bn,LinearMipmapNearestFilter:pa,LinearMipmapLinearFilter:Zi};class vb extends Hn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Ar.get(e);if(o!==void 0){if(r.manager.itemStart(e),o.then){o.then(c=>{t&&t(c),r.manager.itemEnd(e)}).catch(c=>{n&&n(c)});return}return setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader;const l=fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(c){return Ar.add(e,c),t&&t(c),r.manager.itemEnd(e),c}).catch(function(c){n&&n(c),Ar.remove(e),r.manager.itemError(e),r.manager.itemEnd(e)});Ar.add(e,l),r.manager.itemStart(e)}}let Wl;class Rf{static getContext(){return Wl===void 0&&(Wl=new(window.AudioContext||window.webkitAudioContext)),Wl}static setContext(e){Wl=e}}class _b extends Hn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=new Ji(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){try{const c=l.slice(0);Rf.getContext().decodeAudioData(c,function(u){t(u)}).catch(a)}catch(c){a(c)}},i,n);function a(l){n?n(l):console.error(l),r.manager.itemError(e)}}}const tm=new rt,nm=new rt,ds=new rt;class yb{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new xn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new xn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,ds.copy(e.projectionMatrix);const n=t.eyeSep/2,r=n*t.near/t.focus,o=t.near*Math.tan(Ns*t.fov*.5)/t.zoom;let a,l;nm.elements[12]=-n,tm.elements[12]=n,a=-o*t.aspect+r,l=o*t.aspect+r,ds.elements[0]=2*t.near/(l-a),ds.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(ds),a=-o*t.aspect-r,l=o*t.aspect-r,ds.elements[0]=2*t.near/(l-a),ds.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(ds)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(nm),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(tm)}}class yv extends xn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e,this.index=0}}class Pf{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=im(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=im();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function im(){return performance.now()}const fs=new D,rm=new Gt,xb=new D,ps=new D;class bb extends Ut{constructor(){super(),this.type="AudioListener",this.context=Rf.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Pf}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(fs,rm,xb),ps.set(0,0,-1).applyQuaternion(rm),t.positionX){const n=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(fs.x,n),t.positionY.linearRampToValueAtTime(fs.y,n),t.positionZ.linearRampToValueAtTime(fs.z,n),t.forwardX.linearRampToValueAtTime(ps.x,n),t.forwardY.linearRampToValueAtTime(ps.y,n),t.forwardZ.linearRampToValueAtTime(ps.z,n),t.upX.linearRampToValueAtTime(i.x,n),t.upY.linearRampToValueAtTime(i.y,n),t.upZ.linearRampToValueAtTime(i.z,n)}else t.setPosition(fs.x,fs.y,fs.z),t.setOrientation(ps.x,ps.y,ps.z,i.x,i.y,i.z)}}class xv extends Ut{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),e.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const ms=new D,sm=new Gt,Sb=new D,gs=new D;class Mb extends xv{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ms,sm,Sb),gs.set(0,0,1).applyQuaternion(sm);const t=this.panner;if(t.positionX){const i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ms.x,i),t.positionY.linearRampToValueAtTime(ms.y,i),t.positionZ.linearRampToValueAtTime(ms.z,i),t.orientationX.linearRampToValueAtTime(gs.x,i),t.orientationY.linearRampToValueAtTime(gs.y,i),t.orientationZ.linearRampToValueAtTime(gs.z,i)}else t.setPosition(ms.x,ms.y,ms.z),t.setOrientation(gs.x,gs.y,gs.z)}}class wb{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}class bv{constructor(e,t,i){this.binding=e,this.valueSize=i;let n,r,o;switch(t){case"quaternion":n=this._slerp,r=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(i*6),this._workIndex=5;break;case"string":case"bool":n=this._select,r=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(i*5);break;default:n=this._lerp,r=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(i*5)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=r,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const i=this.buffer,n=this.valueSize,r=e*n+n;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==n;++a)i[r+a]=i[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(i,r,0,a,n)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,i=this.valueSize,n=i*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,i=this.buffer,n=e*t+t,r=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const l=t*this._origIndex;this._mixBufferRegion(i,n,l,1-r,t)}o>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(i[l]!==i[l+t]){a.setValue(i,n);break}}saveOriginalState(){const e=this.binding,t=this.buffer,i=this.valueSize,n=i*this._origIndex;e.getValue(t,n);for(let r=i,o=n;r!==o;++r)t[r]=t[n+r%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,n,r){if(n>=.5)for(let o=0;o!==r;++o)e[t+o]=e[i+o]}_slerp(e,t,i,n){Gt.slerpFlat(e,t,e,t,e,i,n)}_slerpAdditive(e,t,i,n,r){const o=this._workIndex*r;Gt.multiplyQuaternionsFlat(e,o,e,t,e,i),Gt.slerpFlat(e,t,e,t,e,o,n)}_lerp(e,t,i,n,r){const o=1-n;for(let a=0;a!==r;++a){const l=t+a;e[l]=e[l]*o+e[i+a]*n}}_lerpAdditive(e,t,i,n,r){for(let o=0;o!==r;++o){const a=t+o;e[a]=e[a]+e[i+o]*n}}}const If="\\[\\]\\.:\\/",Eb=new RegExp("["+If+"]","g"),Df="[^"+If+"]",Tb="[^"+If.replace("\\.","")+"]",Ab=/((?:WC+[\/:])*)/.source.replace("WC",Df),Cb=/(WCOD+)?/.source.replace("WCOD",Tb),Rb=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Df),Pb=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Df),Ib=new RegExp("^"+Ab+Cb+Rb+Pb+"$"),Db=["material","materials","bones","map"];class Ub{constructor(e,t,i){const n=i||Bt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];n!==void 0&&n.getValue(e,t)}setValue(e,t){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}}class Bt{constructor(e,t,i){this.path=t,this.parsedPath=i||Bt.parseTrackName(t),this.node=Bt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new Bt.Composite(e,t,i):new Bt(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Eb,"")}static parseTrackName(e){const t=Ib.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(n!==void 0&&n!==-1){const r=i.nodeName.substring(n+1);Db.indexOf(r)!==-1&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=r)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(i!==void 0)return i}if(e.children){const i=function(r){for(let o=0;o<r.length;o++){const a=r[o];if(a.name===t||a.uuid===t)return a;const l=i(a.children);if(l)return l}return null},n=i(e.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)e[t++]=i[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,i=t.objectName,n=t.propertyName;let r=t.propertyIndex;if(e||(e=Bt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(i){let c=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===c){c=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[n];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+n+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?a=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(n==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=n;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Bt.Composite=Ub;Bt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Bt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Bt.prototype.GetterByBindingType=[Bt.prototype._getValue_direct,Bt.prototype._getValue_array,Bt.prototype._getValue_arrayElement,Bt.prototype._getValue_toArray];Bt.prototype.SetterByBindingTypeAndVersioning=[[Bt.prototype._setValue_direct,Bt.prototype._setValue_direct_setNeedsUpdate,Bt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Bt.prototype._setValue_array,Bt.prototype._setValue_array_setNeedsUpdate,Bt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Bt.prototype._setValue_arrayElement,Bt.prototype._setValue_arrayElement_setNeedsUpdate,Bt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Bt.prototype._setValue_fromArray,Bt.prototype._setValue_fromArray_setNeedsUpdate,Bt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Lb{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Ui(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let i=0,n=arguments.length;i!==n;++i)e[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,i=this._paths,n=this._parsedPaths,r=this._bindings,o=r.length;let a,l=e.length,c=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){const d=arguments[h],f=d.uuid;let p=t[f];if(p===void 0){p=l++,t[f]=p,e.push(d);for(let v=0,m=o;v!==m;++v)r[v].push(new Bt(d,i[v],n[v]))}else if(p<c){a=e[p];const v=--c,m=e[v];t[m.uuid]=p,e[p]=m,t[f]=v,e[v]=d;for(let g=0,y=o;g!==y;++g){const x=r[g],_=x[v];let E=x[p];x[p]=_,E===void 0&&(E=new Bt(d,i[g],n[g])),x[v]=E}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length;let r=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,h=t[c];if(h!==void 0&&h>=r){const u=r++,d=e[u];t[d.uuid]=h,e[h]=d,t[c]=u,e[u]=l;for(let f=0,p=n;f!==p;++f){const v=i[f],m=v[u],g=v[h];v[h]=m,v[u]=g}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length;let r=this.nCachedObjects_,o=e.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],h=c.uuid,u=t[h];if(u!==void 0)if(delete t[h],u<r){const d=--r,f=e[d],p=--o,v=e[p];t[f.uuid]=u,e[u]=f,t[v.uuid]=d,e[d]=v,e.pop();for(let m=0,g=n;m!==g;++m){const y=i[m],x=y[d],_=y[p];y[u]=x,y[d]=_,y.pop()}}else{const d=--o,f=e[d];d>0&&(t[f.uuid]=u),e[u]=f,e.pop();for(let p=0,v=n;p!==v;++p){const m=i[p];m[u]=m[d],m.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const i=this._bindingsIndicesByPath;let n=i[e];const r=this._bindings;if(n!==void 0)return r[n];const o=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,h=this.nCachedObjects_,u=new Array(c);n=r.length,i[e]=n,o.push(e),a.push(t),r.push(u);for(let d=h,f=l.length;d!==f;++d){const p=l[d];u[d]=new Bt(p,e,t)}return u}unsubscribe_(e){const t=this._bindingsIndicesByPath,i=t[e];if(i!==void 0){const n=this._paths,r=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],c=e[a];t[c]=i,o[i]=l,o.pop(),r[i]=r[a],r.pop(),n[i]=n[a],n.pop()}}}class Sv{constructor(e,t,i=null,n=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=n;const r=t.tracks,o=r.length,a=new Array(o),l={endingStart:Ps,endingEnd:Ps};for(let c=0;c!==o;++c){const h=r[c].createInterpolant(null);a[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=_0,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i=!1){if(e.fadeOut(t),this.fadeIn(t),i===!0){const n=this._clip.duration,r=e._clip.duration,o=r/n,a=n/r;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,i=!1){return e.crossFadeFrom(this,t,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){const n=this._mixer,r=n.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=r,l[1]=r+i,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,n){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const l=(e-r)*i;l<0||i===0?t=0:(this._startTime=null,t=i*l)}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case tf:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(o),c[h].accumulateAdditive(a);break;case Mh:default:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(o),c[h].accumulate(n,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(i!==null){const n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopFading(),n===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,i=this.loop;let n=this.time+e,r=this._loopCount;const o=i===y0;if(e===0)return r===-1?n:o&&(r&1)===1?t-n:n;if(i===v0){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(n>=t)n=t;else if(n<0)n=0;else{this.time=n;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),n>=t||n<0){const a=Math.floor(n/t);n-=t*a,r+=Math.abs(a);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=n;if(o&&(r&1)===1)return t-n}return n}_setEndings(e,t,i){const n=this._interpolantSettings;i?(n.endingStart=Is,n.endingEnd=Is):(e?n.endingStart=this.zeroSlopeAtStart?Is:Ps:n.endingStart=Pa,t?n.endingEnd=this.zeroSlopeAtEnd?Is:Ps:n.endingEnd=Pa)}_scheduleFading(e,t,i){const n=this._mixer,r=n.time;let o=this._weightInterpolant;o===null&&(o=n._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=r,l[0]=t,a[1]=r+e,l[1]=i,this}}const Nb=new Float32Array(1);class Ob extends mr{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const i=e._localRoot||this._root,n=e._clip.tracks,r=n.length,o=e._propertyBindings,a=e._interpolants,l=i.uuid,c=this._bindingsByRootAndName;let h=c[l];h===void 0&&(h={},c[l]=h);for(let u=0;u!==r;++u){const d=n[u],f=d.name;let p=h[f];if(p!==void 0)++p.referenceCount,o[u]=p;else{if(p=o[u],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,f));continue}const v=t&&t._propertyBindings[u].binding.parsedPath;p=new bv(Bt.create(i,f,v),d.ValueTypeName,d.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,f),o[u]=p}a[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const i=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,i)}const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const r=t[i];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const r=t[i];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,i){const n=this._actions,r=this._actionsByClip;let o=r[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=n.length,n.push(e),o.actionByRoot[i]=e}_removeInactiveAction(e){const t=this._actions,i=t[t.length-1],n=e._cacheIndex;i._cacheIndex=n,t[n]=i,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,o=this._actionsByClip,a=o[r],l=a.knownActions,c=l[l.length-1],h=e._byClipCacheIndex;c._byClipCacheIndex=h,l[h]=c,l.pop(),e._byClipCacheIndex=null;const u=a.actionByRoot,d=(e._localRoot||this._root).uuid;delete u[d],l.length===0&&delete o[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const r=t[i];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,i=e._cacheIndex,n=this._nActiveActions++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_takeBackAction(e){const t=this._actions,i=e._cacheIndex,n=--this._nActiveActions,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_addInactiveBinding(e,t,i){const n=this._bindingsByRootAndName,r=this._bindings;let o=n[t];o===void 0&&(o={},n[t]=o),o[i]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,i=e.binding,n=i.rootNode.uuid,r=i.path,o=this._bindingsByRootAndName,a=o[n],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[r],Object.keys(a).length===0&&delete o[n]}_lendBinding(e){const t=this._bindings,i=e._cacheIndex,n=this._nActiveBindings++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_takeBackBinding(e){const t=this._bindings,i=e._cacheIndex,n=--this._nActiveBindings,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let i=e[t];return i===void 0&&(i=new bf(new Float32Array(2),new Float32Array(2),1,Nb),i.__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){const t=this._controlInterpolants,i=e.__cacheIndex,n=--this._nActiveControlInterpolants,r=t[n];e.__cacheIndex=n,t[n]=e,r.__cacheIndex=i,t[i]=r}clipAction(e,t,i){const n=t||this._root,r=n.uuid;let o=typeof e=="string"?Ws.findByName(n,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let c=null;if(i===void 0&&(o!==null?i=o.blendMode:i=Mh),l!==void 0){const u=l.actionByRoot[r];if(u!==void 0&&u.blendMode===i)return u;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const h=new Sv(this,o,t,i);return this._bindAction(h,c),this._addInactiveAction(h,a,r),h}existingAction(e,t){const i=t||this._root,n=i.uuid,r=typeof e=="string"?Ws.findByName(i,e):e,o=r?r.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[n]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let i=t-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;const t=this._actions,i=this._nActiveActions,n=this.time+=e,r=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==i;++c)t[c]._update(n,e,r,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,i=e.uuid,n=this._actionsByClip,r=n[i];if(r!==void 0){const o=r.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const h=c._cacheIndex,u=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(c)}delete n[i]}}uncacheRoot(e){const t=e.uuid,i=this._actionsByClip;for(const o in i){const a=i[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const n=this._bindingsByRootAndName,r=n[t];if(r!==void 0)for(const o in r){const a=r[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const i=this.existingAction(e,t);i!==null&&(this._deactivateAction(i),this._removeInactiveAction(i))}}class Fb extends wh{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isRenderTarget3D=!0,this.depth=i,this.texture=new Eh(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class kb extends wh{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isRenderTargetArray=!0,this.depth=i,this.texture=new Ka(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class Uf{constructor(e){this.value=e}clone(){return new Uf(this.value.clone===void 0?this.value:this.value.clone())}}let Bb=0;class zb extends mr{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:Bb++}),this.name="",this.usage=Da,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let i=0,n=t.length;i<n;i++){const r=Array.isArray(t[i])?t[i]:[t[i]];for(let o=0;o<r.length;o++)this.uniforms.push(r[o].clone())}return this}clone(){return new this.constructor().copy(this)}}class dh extends Ph{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class Gb{constructor(e,t,i,n,r){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=n,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const om=new rt;class jh{constructor(e,t,i=0,n=1/0){this.ray=new Qr(e,t),this.near=i,this.far=n,this.camera=null,this.layers=new Th,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return om.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(om),this}intersectObject(e,t=!0,i=[]){return wd(e,this,i,t),i.sort(am),i}intersectObjects(e,t=!0,i=[]){for(let n=0,r=e.length;n<r;n++)wd(e[n],this,i,t);return i.sort(am),i}}function am(s,e){return s.distance-e.distance}function wd(s,e,t,i){let n=!0;if(s.layers.test(e.layers)&&s.raycast(e,t)===!1&&(n=!1),n===!0&&i===!0){const r=s.children;for(let o=0,a=r.length;o<a;o++)wd(r[o],e,t,!0)}}class fh{constructor(e=1,t=0,i=0){this.radius=e,this.phi=t,this.theta=i}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=wt(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(wt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class Vb{constructor(e=1,t=0,i=0){this.radius=e,this.theta=t,this.y=i}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}clone(){return new this.constructor().copy(this)}}class Lf{constructor(e,t,i,n){Lf.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,i,n)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let i=0;i<4;i++)this.elements[i]=e[i+t];return this}set(e,t,i,n){const r=this.elements;return r[0]=e,r[2]=t,r[1]=i,r[3]=n,this}}const lm=new ge;class Hb{constructor(e=new ge(1/0,1/0),t=new ge(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=lm.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,lm).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const cm=new D,Xl=new D;class Mv{constructor(e=new D,t=new D){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){cm.subVectors(e,this.start),Xl.subVectors(this.end,this.start);const i=Xl.dot(Xl);let r=Xl.dot(cm)/i;return t&&(r=wt(r,0,1)),r}closestPointToPoint(e,t,i){const n=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const hm=new D;class Wb extends Ut{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const i=new _t,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,h=a/l*Math.PI*2;n.push(Math.cos(c),Math.sin(c),1,Math.cos(h),Math.sin(h),1)}i.setAttribute("position",new je(n,3));const r=new Nn({fog:!1,toneMapped:!1});this.cone=new Qi(i,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),hm.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(hm),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Hr=new D,Yl=new rt,Bu=new rt;class Xb extends Qi{constructor(e){const t=wv(e),i=new _t,n=[],r=[],o=new Be(0,0,1),a=new Be(0,1,0);for(let c=0;c<t.length;c++){const h=t[c];h.parent&&h.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(o.r,o.g,o.b),r.push(a.r,a.g,a.b))}i.setAttribute("position",new je(n,3)),i.setAttribute("color",new je(r,3));const l=new Nn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,i=this.geometry,n=i.getAttribute("position");Bu.copy(this.root.matrixWorld).invert();for(let r=0,o=0;r<t.length;r++){const a=t[r];a.parent&&a.parent.isBone&&(Yl.multiplyMatrices(Bu,a.matrixWorld),Hr.setFromMatrixPosition(Yl),n.setXYZ(o,Hr.x,Hr.y,Hr.z),Yl.multiplyMatrices(Bu,a.parent.matrixWorld),Hr.setFromMatrixPosition(Yl),n.setXYZ(o+1,Hr.x,Hr.y,Hr.z),o+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function wv(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push(...wv(s.children[t]));return e}class Yb extends Ne{constructor(e,t,i){const n=new qs(t,4,2),r=new Ln({wireframe:!0,fog:!1,toneMapped:!1});super(n,r),this.light=e,this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const qb=new D,um=new Be,dm=new Be;class jb extends Ut{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="HemisphereLightHelper";const n=new Tr(t);n.rotateY(Math.PI*.5),this.material=new Ln({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=n.getAttribute("position"),o=new Float32Array(r.count*3);n.setAttribute("color",new Tt(o,3)),this.add(new Ne(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");um.copy(this.light.color),dm.copy(this.light.groundColor);for(let i=0,n=t.count;i<n;i++){const r=i<n/2?um:dm;t.setXYZ(i,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(qb.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Zb extends Qi{constructor(e=10,t=10,i=4473924,n=8947848){i=new Be(i),n=new Be(n);const r=t/2,o=e/t,a=e/2,l=[],c=[];for(let d=0,f=0,p=-a;d<=t;d++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const v=d===r?i:n;v.toArray(c,f),f+=3,v.toArray(c,f),f+=3,v.toArray(c,f),f+=3,v.toArray(c,f),f+=3}const h=new _t;h.setAttribute("position",new je(l,3)),h.setAttribute("color",new je(c,3));const u=new Nn({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Kb extends Qi{constructor(e=10,t=16,i=8,n=64,r=4473924,o=8947848){r=new Be(r),o=new Be(o);const a=[],l=[];if(t>1)for(let u=0;u<t;u++){const d=u/t*(Math.PI*2),f=Math.sin(d)*e,p=Math.cos(d)*e;a.push(0,0,0),a.push(f,0,p);const v=u&1?r:o;l.push(v.r,v.g,v.b),l.push(v.r,v.g,v.b)}for(let u=0;u<i;u++){const d=u&1?r:o,f=e-e/i*u;for(let p=0;p<n;p++){let v=p/n*(Math.PI*2),m=Math.sin(v)*f,g=Math.cos(v)*f;a.push(m,0,g),l.push(d.r,d.g,d.b),v=(p+1)/n*(Math.PI*2),m=Math.sin(v)*f,g=Math.cos(v)*f,a.push(m,0,g),l.push(d.r,d.g,d.b)}}const c=new _t;c.setAttribute("position",new je(a,3)),c.setAttribute("color",new je(l,3));const h=new Nn({vertexColors:!0,toneMapped:!1});super(c,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const fm=new D,ql=new D,pm=new D;class Jb extends Ut{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="DirectionalLightHelper",t===void 0&&(t=1);let n=new _t;n.setAttribute("position",new je([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new Nn({fog:!1,toneMapped:!1});this.lightPlane=new Gn(n,r),this.add(this.lightPlane),n=new _t,n.setAttribute("position",new je([0,0,0,0,0,1],3)),this.targetLine=new Gn(n,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),fm.setFromMatrixPosition(this.light.matrixWorld),ql.setFromMatrixPosition(this.light.target.matrixWorld),pm.subVectors(ql,fm),this.lightPlane.lookAt(ql),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(ql),this.targetLine.scale.z=pm.length()}}const jl=new D,mn=new Ah;class Qb extends Qi{constructor(e){const t=new _t,i=new Nn({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],r=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,v){l(p),l(v)}function l(p){n.push(0,0,0),r.push(0,0,0),o[p]===void 0&&(o[p]=[]),o[p].push(n.length/3-1)}t.setAttribute("position",new je(n,3)),t.setAttribute("color",new je(r,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const c=new Be(16755200),h=new Be(16711680),u=new Be(43775),d=new Be(16777215),f=new Be(3355443);this.setColors(c,h,u,d,f)}setColors(e,t,i,n,r){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,i.r,i.g,i.b),a.setXYZ(33,i.r,i.g,i.b),a.setXYZ(34,i.r,i.g,i.b),a.setXYZ(35,i.r,i.g,i.b),a.setXYZ(36,i.r,i.g,i.b),a.setXYZ(37,i.r,i.g,i.b),a.setXYZ(38,n.r,n.g,n.b),a.setXYZ(39,n.r,n.g,n.b),a.setXYZ(40,r.r,r.g,r.b),a.setXYZ(41,r.r,r.g,r.b),a.setXYZ(42,r.r,r.g,r.b),a.setXYZ(43,r.r,r.g,r.b),a.setXYZ(44,r.r,r.g,r.b),a.setXYZ(45,r.r,r.g,r.b),a.setXYZ(46,r.r,r.g,r.b),a.setXYZ(47,r.r,r.g,r.b),a.setXYZ(48,r.r,r.g,r.b),a.setXYZ(49,r.r,r.g,r.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,i=1,n=1;mn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const r=this.camera.coordinateSystem===Ki?-1:0;yn("c",t,e,mn,0,0,r),yn("t",t,e,mn,0,0,1),yn("n1",t,e,mn,-1,-1,r),yn("n2",t,e,mn,i,-1,r),yn("n3",t,e,mn,-1,n,r),yn("n4",t,e,mn,i,n,r),yn("f1",t,e,mn,-1,-1,1),yn("f2",t,e,mn,i,-1,1),yn("f3",t,e,mn,-1,n,1),yn("f4",t,e,mn,i,n,1),yn("u1",t,e,mn,i*.7,n*1.1,r),yn("u2",t,e,mn,-1*.7,n*1.1,r),yn("u3",t,e,mn,0,n*2,r),yn("cf1",t,e,mn,-1,0,1),yn("cf2",t,e,mn,i,0,1),yn("cf3",t,e,mn,0,-1,1),yn("cf4",t,e,mn,0,n,1),yn("cn1",t,e,mn,-1,0,r),yn("cn2",t,e,mn,i,0,r),yn("cn3",t,e,mn,0,-1,r),yn("cn4",t,e,mn,0,n,r),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function yn(s,e,t,i,n,r,o){jl.set(n,r,o).unproject(i);const a=e[s];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,h=a.length;c<h;c++)l.setXYZ(a[c],jl.x,jl.y,jl.z)}}const Zl=new Sn;class $b extends Qi{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(8*3),r=new _t;r.setIndex(new Tt(i,1)),r.setAttribute("position",new Tt(n,3)),super(r,new Nn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Zl.setFromObject(this.object),Zl.isEmpty())return;const e=Zl.min,t=Zl.max,i=this.geometry.attributes.position,n=i.array;n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=e.x,n[4]=t.y,n[5]=t.z,n[6]=e.x,n[7]=e.y,n[8]=t.z,n[9]=t.x,n[10]=e.y,n[11]=t.z,n[12]=t.x,n[13]=t.y,n[14]=e.z,n[15]=e.x,n[16]=t.y,n[17]=e.z,n[18]=e.x,n[19]=e.y,n[20]=e.z,n[21]=t.x,n[22]=e.y,n[23]=e.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class e1 extends Qi{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new _t;r.setIndex(new Tt(i,1)),r.setAttribute("position",new je(n,3)),super(r,new Nn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class t1 extends Gn{constructor(e,t=1,i=16776960){const n=i,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new _t;o.setAttribute("position",new je(r,3)),o.computeBoundingSphere(),super(o,new Nn({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new _t;l.setAttribute("position",new je(a,3)),l.computeBoundingSphere(),this.add(new Ne(l,new Ln({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const mm=new D;let Kl,zu;class n1 extends Ut{constructor(e=new D(0,0,1),t=new D(0,0,0),i=1,n=16776960,r=i*.2,o=r*.2){super(),this.type="ArrowHelper",Kl===void 0&&(Kl=new _t,Kl.setAttribute("position",new je([0,0,0,0,1,0],3)),zu=new En(0,.5,1,5,1),zu.translate(0,-.5,0)),this.position.copy(t),this.line=new Gn(Kl,new Nn({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Ne(zu,new Ln({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,r,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{mm.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(mm,t)}}setLength(e,t=e*.2,i=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class i1 extends Qi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],n=new _t;n.setAttribute("position",new je(t,3)),n.setAttribute("color",new je(i,3));const r=new Nn({vertexColors:!0,toneMapped:!1});super(n,r),this.type="AxesHelper"}setColors(e,t,i){const n=new Be,r=this.geometry.attributes.color.array;return n.set(e),n.toArray(r,0),n.toArray(r,3),n.set(t),n.toArray(r,6),n.toArray(r,9),n.set(i),n.toArray(r,12),n.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class r1{constructor(){this.type="ShapePath",this.color=new Be,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Na,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,n){return this.currentPath.quadraticCurveTo(e,t,i,n),this}bezierCurveTo(e,t,i,n,r,o){return this.currentPath.bezierCurveTo(e,t,i,n,r,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(g){const y=[];for(let x=0,_=g.length;x<_;x++){const E=g[x],w=new Os;w.curves=E.curves,y.push(w)}return y}function i(g,y){const x=y.length;let _=!1;for(let E=x-1,w=0;w<x;E=w++){let M=y[E],T=y[w],S=T.x-M.x,b=T.y-M.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(M=y[w],S=-S,T=y[E],b=-b),g.y<M.y||g.y>T.y)continue;if(g.y===M.y){if(g.x===M.x)return!0}else{const U=b*(g.x-M.x)-S*(g.y-M.y);if(U===0)return!0;if(U<0)continue;_=!_}}else{if(g.y!==M.y)continue;if(T.x<=g.x&&g.x<=M.x||M.x<=g.x&&g.x<=T.x)return!0}}return _}const n=hr.isClockWise,r=this.subPaths;if(r.length===0)return[];let o,a,l;const c=[];if(r.length===1)return a=r[0],l=new Os,l.curves=a.curves,c.push(l),c;let h=!n(r[0].getPoints());h=e?!h:h;const u=[],d=[];let f=[],p=0,v;d[p]=void 0,f[p]=[];for(let g=0,y=r.length;g<y;g++)a=r[g],v=a.getPoints(),o=n(v),o=e?!o:o,o?(!h&&d[p]&&p++,d[p]={s:new Os,p:v},d[p].s.curves=a.curves,h&&p++,f[p]=[]):f[p].push({h:a,p:v[0]});if(!d[0])return t(r);if(d.length>1){let g=!1,y=0;for(let x=0,_=d.length;x<_;x++)u[x]=[];for(let x=0,_=d.length;x<_;x++){const E=f[x];for(let w=0;w<E.length;w++){const M=E[w];let T=!0;for(let S=0;S<d.length;S++)i(M.p,d[S].p)&&(x!==S&&y++,T?(T=!1,u[S].push(M)):g=!0);T&&u[x].push(M)}}y>0&&g===!1&&(f=u)}let m;for(let g=0,y=d.length;g<y;g++){l=d[g].s,c.push(l),m=f[g];for(let x=0,_=m.length;x<_;x++)l.holes.push(m[x].h)}return c}}class Zh extends mr{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function s1(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function o1(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function a1(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function Ed(s,e,t,i){const n=l1(i);switch(t){case Zd:return s*e;case Jd:return s*e;case Qd:return s*e*2;case xh:return s*e/n.components*n.byteLength;case Za:return s*e/n.components*n.byteLength;case $d:return s*e*2/n.components*n.byteLength;case bh:return s*e*2/n.components*n.byteLength;case Kd:return s*e*3/n.components*n.byteLength;case ci:return s*e*4/n.components*n.byteLength;case Sh:return s*e*4/n.components*n.byteLength;case ma:case ga:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case va:case _a:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Nc:case Fc:return Math.max(s,16)*Math.max(e,8)/4;case Lc:case Oc:return Math.max(s,8)*Math.max(e,8)/2;case kc:case Bc:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case zc:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Gc:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Vc:return Math.floor((s+4)/5)*Math.floor((e+3)/4)*16;case Hc:return Math.floor((s+4)/5)*Math.floor((e+4)/5)*16;case Wc:return Math.floor((s+5)/6)*Math.floor((e+4)/5)*16;case Xc:return Math.floor((s+5)/6)*Math.floor((e+5)/6)*16;case Yc:return Math.floor((s+7)/8)*Math.floor((e+4)/5)*16;case qc:return Math.floor((s+7)/8)*Math.floor((e+5)/6)*16;case jc:return Math.floor((s+7)/8)*Math.floor((e+7)/8)*16;case Zc:return Math.floor((s+9)/10)*Math.floor((e+4)/5)*16;case Kc:return Math.floor((s+9)/10)*Math.floor((e+5)/6)*16;case Jc:return Math.floor((s+9)/10)*Math.floor((e+7)/8)*16;case Qc:return Math.floor((s+9)/10)*Math.floor((e+9)/10)*16;case $c:return Math.floor((s+11)/12)*Math.floor((e+9)/10)*16;case eh:return Math.floor((s+11)/12)*Math.floor((e+11)/12)*16;case ya:case th:case nh:return Math.ceil(s/4)*Math.ceil(e/4)*16;case ef:case ih:return Math.ceil(s/4)*Math.ceil(e/4)*8;case rh:case sh:return Math.ceil(s/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function l1(s){switch(s){case dr:case Yd:return{byteLength:1,components:1};case To:case qd:case Lo:return{byteLength:2,components:1};case _h:case yh:return{byteLength:2,components:4};case Ur:case vh:case xi:return{byteLength:4,components:1};case jd:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}class c1{static contain(e,t){return s1(e,t)}static cover(e,t){return o1(e,t)}static fill(e){return a1(e)}static getByteLength(e,t,i,n){return Ed(e,t,i,n)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:qa}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=qa);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function Ev(){let s=null,e=!1,t=null,i=null;function n(r,o){t(r,o),i=s.requestAnimationFrame(n)}return{start:function(){e!==!0&&t!==null&&(i=s.requestAnimationFrame(n),e=!0)},stop:function(){s.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function h1(s){const e=new WeakMap;function t(a,l){const c=a.array,h=a.usage,u=c.byteLength,d=s.createBuffer();s.bindBuffer(l,d),s.bufferData(l,c,h),a.onUploadCallback();let f;if(c instanceof Float32Array)f=s.FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?f=s.HALF_FLOAT:f=s.UNSIGNED_SHORT;else if(c instanceof Int16Array)f=s.SHORT;else if(c instanceof Uint32Array)f=s.UNSIGNED_INT;else if(c instanceof Int32Array)f=s.INT;else if(c instanceof Int8Array)f=s.BYTE;else if(c instanceof Uint8Array)f=s.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)f=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:d,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:u}}function i(a,l,c){const h=l.array,u=l.updateRanges;if(s.bindBuffer(c,a),u.length===0)s.bufferSubData(c,0,h);else{u.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<u.length;f++){const p=u[d],v=u[f];v.start<=p.start+p.count+1?p.count=Math.max(p.count,v.start+v.count-p.start):(++d,u[d]=v)}u.length=d+1;for(let f=0,p=u.length;f<p;f++){const v=u[f];s.bufferSubData(c,v.start*h.BYTES_PER_ELEMENT,h,v.start,v.count)}l.clearUpdateRanges()}l.onUploadCallback()}function n(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function r(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(s.deleteBuffer(l.buffer),e.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const h=e.get(a);(!h||h.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=e.get(a);if(c===void 0)e.set(a,t(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(c.buffer,a,l),c.version=a.version}}return{get:n,remove:r,update:o}}var u1=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,d1=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,f1=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,p1=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,m1=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,g1=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,v1=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,_1=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,y1=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,x1=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,b1=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,S1=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,M1=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,w1=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,E1=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,T1=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,A1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,C1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,R1=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,P1=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,I1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,D1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,U1=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,L1=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,N1=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,O1=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,F1=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,k1=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,B1=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,z1=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,G1="gl_FragColor = linearToOutputTexel( gl_FragColor );",V1=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,H1=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,W1=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,X1=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Y1=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,q1=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,j1=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Z1=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,K1=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,J1=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Q1=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,$1=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,eS=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,tS=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,nS=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,iS=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,rS=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,sS=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,oS=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,aS=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,lS=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,cS=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,hS=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,uS=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,dS=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,fS=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,pS=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,mS=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,gS=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,vS=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,_S=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,yS=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,xS=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,bS=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,SS=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,MS=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,wS=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,ES=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,TS=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,AS=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,CS=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,RS=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,PS=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,IS=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,DS=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,US=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,LS=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,NS=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,OS=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,FS=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,kS=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,BS=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,zS=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,GS=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,VS=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,HS=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,WS=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,XS=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,YS=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,qS=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,jS=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,ZS=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,KS=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,JS=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,QS=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,$S=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,eM=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,tM=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,nM=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,iM=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,rM=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,sM=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,oM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,aM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,lM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,cM=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const hM=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,uM=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,dM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,fM=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,pM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,mM=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,gM=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,vM=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,_M=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,yM=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,xM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,bM=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,SM=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,MM=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,wM=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,EM=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,TM=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,AM=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,CM=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,RM=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,PM=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,IM=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,DM=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,UM=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,LM=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,NM=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,OM=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,FM=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kM=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,BM=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,zM=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,GM=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,VM=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,HM=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,mt={alphahash_fragment:u1,alphahash_pars_fragment:d1,alphamap_fragment:f1,alphamap_pars_fragment:p1,alphatest_fragment:m1,alphatest_pars_fragment:g1,aomap_fragment:v1,aomap_pars_fragment:_1,batching_pars_vertex:y1,batching_vertex:x1,begin_vertex:b1,beginnormal_vertex:S1,bsdfs:M1,iridescence_fragment:w1,bumpmap_pars_fragment:E1,clipping_planes_fragment:T1,clipping_planes_pars_fragment:A1,clipping_planes_pars_vertex:C1,clipping_planes_vertex:R1,color_fragment:P1,color_pars_fragment:I1,color_pars_vertex:D1,color_vertex:U1,common:L1,cube_uv_reflection_fragment:N1,defaultnormal_vertex:O1,displacementmap_pars_vertex:F1,displacementmap_vertex:k1,emissivemap_fragment:B1,emissivemap_pars_fragment:z1,colorspace_fragment:G1,colorspace_pars_fragment:V1,envmap_fragment:H1,envmap_common_pars_fragment:W1,envmap_pars_fragment:X1,envmap_pars_vertex:Y1,envmap_physical_pars_fragment:iS,envmap_vertex:q1,fog_vertex:j1,fog_pars_vertex:Z1,fog_fragment:K1,fog_pars_fragment:J1,gradientmap_pars_fragment:Q1,lightmap_pars_fragment:$1,lights_lambert_fragment:eS,lights_lambert_pars_fragment:tS,lights_pars_begin:nS,lights_toon_fragment:rS,lights_toon_pars_fragment:sS,lights_phong_fragment:oS,lights_phong_pars_fragment:aS,lights_physical_fragment:lS,lights_physical_pars_fragment:cS,lights_fragment_begin:hS,lights_fragment_maps:uS,lights_fragment_end:dS,logdepthbuf_fragment:fS,logdepthbuf_pars_fragment:pS,logdepthbuf_pars_vertex:mS,logdepthbuf_vertex:gS,map_fragment:vS,map_pars_fragment:_S,map_particle_fragment:yS,map_particle_pars_fragment:xS,metalnessmap_fragment:bS,metalnessmap_pars_fragment:SS,morphinstance_vertex:MS,morphcolor_vertex:wS,morphnormal_vertex:ES,morphtarget_pars_vertex:TS,morphtarget_vertex:AS,normal_fragment_begin:CS,normal_fragment_maps:RS,normal_pars_fragment:PS,normal_pars_vertex:IS,normal_vertex:DS,normalmap_pars_fragment:US,clearcoat_normal_fragment_begin:LS,clearcoat_normal_fragment_maps:NS,clearcoat_pars_fragment:OS,iridescence_pars_fragment:FS,opaque_fragment:kS,packing:BS,premultiplied_alpha_fragment:zS,project_vertex:GS,dithering_fragment:VS,dithering_pars_fragment:HS,roughnessmap_fragment:WS,roughnessmap_pars_fragment:XS,shadowmap_pars_fragment:YS,shadowmap_pars_vertex:qS,shadowmap_vertex:jS,shadowmask_pars_fragment:ZS,skinbase_vertex:KS,skinning_pars_vertex:JS,skinning_vertex:QS,skinnormal_vertex:$S,specularmap_fragment:eM,specularmap_pars_fragment:tM,tonemapping_fragment:nM,tonemapping_pars_fragment:iM,transmission_fragment:rM,transmission_pars_fragment:sM,uv_pars_fragment:oM,uv_pars_vertex:aM,uv_vertex:lM,worldpos_vertex:cM,background_vert:hM,background_frag:uM,backgroundCube_vert:dM,backgroundCube_frag:fM,cube_vert:pM,cube_frag:mM,depth_vert:gM,depth_frag:vM,distanceRGBA_vert:_M,distanceRGBA_frag:yM,equirect_vert:xM,equirect_frag:bM,linedashed_vert:SM,linedashed_frag:MM,meshbasic_vert:wM,meshbasic_frag:EM,meshlambert_vert:TM,meshlambert_frag:AM,meshmatcap_vert:CM,meshmatcap_frag:RM,meshnormal_vert:PM,meshnormal_frag:IM,meshphong_vert:DM,meshphong_frag:UM,meshphysical_vert:LM,meshphysical_frag:NM,meshtoon_vert:OM,meshtoon_frag:FM,points_vert:kM,points_frag:BM,shadow_vert:zM,shadow_frag:GM,sprite_vert:VM,sprite_frag:HM},Ye={common:{diffuse:{value:new Be(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Mt},alphaMap:{value:null},alphaMapTransform:{value:new Mt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Mt}},envmap:{envMap:{value:null},envMapRotation:{value:new Mt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Mt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Mt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Mt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Mt},normalScale:{value:new ge(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Mt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Mt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Mt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Mt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Be(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Be(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Mt},alphaTest:{value:0},uvTransform:{value:new Mt}},sprite:{diffuse:{value:new Be(16777215)},opacity:{value:1},center:{value:new ge(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Mt},alphaMap:{value:null},alphaMapTransform:{value:new Mt},alphaTest:{value:0}}},ai={basic:{uniforms:oi([Ye.common,Ye.specularmap,Ye.envmap,Ye.aomap,Ye.lightmap,Ye.fog]),vertexShader:mt.meshbasic_vert,fragmentShader:mt.meshbasic_frag},lambert:{uniforms:oi([Ye.common,Ye.specularmap,Ye.envmap,Ye.aomap,Ye.lightmap,Ye.emissivemap,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,Ye.fog,Ye.lights,{emissive:{value:new Be(0)}}]),vertexShader:mt.meshlambert_vert,fragmentShader:mt.meshlambert_frag},phong:{uniforms:oi([Ye.common,Ye.specularmap,Ye.envmap,Ye.aomap,Ye.lightmap,Ye.emissivemap,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,Ye.fog,Ye.lights,{emissive:{value:new Be(0)},specular:{value:new Be(1118481)},shininess:{value:30}}]),vertexShader:mt.meshphong_vert,fragmentShader:mt.meshphong_frag},standard:{uniforms:oi([Ye.common,Ye.envmap,Ye.aomap,Ye.lightmap,Ye.emissivemap,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,Ye.roughnessmap,Ye.metalnessmap,Ye.fog,Ye.lights,{emissive:{value:new Be(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:mt.meshphysical_vert,fragmentShader:mt.meshphysical_frag},toon:{uniforms:oi([Ye.common,Ye.aomap,Ye.lightmap,Ye.emissivemap,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,Ye.gradientmap,Ye.fog,Ye.lights,{emissive:{value:new Be(0)}}]),vertexShader:mt.meshtoon_vert,fragmentShader:mt.meshtoon_frag},matcap:{uniforms:oi([Ye.common,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,Ye.fog,{matcap:{value:null}}]),vertexShader:mt.meshmatcap_vert,fragmentShader:mt.meshmatcap_frag},points:{uniforms:oi([Ye.points,Ye.fog]),vertexShader:mt.points_vert,fragmentShader:mt.points_frag},dashed:{uniforms:oi([Ye.common,Ye.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:mt.linedashed_vert,fragmentShader:mt.linedashed_frag},depth:{uniforms:oi([Ye.common,Ye.displacementmap]),vertexShader:mt.depth_vert,fragmentShader:mt.depth_frag},normal:{uniforms:oi([Ye.common,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,{opacity:{value:1}}]),vertexShader:mt.meshnormal_vert,fragmentShader:mt.meshnormal_frag},sprite:{uniforms:oi([Ye.sprite,Ye.fog]),vertexShader:mt.sprite_vert,fragmentShader:mt.sprite_frag},background:{uniforms:{uvTransform:{value:new Mt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:mt.background_vert,fragmentShader:mt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Mt}},vertexShader:mt.backgroundCube_vert,fragmentShader:mt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:mt.cube_vert,fragmentShader:mt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:mt.equirect_vert,fragmentShader:mt.equirect_frag},distanceRGBA:{uniforms:oi([Ye.common,Ye.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:mt.distanceRGBA_vert,fragmentShader:mt.distanceRGBA_frag},shadow:{uniforms:oi([Ye.lights,Ye.fog,{color:{value:new Be(0)},opacity:{value:1}}]),vertexShader:mt.shadow_vert,fragmentShader:mt.shadow_frag}};ai.physical={uniforms:oi([ai.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Mt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Mt},clearcoatNormalScale:{value:new ge(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Mt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Mt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Mt},sheen:{value:0},sheenColor:{value:new Be(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Mt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Mt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Mt},transmissionSamplerSize:{value:new ge},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Mt},attenuationDistance:{value:0},attenuationColor:{value:new Be(0)},specularColor:{value:new Be(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Mt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Mt},anisotropyVector:{value:new ge},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Mt}}]),vertexShader:mt.meshphysical_vert,fragmentShader:mt.meshphysical_frag};const Jl={r:0,b:0,g:0},vs=new bi,WM=new rt;function XM(s,e,t,i,n,r,o){const a=new Be(0);let l=r===!0?0:1,c,h,u=null,d=0,f=null;function p(x){let _=x.isScene===!0?x.background:null;return _&&_.isTexture&&(_=(x.backgroundBlurriness>0?t:e).get(_)),_}function v(x){let _=!1;const E=p(x);E===null?g(a,l):E&&E.isColor&&(g(E,1),_=!0);const w=s.xr.getEnvironmentBlendMode();w==="additive"?i.buffers.color.setClear(0,0,0,1,o):w==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,o),(s.autoClear||_)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function m(x,_){const E=p(_);E&&(E.isCubeTexture||E.mapping===Uo)?(h===void 0&&(h=new Ne(new gn(1,1,1),new Si({name:"BackgroundCubeMaterial",uniforms:Io(ai.backgroundCube.uniforms),vertexShader:ai.backgroundCube.vertexShader,fragmentShader:ai.backgroundCube.fragmentShader,side:ti,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(w,M,T){this.matrixWorld.copyPosition(T.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(h)),vs.copy(_.backgroundRotation),vs.x*=-1,vs.y*=-1,vs.z*=-1,E.isCubeTexture&&E.isRenderTargetTexture===!1&&(vs.y*=-1,vs.z*=-1),h.material.uniforms.envMap.value=E,h.material.uniforms.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(WM.makeRotationFromEuler(vs)),h.material.toneMapped=Dt.getTransfer(E.colorSpace)!==qt,(u!==E||d!==E.version||f!==s.toneMapping)&&(h.material.needsUpdate=!0,u=E,d=E.version,f=s.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null)):E&&E.isTexture&&(c===void 0&&(c=new Ne(new er(2,2),new Si({name:"BackgroundMaterial",uniforms:Io(ai.background.uniforms),vertexShader:ai.background.vertexShader,fragmentShader:ai.background.fragmentShader,side:ur,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=E,c.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,c.material.toneMapped=Dt.getTransfer(E.colorSpace)!==qt,E.matrixAutoUpdate===!0&&E.updateMatrix(),c.material.uniforms.uvTransform.value.copy(E.matrix),(u!==E||d!==E.version||f!==s.toneMapping)&&(c.material.needsUpdate=!0,u=E,d=E.version,f=s.toneMapping),c.layers.enableAll(),x.unshift(c,c.geometry,c.material,0,0,null))}function g(x,_){x.getRGB(Jl,U0(s)),i.buffers.color.setClear(Jl.r,Jl.g,Jl.b,_,o)}function y(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return a},setClearColor:function(x,_=1){a.set(x),l=_,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(x){l=x,g(a,l)},render:v,addToRenderList:m,dispose:y}}function YM(s,e){const t=s.getParameter(s.MAX_VERTEX_ATTRIBS),i={},n=d(null);let r=n,o=!1;function a(b,U,I,B,G){let j=!1;const N=u(B,I,U);r!==N&&(r=N,c(r.object)),j=f(b,B,I,G),j&&p(b,B,I,G),G!==null&&e.update(G,s.ELEMENT_ARRAY_BUFFER),(j||o)&&(o=!1,_(b,U,I,B),G!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e.get(G).buffer))}function l(){return s.createVertexArray()}function c(b){return s.bindVertexArray(b)}function h(b){return s.deleteVertexArray(b)}function u(b,U,I){const B=I.wireframe===!0;let G=i[b.id];G===void 0&&(G={},i[b.id]=G);let j=G[U.id];j===void 0&&(j={},G[U.id]=j);let N=j[B];return N===void 0&&(N=d(l()),j[B]=N),N}function d(b){const U=[],I=[],B=[];for(let G=0;G<t;G++)U[G]=0,I[G]=0,B[G]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:U,enabledAttributes:I,attributeDivisors:B,object:b,attributes:{},index:null}}function f(b,U,I,B){const G=r.attributes,j=U.attributes;let N=0;const ee=I.getAttributes();for(const W in ee)if(ee[W].location>=0){const Q=G[W];let z=j[W];if(z===void 0&&(W==="instanceMatrix"&&b.instanceMatrix&&(z=b.instanceMatrix),W==="instanceColor"&&b.instanceColor&&(z=b.instanceColor)),Q===void 0||Q.attribute!==z||z&&Q.data!==z.data)return!0;N++}return r.attributesNum!==N||r.index!==B}function p(b,U,I,B){const G={},j=U.attributes;let N=0;const ee=I.getAttributes();for(const W in ee)if(ee[W].location>=0){let Q=j[W];Q===void 0&&(W==="instanceMatrix"&&b.instanceMatrix&&(Q=b.instanceMatrix),W==="instanceColor"&&b.instanceColor&&(Q=b.instanceColor));const z={};z.attribute=Q,Q&&Q.data&&(z.data=Q.data),G[W]=z,N++}r.attributes=G,r.attributesNum=N,r.index=B}function v(){const b=r.newAttributes;for(let U=0,I=b.length;U<I;U++)b[U]=0}function m(b){g(b,0)}function g(b,U){const I=r.newAttributes,B=r.enabledAttributes,G=r.attributeDivisors;I[b]=1,B[b]===0&&(s.enableVertexAttribArray(b),B[b]=1),G[b]!==U&&(s.vertexAttribDivisor(b,U),G[b]=U)}function y(){const b=r.newAttributes,U=r.enabledAttributes;for(let I=0,B=U.length;I<B;I++)U[I]!==b[I]&&(s.disableVertexAttribArray(I),U[I]=0)}function x(b,U,I,B,G,j,N){N===!0?s.vertexAttribIPointer(b,U,I,G,j):s.vertexAttribPointer(b,U,I,B,G,j)}function _(b,U,I,B){v();const G=B.attributes,j=I.getAttributes(),N=U.defaultAttributeValues;for(const ee in j){const W=j[ee];if(W.location>=0){let Y=G[ee];if(Y===void 0&&(ee==="instanceMatrix"&&b.instanceMatrix&&(Y=b.instanceMatrix),ee==="instanceColor"&&b.instanceColor&&(Y=b.instanceColor)),Y!==void 0){const Q=Y.normalized,z=Y.itemSize,J=e.get(Y);if(J===void 0)continue;const $=J.buffer,V=J.type,H=J.bytesPerElement,K=V===s.INT||V===s.UNSIGNED_INT||Y.gpuType===vh;if(Y.isInterleavedBufferAttribute){const q=Y.data,re=q.stride,be=Y.offset;if(q.isInstancedInterleavedBuffer){for(let Se=0;Se<W.locationSize;Se++)g(W.location+Se,q.meshPerAttribute);b.isInstancedMesh!==!0&&B._maxInstanceCount===void 0&&(B._maxInstanceCount=q.meshPerAttribute*q.count)}else for(let Se=0;Se<W.locationSize;Se++)m(W.location+Se);s.bindBuffer(s.ARRAY_BUFFER,$);for(let Se=0;Se<W.locationSize;Se++)x(W.location+Se,z/W.locationSize,V,Q,re*H,(be+z/W.locationSize*Se)*H,K)}else{if(Y.isInstancedBufferAttribute){for(let q=0;q<W.locationSize;q++)g(W.location+q,Y.meshPerAttribute);b.isInstancedMesh!==!0&&B._maxInstanceCount===void 0&&(B._maxInstanceCount=Y.meshPerAttribute*Y.count)}else for(let q=0;q<W.locationSize;q++)m(W.location+q);s.bindBuffer(s.ARRAY_BUFFER,$);for(let q=0;q<W.locationSize;q++)x(W.location+q,z/W.locationSize,V,Q,z*H,z/W.locationSize*q*H,K)}}else if(N!==void 0){const Q=N[ee];if(Q!==void 0)switch(Q.length){case 2:s.vertexAttrib2fv(W.location,Q);break;case 3:s.vertexAttrib3fv(W.location,Q);break;case 4:s.vertexAttrib4fv(W.location,Q);break;default:s.vertexAttrib1fv(W.location,Q)}}}}y()}function E(){T();for(const b in i){const U=i[b];for(const I in U){const B=U[I];for(const G in B)h(B[G].object),delete B[G];delete U[I]}delete i[b]}}function w(b){if(i[b.id]===void 0)return;const U=i[b.id];for(const I in U){const B=U[I];for(const G in B)h(B[G].object),delete B[G];delete U[I]}delete i[b.id]}function M(b){for(const U in i){const I=i[U];if(I[b.id]===void 0)continue;const B=I[b.id];for(const G in B)h(B[G].object),delete B[G];delete I[b.id]}}function T(){S(),o=!0,r!==n&&(r=n,c(r.object))}function S(){n.geometry=null,n.program=null,n.wireframe=!1}return{setup:a,reset:T,resetDefaultState:S,dispose:E,releaseStatesOfGeometry:w,releaseStatesOfProgram:M,initAttributes:v,enableAttribute:m,disableUnusedAttributes:y}}function qM(s,e,t){let i;function n(c){i=c}function r(c,h){s.drawArrays(i,c,h),t.update(h,i,1)}function o(c,h,u){u!==0&&(s.drawArraysInstanced(i,c,h,u),t.update(h,i,u))}function a(c,h,u){if(u===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,c,0,h,0,u);let f=0;for(let p=0;p<u;p++)f+=h[p];t.update(f,i,1)}function l(c,h,u,d){if(u===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<c.length;p++)o(c[p],h[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(i,c,0,h,0,d,0,u);let p=0;for(let v=0;v<u;v++)p+=h[v]*d[v];t.update(p,i,1)}}this.setMode=n,this.render=r,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function jM(s,e,t,i){let n;function r(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const M=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function o(M){return!(M!==ci&&i.convert(M)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(M){const T=M===Lo&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(M!==dr&&i.convert(M)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&M!==xi&&!T)}function l(M){if(M==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";M="mediump"}return M==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const h=l(c);h!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",h,"instead."),c=h);const u=t.logarithmicDepthBuffer===!0,d=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),f=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),p=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),v=s.getParameter(s.MAX_TEXTURE_SIZE),m=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),g=s.getParameter(s.MAX_VERTEX_ATTRIBS),y=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),x=s.getParameter(s.MAX_VARYING_VECTORS),_=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),E=p>0,w=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:u,reverseDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:v,maxCubemapSize:m,maxAttributes:g,maxVertexUniforms:y,maxVaryings:x,maxFragmentUniforms:_,vertexTextures:E,maxSamples:w}}function ZM(s){const e=this;let t=null,i=0,n=!1,r=!1;const o=new sr,a=new Mt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d){const f=u.length!==0||d||i!==0||n;return n=d,i=u.length,f},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,d){t=h(u,d,0)},this.setState=function(u,d,f){const p=u.clippingPlanes,v=u.clipIntersection,m=u.clipShadows,g=s.get(u);if(!n||p===null||p.length===0||r&&!m)r?h(null):c();else{const y=r?0:i,x=y*4;let _=g.clippingState||null;l.value=_,_=h(p,d,x,f);for(let E=0;E!==x;++E)_[E]=t[E];g.clippingState=_,this.numIntersection=v?this.numPlanes:0,this.numPlanes+=y}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(u,d,f,p){const v=u!==null?u.length:0;let m=null;if(v!==0){if(m=l.value,p!==!0||m===null){const g=f+v*4,y=d.matrixWorldInverse;a.getNormalMatrix(y),(m===null||m.length<g)&&(m=new Float32Array(g));for(let x=0,_=f;x!==v;++x,_+=4)o.copy(u[x]).applyMatrix4(y,a),o.normal.toArray(m,_),m[_+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=v,e.numIntersection=0,m}}function KM(s){let e=new WeakMap;function t(o,a){return a===Ta?o.mapping=Dr:a===Aa&&(o.mapping=Kr),o}function i(o){if(o&&o.isTexture){const a=o.mapping;if(a===Ta||a===Aa)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new N0(l.height);return c.fromEquirectangularTexture(s,o),e.set(o,c),o.addEventListener("dispose",n),t(c.texture,o.mapping)}else return null}}return o}function n(o){const a=o.target;a.removeEventListener("dispose",n);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function r(){e=new WeakMap}return{get:i,dispose:r}}const Mo=4,gm=[.125,.215,.35,.446,.526,.582],As=20,Gu=new ts,vm=new Be;let Vu=null,Hu=0,Wu=0,Xu=!1;const Es=(1+Math.sqrt(5))/2,vo=1/Es,_m=[new D(-Es,vo,0),new D(Es,vo,0),new D(-vo,0,Es),new D(vo,0,Es),new D(0,Es,-vo),new D(0,Es,vo),new D(-1,1,-1),new D(1,1,-1),new D(-1,1,1),new D(1,1,1)],JM=new D;class Td{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100,r={}){const{size:o=256,position:a=JM}=r;Vu=this._renderer.getRenderTarget(),Hu=this._renderer.getActiveCubeFace(),Wu=this._renderer.getActiveMipmapLevel(),Xu=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,i,n,l,a),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=bm(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=xm(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Vu,Hu,Wu),this._renderer.xr.enabled=Xu,e.scissorTest=!1,Ql(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Dr||e.mapping===Kr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Vu=this._renderer.getRenderTarget(),Hu=this._renderer.getActiveCubeFace(),Wu=this._renderer.getActiveMipmapLevel(),Xu=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:bn,minFilter:bn,generateMipmaps:!1,type:Lo,format:ci,colorSpace:zs,depthBuffer:!1},n=ym(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=ym(e,t,i);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=QM(r)),this._blurMaterial=$M(r,e,t)}return n}_compileMaterial(e){const t=new Ne(this._lodPlanes[0],e);this._renderer.compile(t,Gu)}_sceneToCubeUV(e,t,i,n,r){const l=new xn(90,1,t,i),c=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],u=this._renderer,d=u.autoClear,f=u.toneMapping;u.getClearColor(vm),u.toneMapping=lr,u.autoClear=!1;const p=new Ln({name:"PMREM.Background",side:ti,depthWrite:!1,depthTest:!1}),v=new Ne(new gn,p);let m=!1;const g=e.background;g?g.isColor&&(p.color.copy(g),e.background=null,m=!0):(p.color.copy(vm),m=!0);for(let y=0;y<6;y++){const x=y%3;x===0?(l.up.set(0,c[y],0),l.position.set(r.x,r.y,r.z),l.lookAt(r.x+h[y],r.y,r.z)):x===1?(l.up.set(0,0,c[y]),l.position.set(r.x,r.y,r.z),l.lookAt(r.x,r.y+h[y],r.z)):(l.up.set(0,c[y],0),l.position.set(r.x,r.y,r.z),l.lookAt(r.x,r.y,r.z+h[y]));const _=this._cubeSize;Ql(n,x*_,y>2?_:0,_,_),u.setRenderTarget(n),m&&u.render(v,l),u.render(e,l)}v.geometry.dispose(),v.material.dispose(),u.toneMapping=f,u.autoClear=d,e.background=g}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===Dr||e.mapping===Kr;n?(this._cubemapMaterial===null&&(this._cubemapMaterial=bm()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=xm());const r=n?this._cubemapMaterial:this._equirectMaterial,o=new Ne(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=e;const l=this._cubeSize;Ql(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(o,Gu)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let r=1;r<n;r++){const o=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=_m[(n-r-1)%_m.length];this._blur(e,r-1,r,o,a)}t.autoClear=i}_blur(e,t,i,n,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,n,"latitudinal",r),this._halfBlur(o,e,i,i,n,"longitudinal",r)}_halfBlur(e,t,i,n,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new Ne(this._lodPlanes[n],c),d=c.uniforms,f=this._sizeLods[i]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*As-1),v=r/p,m=isFinite(r)?1+Math.floor(h*v):As;m>As&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${As}`);const g=[];let y=0;for(let M=0;M<As;++M){const T=M/v,S=Math.exp(-T*T/2);g.push(S),M===0?y+=S:M<m&&(y+=2*S)}for(let M=0;M<g.length;M++)g[M]=g[M]/y;d.envMap.value=e.texture,d.samples.value=m,d.weights.value=g,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:x}=this;d.dTheta.value=p,d.mipInt.value=x-i;const _=this._sizeLods[n],E=3*_*(n>x-Mo?n-x+Mo:0),w=4*(this._cubeSize-_);Ql(t,E,w,3*_,2*_),l.setRenderTarget(t),l.render(u,Gu)}}function QM(s){const e=[],t=[],i=[];let n=s;const r=s-Mo+1+gm.length;for(let o=0;o<r;o++){const a=Math.pow(2,n);t.push(a);let l=1/a;o>s-Mo?l=gm[o-s+Mo-1]:o===0&&(l=0),i.push(l);const c=1/(a-2),h=-c,u=1+c,d=[h,h,u,h,u,u,h,h,u,u,h,u],f=6,p=6,v=3,m=2,g=1,y=new Float32Array(v*p*f),x=new Float32Array(m*p*f),_=new Float32Array(g*p*f);for(let w=0;w<f;w++){const M=w%3*2/3-1,T=w>2?0:-1,S=[M,T,0,M+2/3,T,0,M+2/3,T+1,0,M,T,0,M+2/3,T+1,0,M,T+1,0];y.set(S,v*p*w),x.set(d,m*p*w);const b=[w,w,w,w,w,w];_.set(b,g*p*w)}const E=new _t;E.setAttribute("position",new Tt(y,v)),E.setAttribute("uv",new Tt(x,m)),E.setAttribute("faceIndex",new Tt(_,g)),e.push(E),n>Mo&&n--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function ym(s,e,t){const i=new zi(s,e,t);return i.texture.mapping=Uo,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Ql(s,e,t,i,n){s.viewport.set(e,t,i,n),s.scissor.set(e,t,i,n)}function $M(s,e,t){const i=new Float32Array(As),n=new D(0,1,0);return new Si({name:"SphericalGaussianBlur",defines:{n:As,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:Nf(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Cr,depthTest:!1,depthWrite:!1})}function xm(){return new Si({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Nf(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Cr,depthTest:!1,depthWrite:!1})}function bm(){return new Si({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Nf(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Cr,depthTest:!1,depthWrite:!1})}function Nf(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function ew(s){let e=new WeakMap,t=null;function i(a){if(a&&a.isTexture){const l=a.mapping,c=l===Ta||l===Aa,h=l===Dr||l===Kr;if(c||h){let u=e.get(a);const d=u!==void 0?u.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return t===null&&(t=new Td(s)),u=c?t.fromEquirectangular(a,u):t.fromCubemap(a,u),u.texture.pmremVersion=a.pmremVersion,e.set(a,u),u.texture;if(u!==void 0)return u.texture;{const f=a.image;return c&&f&&f.height>0||h&&f&&n(f)?(t===null&&(t=new Td(s)),u=c?t.fromEquirectangular(a):t.fromCubemap(a),u.texture.pmremVersion=a.pmremVersion,e.set(a,u),a.addEventListener("dispose",r),u.texture):null}}}return a}function n(a){let l=0;const c=6;for(let h=0;h<c;h++)a[h]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:o}}function tw(s){const e={};function t(i){if(e[i]!==void 0)return e[i];let n;switch(i){case"WEBGL_depth_texture":n=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=s.getExtension(i)}return e[i]=n,n}return{has:function(i){return t(i)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(i){const n=t(i);return n===null&&gc("THREE.WebGLRenderer: "+i+" extension not supported."),n}}}function nw(s,e,t,i){const n={},r=new WeakMap;function o(u){const d=u.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);d.removeEventListener("dispose",o),delete n[d.id];const f=r.get(d);f&&(e.remove(f),r.delete(d)),i.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(u,d){return n[d.id]===!0||(d.addEventListener("dispose",o),n[d.id]=!0,t.memory.geometries++),d}function l(u){const d=u.attributes;for(const f in d)e.update(d[f],s.ARRAY_BUFFER)}function c(u){const d=[],f=u.index,p=u.attributes.position;let v=0;if(f!==null){const y=f.array;v=f.version;for(let x=0,_=y.length;x<_;x+=3){const E=y[x+0],w=y[x+1],M=y[x+2];d.push(E,w,w,M,M,E)}}else if(p!==void 0){const y=p.array;v=p.version;for(let x=0,_=y.length/3-1;x<_;x+=3){const E=x+0,w=x+1,M=x+2;d.push(E,w,w,M,M,E)}}else return;const m=new(R0(d)?af:of)(d,1);m.version=v;const g=r.get(u);g&&e.remove(g),r.set(u,m)}function h(u){const d=r.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&c(u)}else c(u);return r.get(u)}return{get:a,update:l,getWireframeAttribute:h}}function iw(s,e,t){let i;function n(d){i=d}let r,o;function a(d){r=d.type,o=d.bytesPerElement}function l(d,f){s.drawElements(i,f,r,d*o),t.update(f,i,1)}function c(d,f,p){p!==0&&(s.drawElementsInstanced(i,f,r,d*o,p),t.update(f,i,p))}function h(d,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,f,0,r,d,0,p);let m=0;for(let g=0;g<p;g++)m+=f[g];t.update(m,i,1)}function u(d,f,p,v){if(p===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let g=0;g<d.length;g++)c(d[g]/o,f[g],v[g]);else{m.multiDrawElementsInstancedWEBGL(i,f,0,r,d,0,v,0,p);let g=0;for(let y=0;y<p;y++)g+=f[y]*v[y];t.update(g,i,1)}}this.setMode=n,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=h,this.renderMultiDrawInstances=u}function rw(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(r,o,a){switch(t.calls++,o){case s.TRIANGLES:t.triangles+=a*(r/3);break;case s.LINES:t.lines+=a*(r/2);break;case s.LINE_STRIP:t.lines+=a*(r-1);break;case s.LINE_LOOP:t.lines+=a*r;break;case s.POINTS:t.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function n(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:n,update:i}}function sw(s,e,t){const i=new WeakMap,n=new Rt;function r(o,a,l){const c=o.morphTargetInfluences,h=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,u=h!==void 0?h.length:0;let d=i.get(a);if(d===void 0||d.count!==u){let S=function(){M.dispose(),i.delete(a),a.removeEventListener("dispose",S)};d!==void 0&&d.texture.dispose();const f=a.morphAttributes.position!==void 0,p=a.morphAttributes.normal!==void 0,v=a.morphAttributes.color!==void 0,m=a.morphAttributes.position||[],g=a.morphAttributes.normal||[],y=a.morphAttributes.color||[];let x=0;f===!0&&(x=1),p===!0&&(x=2),v===!0&&(x=3);let _=a.attributes.position.count*x,E=1;_>e.maxTextureSize&&(E=Math.ceil(_/e.maxTextureSize),_=e.maxTextureSize);const w=new Float32Array(_*E*4*u),M=new Ka(w,_,E,u);M.type=xi,M.needsUpdate=!0;const T=x*4;for(let b=0;b<u;b++){const U=m[b],I=g[b],B=y[b],G=_*E*4*b;for(let j=0;j<U.count;j++){const N=j*T;f===!0&&(n.fromBufferAttribute(U,j),w[G+N+0]=n.x,w[G+N+1]=n.y,w[G+N+2]=n.z,w[G+N+3]=0),p===!0&&(n.fromBufferAttribute(I,j),w[G+N+4]=n.x,w[G+N+5]=n.y,w[G+N+6]=n.z,w[G+N+7]=0),v===!0&&(n.fromBufferAttribute(B,j),w[G+N+8]=n.x,w[G+N+9]=n.y,w[G+N+10]=n.z,w[G+N+11]=B.itemSize===4?n.w:1)}}d={count:u,texture:M,size:new ge(_,E)},i.set(a,d),a.addEventListener("dispose",S)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(s,"morphTexture",o.morphTexture,t);else{let f=0;for(let v=0;v<c.length;v++)f+=c[v];const p=a.morphTargetsRelative?1:1-f;l.getUniforms().setValue(s,"morphTargetBaseInfluence",p),l.getUniforms().setValue(s,"morphTargetInfluences",c)}l.getUniforms().setValue(s,"morphTargetsTexture",d.texture,t),l.getUniforms().setValue(s,"morphTargetsTextureSize",d.size)}return{update:r}}function ow(s,e,t,i){let n=new WeakMap;function r(l){const c=i.render.frame,h=l.geometry,u=e.get(l,h);if(n.get(u)!==c&&(e.update(u),n.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),n.get(l)!==c&&(t.update(l.instanceMatrix,s.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,s.ARRAY_BUFFER),n.set(l,c))),l.isSkinnedMesh){const d=l.skeleton;n.get(d)!==c&&(d.update(),n.set(d,c))}return u}function o(){n=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:r,dispose:o}}const Tv=new fn,Sm=new hf(1,1),Av=new Ka,Cv=new Eh,Rv=new Qa,Mm=[],wm=[],Em=new Float32Array(16),Tm=new Float32Array(9),Am=new Float32Array(4);function Fo(s,e,t){const i=s[0];if(i<=0||i>0)return s;const n=e*t;let r=Mm[n];if(r===void 0&&(r=new Float32Array(n),Mm[n]=r),e!==0){i.toArray(r,0);for(let o=1,a=0;o!==e;++o)a+=t,s[o].toArray(r,a)}return r}function Cn(s,e){if(s.length!==e.length)return!1;for(let t=0,i=s.length;t<i;t++)if(s[t]!==e[t])return!1;return!0}function Rn(s,e){for(let t=0,i=e.length;t<i;t++)s[t]=e[t]}function Kh(s,e){let t=wm[e];t===void 0&&(t=new Int32Array(e),wm[e]=t);for(let i=0;i!==e;++i)t[i]=s.allocateTextureUnit();return t}function aw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function lw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Cn(t,e))return;s.uniform2fv(this.addr,e),Rn(t,e)}}function cw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Cn(t,e))return;s.uniform3fv(this.addr,e),Rn(t,e)}}function hw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Cn(t,e))return;s.uniform4fv(this.addr,e),Rn(t,e)}}function uw(s,e){const t=this.cache,i=e.elements;if(i===void 0){if(Cn(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),Rn(t,e)}else{if(Cn(t,i))return;Am.set(i),s.uniformMatrix2fv(this.addr,!1,Am),Rn(t,i)}}function dw(s,e){const t=this.cache,i=e.elements;if(i===void 0){if(Cn(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),Rn(t,e)}else{if(Cn(t,i))return;Tm.set(i),s.uniformMatrix3fv(this.addr,!1,Tm),Rn(t,i)}}function fw(s,e){const t=this.cache,i=e.elements;if(i===void 0){if(Cn(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),Rn(t,e)}else{if(Cn(t,i))return;Em.set(i),s.uniformMatrix4fv(this.addr,!1,Em),Rn(t,i)}}function pw(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function mw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Cn(t,e))return;s.uniform2iv(this.addr,e),Rn(t,e)}}function gw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Cn(t,e))return;s.uniform3iv(this.addr,e),Rn(t,e)}}function vw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Cn(t,e))return;s.uniform4iv(this.addr,e),Rn(t,e)}}function _w(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function yw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Cn(t,e))return;s.uniform2uiv(this.addr,e),Rn(t,e)}}function xw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Cn(t,e))return;s.uniform3uiv(this.addr,e),Rn(t,e)}}function bw(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Cn(t,e))return;s.uniform4uiv(this.addr,e),Rn(t,e)}}function Sw(s,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(s.uniform1i(this.addr,n),i[0]=n);let r;this.type===s.SAMPLER_2D_SHADOW?(Sm.compareFunction=rf,r=Sm):r=Tv,t.setTexture2D(e||r,n)}function Mw(s,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(s.uniform1i(this.addr,n),i[0]=n),t.setTexture3D(e||Cv,n)}function ww(s,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(s.uniform1i(this.addr,n),i[0]=n),t.setTextureCube(e||Rv,n)}function Ew(s,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(s.uniform1i(this.addr,n),i[0]=n),t.setTexture2DArray(e||Av,n)}function Tw(s){switch(s){case 5126:return aw;case 35664:return lw;case 35665:return cw;case 35666:return hw;case 35674:return uw;case 35675:return dw;case 35676:return fw;case 5124:case 35670:return pw;case 35667:case 35671:return mw;case 35668:case 35672:return gw;case 35669:case 35673:return vw;case 5125:return _w;case 36294:return yw;case 36295:return xw;case 36296:return bw;case 35678:case 36198:case 36298:case 36306:case 35682:return Sw;case 35679:case 36299:case 36307:return Mw;case 35680:case 36300:case 36308:case 36293:return ww;case 36289:case 36303:case 36311:case 36292:return Ew}}function Aw(s,e){s.uniform1fv(this.addr,e)}function Cw(s,e){const t=Fo(e,this.size,2);s.uniform2fv(this.addr,t)}function Rw(s,e){const t=Fo(e,this.size,3);s.uniform3fv(this.addr,t)}function Pw(s,e){const t=Fo(e,this.size,4);s.uniform4fv(this.addr,t)}function Iw(s,e){const t=Fo(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function Dw(s,e){const t=Fo(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function Uw(s,e){const t=Fo(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function Lw(s,e){s.uniform1iv(this.addr,e)}function Nw(s,e){s.uniform2iv(this.addr,e)}function Ow(s,e){s.uniform3iv(this.addr,e)}function Fw(s,e){s.uniform4iv(this.addr,e)}function kw(s,e){s.uniform1uiv(this.addr,e)}function Bw(s,e){s.uniform2uiv(this.addr,e)}function zw(s,e){s.uniform3uiv(this.addr,e)}function Gw(s,e){s.uniform4uiv(this.addr,e)}function Vw(s,e,t){const i=this.cache,n=e.length,r=Kh(t,n);Cn(i,r)||(s.uniform1iv(this.addr,r),Rn(i,r));for(let o=0;o!==n;++o)t.setTexture2D(e[o]||Tv,r[o])}function Hw(s,e,t){const i=this.cache,n=e.length,r=Kh(t,n);Cn(i,r)||(s.uniform1iv(this.addr,r),Rn(i,r));for(let o=0;o!==n;++o)t.setTexture3D(e[o]||Cv,r[o])}function Ww(s,e,t){const i=this.cache,n=e.length,r=Kh(t,n);Cn(i,r)||(s.uniform1iv(this.addr,r),Rn(i,r));for(let o=0;o!==n;++o)t.setTextureCube(e[o]||Rv,r[o])}function Xw(s,e,t){const i=this.cache,n=e.length,r=Kh(t,n);Cn(i,r)||(s.uniform1iv(this.addr,r),Rn(i,r));for(let o=0;o!==n;++o)t.setTexture2DArray(e[o]||Av,r[o])}function Yw(s){switch(s){case 5126:return Aw;case 35664:return Cw;case 35665:return Rw;case 35666:return Pw;case 35674:return Iw;case 35675:return Dw;case 35676:return Uw;case 5124:case 35670:return Lw;case 35667:case 35671:return Nw;case 35668:case 35672:return Ow;case 35669:case 35673:return Fw;case 5125:return kw;case 36294:return Bw;case 36295:return zw;case 36296:return Gw;case 35678:case 36198:case 36298:case 36306:case 35682:return Vw;case 35679:case 36299:case 36307:return Hw;case 35680:case 36300:case 36308:case 36293:return Ww;case 36289:case 36303:case 36311:case 36292:return Xw}}class qw{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=Tw(t.type)}}class jw{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=Yw(t.type)}}class Zw{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const n=this.seq;for(let r=0,o=n.length;r!==o;++r){const a=n[r];a.setValue(e,t[a.id],i)}}}const Yu=/(\w+)(\])?(\[|\.)?/g;function Cm(s,e){s.seq.push(e),s.map[e.id]=e}function Kw(s,e,t){const i=s.name,n=i.length;for(Yu.lastIndex=0;;){const r=Yu.exec(i),o=Yu.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===n){Cm(t,c===void 0?new qw(a,s,e):new jw(a,s,e));break}else{let u=t.map[a];u===void 0&&(u=new Zw(a),Cm(t,u)),t=u}}}class _c{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){const r=e.getActiveUniform(t,n),o=e.getUniformLocation(t,r.name);Kw(r,o,this)}}setValue(e,t,i,n){const r=this.map[t];r!==void 0&&r.setValue(e,i,n)}setOptional(e,t,i){const n=t[i];n!==void 0&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let r=0,o=t.length;r!==o;++r){const a=t[r],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,n)}}static seqWithValue(e,t){const i=[];for(let n=0,r=e.length;n!==r;++n){const o=e[n];o.id in t&&i.push(o)}return i}}function Rm(s,e,t){const i=s.createShader(e);return s.shaderSource(i,t),s.compileShader(i),i}const Jw=37297;let Qw=0;function $w(s,e){const t=s.split(`
`),i=[],n=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=n;o<r;o++){const a=o+1;i.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return i.join(`
`)}const Pm=new Mt;function eE(s){Dt._getMatrix(Pm,Dt.workingColorSpace,s);const e=`mat3( ${Pm.elements.map(t=>t.toFixed(4))} )`;switch(Dt.getTransfer(s)){case Ia:return[e,"LinearTransferOETF"];case qt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[e,"LinearTransferOETF"]}}function Im(s,e,t){const i=s.getShaderParameter(e,s.COMPILE_STATUS),n=s.getShaderInfoLog(e).trim();if(i&&n==="")return"";const r=/ERROR: 0:(\d+)/.exec(n);if(r){const o=parseInt(r[1]);return t.toUpperCase()+`

`+n+`

`+$w(s.getShaderSource(e),o)}else return n}function tE(s,e){const t=eE(e);return[`vec4 ${s}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function nE(s,e){let t;switch(e){case h0:t="Linear";break;case u0:t="Reinhard";break;case d0:t="Cineon";break;case f0:t="ACESFilmic";break;case Uc:t="AgX";break;case m0:t="Neutral";break;case p0:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const $l=new D;function iE(){Dt.getLuminanceCoefficients($l);const s=$l.x.toFixed(4),e=$l.y.toFixed(4),t=$l.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function rE(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(aa).join(`
`)}function sE(s){const e=[];for(const t in s){const i=s[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function oE(s,e){const t={},i=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let n=0;n<i;n++){const r=s.getActiveAttrib(e,n),o=r.name;let a=1;r.type===s.FLOAT_MAT2&&(a=2),r.type===s.FLOAT_MAT3&&(a=3),r.type===s.FLOAT_MAT4&&(a=4),t[o]={type:r.type,location:s.getAttribLocation(e,o),locationSize:a}}return t}function aa(s){return s!==""}function Dm(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Um(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const aE=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ad(s){return s.replace(aE,cE)}const lE=new Map;function cE(s,e){let t=mt[e];if(t===void 0){const i=lE.get(e);if(i!==void 0)t=mt[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return Ad(t)}const hE=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Lm(s){return s.replace(hE,uE)}function uE(s,e,t,i){let n="";for(let r=parseInt(e);r<parseInt(t);r++)n+=i.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return n}function Nm(s){let e=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function dE(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===Wd?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===fa?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===rr&&(e="SHADOWMAP_TYPE_VSM"),e}function fE(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Dr:case Kr:e="ENVMAP_TYPE_CUBE";break;case Uo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function pE(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Kr:e="ENVMAP_MODE_REFRACTION";break}return e}function mE(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case ja:e="ENVMAP_BLENDING_MULTIPLY";break;case l0:e="ENVMAP_BLENDING_MIX";break;case c0:e="ENVMAP_BLENDING_ADD";break}return e}function gE(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}}function vE(s,e,t,i){const n=s.getContext(),r=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=dE(t),c=fE(t),h=pE(t),u=mE(t),d=gE(t),f=rE(t),p=sE(r),v=n.createProgram();let m,g,y=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(aa).join(`
`),m.length>0&&(m+=`
`),g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(aa).join(`
`),g.length>0&&(g+=`
`)):(m=[Nm(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(aa).join(`
`),g=[Nm(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==lr?"#define TONE_MAPPING":"",t.toneMapping!==lr?mt.tonemapping_pars_fragment:"",t.toneMapping!==lr?nE("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",mt.colorspace_pars_fragment,tE("linearToOutputTexel",t.outputColorSpace),iE(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(aa).join(`
`)),o=Ad(o),o=Dm(o,t),o=Um(o,t),a=Ad(a),a=Dm(a,t),a=Um(a,t),o=Lm(o),a=Lm(a),t.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,m=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,g=["#define varying in",t.glslVersion===yd?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===yd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const x=y+m+o,_=y+g+a,E=Rm(n,n.VERTEX_SHADER,x),w=Rm(n,n.FRAGMENT_SHADER,_);n.attachShader(v,E),n.attachShader(v,w),t.index0AttributeName!==void 0?n.bindAttribLocation(v,0,t.index0AttributeName):t.morphTargets===!0&&n.bindAttribLocation(v,0,"position"),n.linkProgram(v);function M(U){if(s.debug.checkShaderErrors){const I=n.getProgramInfoLog(v).trim(),B=n.getShaderInfoLog(E).trim(),G=n.getShaderInfoLog(w).trim();let j=!0,N=!0;if(n.getProgramParameter(v,n.LINK_STATUS)===!1)if(j=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(n,v,E,w);else{const ee=Im(n,E,"vertex"),W=Im(n,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(v,n.VALIDATE_STATUS)+`

Material Name: `+U.name+`
Material Type: `+U.type+`

Program Info Log: `+I+`
`+ee+`
`+W)}else I!==""?console.warn("THREE.WebGLProgram: Program Info Log:",I):(B===""||G==="")&&(N=!1);N&&(U.diagnostics={runnable:j,programLog:I,vertexShader:{log:B,prefix:m},fragmentShader:{log:G,prefix:g}})}n.deleteShader(E),n.deleteShader(w),T=new _c(n,v),S=oE(n,v)}let T;this.getUniforms=function(){return T===void 0&&M(this),T};let S;this.getAttributes=function(){return S===void 0&&M(this),S};let b=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=n.getProgramParameter(v,Jw)),b},this.destroy=function(){i.releaseStatesOfProgram(this),n.deleteProgram(v),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=Qw++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=E,this.fragmentShader=w,this}let _E=0;class yE{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,n=this._getShaderStage(t),r=this._getShaderStage(i),o=this._getShaderCacheForMaterial(e);return o.has(n)===!1&&(o.add(n),n.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new xE(e),t.set(e,i)),i}}class xE{constructor(e){this.id=_E++,this.code=e,this.usedTimes=0}}function bE(s,e,t,i,n,r,o){const a=new Th,l=new yE,c=new Set,h=[],u=n.logarithmicDepthBuffer,d=n.vertexTextures;let f=n.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(S){return c.add(S),S===0?"uv":`uv${S}`}function m(S,b,U,I,B){const G=I.fog,j=B.geometry,N=S.isMeshStandardMaterial?I.environment:null,ee=(S.isMeshStandardMaterial?t:e).get(S.envMap||N),W=ee&&ee.mapping===Uo?ee.image.height:null,Y=p[S.type];S.precision!==null&&(f=n.getMaxPrecision(S.precision),f!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",f,"instead."));const Q=j.morphAttributes.position||j.morphAttributes.normal||j.morphAttributes.color,z=Q!==void 0?Q.length:0;let J=0;j.morphAttributes.position!==void 0&&(J=1),j.morphAttributes.normal!==void 0&&(J=2),j.morphAttributes.color!==void 0&&(J=3);let $,V,H,K;if(Y){const tt=ai[Y];$=tt.vertexShader,V=tt.fragmentShader}else $=S.vertexShader,V=S.fragmentShader,l.update(S),H=l.getVertexShaderID(S),K=l.getFragmentShaderID(S);const q=s.getRenderTarget(),re=s.state.buffers.depth.getReversed(),be=B.isInstancedMesh===!0,Se=B.isBatchedMesh===!0,Me=!!S.map,ye=!!S.matcap,We=!!ee,X=!!S.aoMap,Fe=!!S.lightMap,he=!!S.bumpMap,ue=!!S.normalMap,ne=!!S.displacementMap,_e=!!S.emissiveMap,le=!!S.metalnessMap,P=!!S.roughnessMap,A=S.anisotropy>0,Z=S.clearcoat>0,ae=S.dispersion>0,se=S.iridescence>0,de=S.sheen>0,we=S.transmission>0,ve=A&&!!S.anisotropyMap,Ae=Z&&!!S.clearcoatMap,Xe=Z&&!!S.clearcoatNormalMap,Re=Z&&!!S.clearcoatRoughnessMap,Oe=se&&!!S.iridescenceMap,ke=se&&!!S.iridescenceThicknessMap,ze=de&&!!S.sheenColorMap,Te=de&&!!S.sheenRoughnessMap,ht=!!S.specularMap,Qe=!!S.specularColorMap,St=!!S.specularIntensityMap,te=we&&!!S.transmissionMap,Ce=we&&!!S.thicknessMap,fe=!!S.gradientMap,Pe=!!S.alphaMap,Ue=S.alphaTest>0,Ie=!!S.alphaHash,st=!!S.extensions;let vt=lr;S.toneMapped&&(q===null||q.isXRRenderTarget===!0)&&(vt=s.toneMapping);const lt={shaderID:Y,shaderType:S.type,shaderName:S.name,vertexShader:$,fragmentShader:V,defines:S.defines,customVertexShaderID:H,customFragmentShaderID:K,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:f,batching:Se,batchingColor:Se&&B._colorsTexture!==null,instancing:be,instancingColor:be&&B.instanceColor!==null,instancingMorph:be&&B.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:q===null?s.outputColorSpace:q.isXRRenderTarget===!0?q.texture.colorSpace:zs,alphaToCoverage:!!S.alphaToCoverage,map:Me,matcap:ye,envMap:We,envMapMode:We&&ee.mapping,envMapCubeUVHeight:W,aoMap:X,lightMap:Fe,bumpMap:he,normalMap:ue,displacementMap:d&&ne,emissiveMap:_e,normalMapObjectSpace:ue&&S.normalMapType===b0,normalMapTangentSpace:ue&&S.normalMapType===Jr,metalnessMap:le,roughnessMap:P,anisotropy:A,anisotropyMap:ve,clearcoat:Z,clearcoatMap:Ae,clearcoatNormalMap:Xe,clearcoatRoughnessMap:Re,dispersion:ae,iridescence:se,iridescenceMap:Oe,iridescenceThicknessMap:ke,sheen:de,sheenColorMap:ze,sheenRoughnessMap:Te,specularMap:ht,specularColorMap:Qe,specularIntensityMap:St,transmission:we,transmissionMap:te,thicknessMap:Ce,gradientMap:fe,opaque:S.transparent===!1&&S.blending===Ls&&S.alphaToCoverage===!1,alphaMap:Pe,alphaTest:Ue,alphaHash:Ie,combine:S.combine,mapUv:Me&&v(S.map.channel),aoMapUv:X&&v(S.aoMap.channel),lightMapUv:Fe&&v(S.lightMap.channel),bumpMapUv:he&&v(S.bumpMap.channel),normalMapUv:ue&&v(S.normalMap.channel),displacementMapUv:ne&&v(S.displacementMap.channel),emissiveMapUv:_e&&v(S.emissiveMap.channel),metalnessMapUv:le&&v(S.metalnessMap.channel),roughnessMapUv:P&&v(S.roughnessMap.channel),anisotropyMapUv:ve&&v(S.anisotropyMap.channel),clearcoatMapUv:Ae&&v(S.clearcoatMap.channel),clearcoatNormalMapUv:Xe&&v(S.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Re&&v(S.clearcoatRoughnessMap.channel),iridescenceMapUv:Oe&&v(S.iridescenceMap.channel),iridescenceThicknessMapUv:ke&&v(S.iridescenceThicknessMap.channel),sheenColorMapUv:ze&&v(S.sheenColorMap.channel),sheenRoughnessMapUv:Te&&v(S.sheenRoughnessMap.channel),specularMapUv:ht&&v(S.specularMap.channel),specularColorMapUv:Qe&&v(S.specularColorMap.channel),specularIntensityMapUv:St&&v(S.specularIntensityMap.channel),transmissionMapUv:te&&v(S.transmissionMap.channel),thicknessMapUv:Ce&&v(S.thicknessMap.channel),alphaMapUv:Pe&&v(S.alphaMap.channel),vertexTangents:!!j.attributes.tangent&&(ue||A),vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!j.attributes.color&&j.attributes.color.itemSize===4,pointsUvs:B.isPoints===!0&&!!j.attributes.uv&&(Me||Pe),fog:!!G,useFog:S.fog===!0,fogExp2:!!G&&G.isFogExp2,flatShading:S.flatShading===!0,sizeAttenuation:S.sizeAttenuation===!0,logarithmicDepthBuffer:u,reverseDepthBuffer:re,skinning:B.isSkinnedMesh===!0,morphTargets:j.morphAttributes.position!==void 0,morphNormals:j.morphAttributes.normal!==void 0,morphColors:j.morphAttributes.color!==void 0,morphTargetsCount:z,morphTextureStride:J,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:S.dithering,shadowMapEnabled:s.shadowMap.enabled&&U.length>0,shadowMapType:s.shadowMap.type,toneMapping:vt,decodeVideoTexture:Me&&S.map.isVideoTexture===!0&&Dt.getTransfer(S.map.colorSpace)===qt,decodeVideoTextureEmissive:_e&&S.emissiveMap.isVideoTexture===!0&&Dt.getTransfer(S.emissiveMap.colorSpace)===qt,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===vi,flipSided:S.side===ti,useDepthPacking:S.depthPacking>=0,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionClipCullDistance:st&&S.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(st&&S.extensions.multiDraw===!0||Se)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:S.customProgramCacheKey()};return lt.vertexUv1s=c.has(1),lt.vertexUv2s=c.has(2),lt.vertexUv3s=c.has(3),c.clear(),lt}function g(S){const b=[];if(S.shaderID?b.push(S.shaderID):(b.push(S.customVertexShaderID),b.push(S.customFragmentShaderID)),S.defines!==void 0)for(const U in S.defines)b.push(U),b.push(S.defines[U]);return S.isRawShaderMaterial===!1&&(y(b,S),x(b,S),b.push(s.outputColorSpace)),b.push(S.customProgramCacheKey),b.join()}function y(S,b){S.push(b.precision),S.push(b.outputColorSpace),S.push(b.envMapMode),S.push(b.envMapCubeUVHeight),S.push(b.mapUv),S.push(b.alphaMapUv),S.push(b.lightMapUv),S.push(b.aoMapUv),S.push(b.bumpMapUv),S.push(b.normalMapUv),S.push(b.displacementMapUv),S.push(b.emissiveMapUv),S.push(b.metalnessMapUv),S.push(b.roughnessMapUv),S.push(b.anisotropyMapUv),S.push(b.clearcoatMapUv),S.push(b.clearcoatNormalMapUv),S.push(b.clearcoatRoughnessMapUv),S.push(b.iridescenceMapUv),S.push(b.iridescenceThicknessMapUv),S.push(b.sheenColorMapUv),S.push(b.sheenRoughnessMapUv),S.push(b.specularMapUv),S.push(b.specularColorMapUv),S.push(b.specularIntensityMapUv),S.push(b.transmissionMapUv),S.push(b.thicknessMapUv),S.push(b.combine),S.push(b.fogExp2),S.push(b.sizeAttenuation),S.push(b.morphTargetsCount),S.push(b.morphAttributeCount),S.push(b.numDirLights),S.push(b.numPointLights),S.push(b.numSpotLights),S.push(b.numSpotLightMaps),S.push(b.numHemiLights),S.push(b.numRectAreaLights),S.push(b.numDirLightShadows),S.push(b.numPointLightShadows),S.push(b.numSpotLightShadows),S.push(b.numSpotLightShadowsWithMaps),S.push(b.numLightProbes),S.push(b.shadowMapType),S.push(b.toneMapping),S.push(b.numClippingPlanes),S.push(b.numClipIntersection),S.push(b.depthPacking)}function x(S,b){a.disableAll(),b.supportsVertexTextures&&a.enable(0),b.instancing&&a.enable(1),b.instancingColor&&a.enable(2),b.instancingMorph&&a.enable(3),b.matcap&&a.enable(4),b.envMap&&a.enable(5),b.normalMapObjectSpace&&a.enable(6),b.normalMapTangentSpace&&a.enable(7),b.clearcoat&&a.enable(8),b.iridescence&&a.enable(9),b.alphaTest&&a.enable(10),b.vertexColors&&a.enable(11),b.vertexAlphas&&a.enable(12),b.vertexUv1s&&a.enable(13),b.vertexUv2s&&a.enable(14),b.vertexUv3s&&a.enable(15),b.vertexTangents&&a.enable(16),b.anisotropy&&a.enable(17),b.alphaHash&&a.enable(18),b.batching&&a.enable(19),b.dispersion&&a.enable(20),b.batchingColor&&a.enable(21),S.push(a.mask),a.disableAll(),b.fog&&a.enable(0),b.useFog&&a.enable(1),b.flatShading&&a.enable(2),b.logarithmicDepthBuffer&&a.enable(3),b.reverseDepthBuffer&&a.enable(4),b.skinning&&a.enable(5),b.morphTargets&&a.enable(6),b.morphNormals&&a.enable(7),b.morphColors&&a.enable(8),b.premultipliedAlpha&&a.enable(9),b.shadowMapEnabled&&a.enable(10),b.doubleSided&&a.enable(11),b.flipSided&&a.enable(12),b.useDepthPacking&&a.enable(13),b.dithering&&a.enable(14),b.transmission&&a.enable(15),b.sheen&&a.enable(16),b.opaque&&a.enable(17),b.pointsUvs&&a.enable(18),b.decodeVideoTexture&&a.enable(19),b.decodeVideoTextureEmissive&&a.enable(20),b.alphaToCoverage&&a.enable(21),S.push(a.mask)}function _(S){const b=p[S.type];let U;if(b){const I=ai[b];U=Ja.clone(I.uniforms)}else U=S.uniforms;return U}function E(S,b){let U;for(let I=0,B=h.length;I<B;I++){const G=h[I];if(G.cacheKey===b){U=G,++U.usedTimes;break}}return U===void 0&&(U=new vE(s,b,S,r),h.push(U)),U}function w(S){if(--S.usedTimes===0){const b=h.indexOf(S);h[b]=h[h.length-1],h.pop(),S.destroy()}}function M(S){l.remove(S)}function T(){l.dispose()}return{getParameters:m,getProgramCacheKey:g,getUniforms:_,acquireProgram:E,releaseProgram:w,releaseShaderCache:M,programs:h,dispose:T}}function SE(){let s=new WeakMap;function e(o){return s.has(o)}function t(o){let a=s.get(o);return a===void 0&&(a={},s.set(o,a)),a}function i(o){s.delete(o)}function n(o,a,l){s.get(o)[a]=l}function r(){s=new WeakMap}return{has:e,get:t,remove:i,update:n,dispose:r}}function ME(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function Om(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function Fm(){const s=[];let e=0;const t=[],i=[],n=[];function r(){e=0,t.length=0,i.length=0,n.length=0}function o(u,d,f,p,v,m){let g=s[e];return g===void 0?(g={id:u.id,object:u,geometry:d,material:f,groupOrder:p,renderOrder:u.renderOrder,z:v,group:m},s[e]=g):(g.id=u.id,g.object=u,g.geometry=d,g.material=f,g.groupOrder=p,g.renderOrder=u.renderOrder,g.z=v,g.group=m),e++,g}function a(u,d,f,p,v,m){const g=o(u,d,f,p,v,m);f.transmission>0?i.push(g):f.transparent===!0?n.push(g):t.push(g)}function l(u,d,f,p,v,m){const g=o(u,d,f,p,v,m);f.transmission>0?i.unshift(g):f.transparent===!0?n.unshift(g):t.unshift(g)}function c(u,d){t.length>1&&t.sort(u||ME),i.length>1&&i.sort(d||Om),n.length>1&&n.sort(d||Om)}function h(){for(let u=e,d=s.length;u<d;u++){const f=s[u];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:i,transparent:n,init:r,push:a,unshift:l,finish:h,sort:c}}function wE(){let s=new WeakMap;function e(i,n){const r=s.get(i);let o;return r===void 0?(o=new Fm,s.set(i,[o])):n>=r.length?(o=new Fm,r.push(o)):o=r[n],o}function t(){s=new WeakMap}return{get:e,dispose:t}}function EE(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new D,color:new Be};break;case"SpotLight":t={position:new D,direction:new D,color:new Be,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new D,color:new Be,distance:0,decay:0};break;case"HemisphereLight":t={direction:new D,skyColor:new Be,groundColor:new Be};break;case"RectAreaLight":t={color:new Be,position:new D,halfWidth:new D,halfHeight:new D};break}return s[e.id]=t,t}}}function TE(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ge};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ge};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ge,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let AE=0;function CE(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function RE(s){const e=new EE,t=TE(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)i.probe.push(new D);const n=new D,r=new rt,o=new rt;function a(c){let h=0,u=0,d=0;for(let S=0;S<9;S++)i.probe[S].set(0,0,0);let f=0,p=0,v=0,m=0,g=0,y=0,x=0,_=0,E=0,w=0,M=0;c.sort(CE);for(let S=0,b=c.length;S<b;S++){const U=c[S],I=U.color,B=U.intensity,G=U.distance,j=U.shadow&&U.shadow.map?U.shadow.map.texture:null;if(U.isAmbientLight)h+=I.r*B,u+=I.g*B,d+=I.b*B;else if(U.isLightProbe){for(let N=0;N<9;N++)i.probe[N].addScaledVector(U.sh.coefficients[N],B);M++}else if(U.isDirectionalLight){const N=e.get(U);if(N.color.copy(U.color).multiplyScalar(U.intensity),U.castShadow){const ee=U.shadow,W=t.get(U);W.shadowIntensity=ee.intensity,W.shadowBias=ee.bias,W.shadowNormalBias=ee.normalBias,W.shadowRadius=ee.radius,W.shadowMapSize=ee.mapSize,i.directionalShadow[f]=W,i.directionalShadowMap[f]=j,i.directionalShadowMatrix[f]=U.shadow.matrix,y++}i.directional[f]=N,f++}else if(U.isSpotLight){const N=e.get(U);N.position.setFromMatrixPosition(U.matrixWorld),N.color.copy(I).multiplyScalar(B),N.distance=G,N.coneCos=Math.cos(U.angle),N.penumbraCos=Math.cos(U.angle*(1-U.penumbra)),N.decay=U.decay,i.spot[v]=N;const ee=U.shadow;if(U.map&&(i.spotLightMap[E]=U.map,E++,ee.updateMatrices(U),U.castShadow&&w++),i.spotLightMatrix[v]=ee.matrix,U.castShadow){const W=t.get(U);W.shadowIntensity=ee.intensity,W.shadowBias=ee.bias,W.shadowNormalBias=ee.normalBias,W.shadowRadius=ee.radius,W.shadowMapSize=ee.mapSize,i.spotShadow[v]=W,i.spotShadowMap[v]=j,_++}v++}else if(U.isRectAreaLight){const N=e.get(U);N.color.copy(I).multiplyScalar(B),N.halfWidth.set(U.width*.5,0,0),N.halfHeight.set(0,U.height*.5,0),i.rectArea[m]=N,m++}else if(U.isPointLight){const N=e.get(U);if(N.color.copy(U.color).multiplyScalar(U.intensity),N.distance=U.distance,N.decay=U.decay,U.castShadow){const ee=U.shadow,W=t.get(U);W.shadowIntensity=ee.intensity,W.shadowBias=ee.bias,W.shadowNormalBias=ee.normalBias,W.shadowRadius=ee.radius,W.shadowMapSize=ee.mapSize,W.shadowCameraNear=ee.camera.near,W.shadowCameraFar=ee.camera.far,i.pointShadow[p]=W,i.pointShadowMap[p]=j,i.pointShadowMatrix[p]=U.shadow.matrix,x++}i.point[p]=N,p++}else if(U.isHemisphereLight){const N=e.get(U);N.skyColor.copy(U.color).multiplyScalar(B),N.groundColor.copy(U.groundColor).multiplyScalar(B),i.hemi[g]=N,g++}}m>0&&(s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Ye.LTC_FLOAT_1,i.rectAreaLTC2=Ye.LTC_FLOAT_2):(i.rectAreaLTC1=Ye.LTC_HALF_1,i.rectAreaLTC2=Ye.LTC_HALF_2)),i.ambient[0]=h,i.ambient[1]=u,i.ambient[2]=d;const T=i.hash;(T.directionalLength!==f||T.pointLength!==p||T.spotLength!==v||T.rectAreaLength!==m||T.hemiLength!==g||T.numDirectionalShadows!==y||T.numPointShadows!==x||T.numSpotShadows!==_||T.numSpotMaps!==E||T.numLightProbes!==M)&&(i.directional.length=f,i.spot.length=v,i.rectArea.length=m,i.point.length=p,i.hemi.length=g,i.directionalShadow.length=y,i.directionalShadowMap.length=y,i.pointShadow.length=x,i.pointShadowMap.length=x,i.spotShadow.length=_,i.spotShadowMap.length=_,i.directionalShadowMatrix.length=y,i.pointShadowMatrix.length=x,i.spotLightMatrix.length=_+E-w,i.spotLightMap.length=E,i.numSpotLightShadowsWithMaps=w,i.numLightProbes=M,T.directionalLength=f,T.pointLength=p,T.spotLength=v,T.rectAreaLength=m,T.hemiLength=g,T.numDirectionalShadows=y,T.numPointShadows=x,T.numSpotShadows=_,T.numSpotMaps=E,T.numLightProbes=M,i.version=AE++)}function l(c,h){let u=0,d=0,f=0,p=0,v=0;const m=h.matrixWorldInverse;for(let g=0,y=c.length;g<y;g++){const x=c[g];if(x.isDirectionalLight){const _=i.directional[u];_.direction.setFromMatrixPosition(x.matrixWorld),n.setFromMatrixPosition(x.target.matrixWorld),_.direction.sub(n),_.direction.transformDirection(m),u++}else if(x.isSpotLight){const _=i.spot[f];_.position.setFromMatrixPosition(x.matrixWorld),_.position.applyMatrix4(m),_.direction.setFromMatrixPosition(x.matrixWorld),n.setFromMatrixPosition(x.target.matrixWorld),_.direction.sub(n),_.direction.transformDirection(m),f++}else if(x.isRectAreaLight){const _=i.rectArea[p];_.position.setFromMatrixPosition(x.matrixWorld),_.position.applyMatrix4(m),o.identity(),r.copy(x.matrixWorld),r.premultiply(m),o.extractRotation(r),_.halfWidth.set(x.width*.5,0,0),_.halfHeight.set(0,x.height*.5,0),_.halfWidth.applyMatrix4(o),_.halfHeight.applyMatrix4(o),p++}else if(x.isPointLight){const _=i.point[d];_.position.setFromMatrixPosition(x.matrixWorld),_.position.applyMatrix4(m),d++}else if(x.isHemisphereLight){const _=i.hemi[v];_.direction.setFromMatrixPosition(x.matrixWorld),_.direction.transformDirection(m),v++}}}return{setup:a,setupView:l,state:i}}function km(s){const e=new RE(s),t=[],i=[];function n(h){c.camera=h,t.length=0,i.length=0}function r(h){t.push(h)}function o(h){i.push(h)}function a(){e.setup(t)}function l(h){e.setupView(t,h)}const c={lightsArray:t,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:n,state:c,setupLights:a,setupLightsView:l,pushLight:r,pushShadow:o}}function PE(s){let e=new WeakMap;function t(n,r=0){const o=e.get(n);let a;return o===void 0?(a=new km(s),e.set(n,[a])):r>=o.length?(a=new km(s),o.push(a)):a=o[r],a}function i(){e=new WeakMap}return{get:t,dispose:i}}const IE=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,DE=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function UE(s,e,t){let i=new nl;const n=new ge,r=new ge,o=new Rt,a=new rl({depthPacking:nf}),l=new Xh,c={},h=t.maxTextureSize,u={[ur]:ti,[ti]:ur,[vi]:vi},d=new Si({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ge},radius:{value:4}},vertexShader:IE,fragmentShader:DE}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new _t;p.setAttribute("position",new Tt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new Ne(p,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Wd;let g=this.type;this.render=function(w,M,T){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||w.length===0)return;const S=s.getRenderTarget(),b=s.getActiveCubeFace(),U=s.getActiveMipmapLevel(),I=s.state;I.setBlending(Cr),I.buffers.color.setClear(1,1,1,1),I.buffers.depth.setTest(!0),I.setScissorTest(!1);const B=g!==rr&&this.type===rr,G=g===rr&&this.type!==rr;for(let j=0,N=w.length;j<N;j++){const ee=w[j],W=ee.shadow;if(W===void 0){console.warn("THREE.WebGLShadowMap:",ee,"has no shadow.");continue}if(W.autoUpdate===!1&&W.needsUpdate===!1)continue;n.copy(W.mapSize);const Y=W.getFrameExtents();if(n.multiply(Y),r.copy(W.mapSize),(n.x>h||n.y>h)&&(n.x>h&&(r.x=Math.floor(h/Y.x),n.x=r.x*Y.x,W.mapSize.x=r.x),n.y>h&&(r.y=Math.floor(h/Y.y),n.y=r.y*Y.y,W.mapSize.y=r.y)),W.map===null||B===!0||G===!0){const z=this.type!==rr?{minFilter:Vn,magFilter:Vn}:{};W.map!==null&&W.map.dispose(),W.map=new zi(n.x,n.y,z),W.map.texture.name=ee.name+".shadowMap",W.camera.updateProjectionMatrix()}s.setRenderTarget(W.map),s.clear();const Q=W.getViewportCount();for(let z=0;z<Q;z++){const J=W.getViewport(z);o.set(r.x*J.x,r.y*J.y,r.x*J.z,r.y*J.w),I.viewport(o),W.updateMatrices(ee,z),i=W.getFrustum(),_(M,T,W.camera,ee,this.type)}W.isPointLightShadow!==!0&&this.type===rr&&y(W,T),W.needsUpdate=!1}g=this.type,m.needsUpdate=!1,s.setRenderTarget(S,b,U)};function y(w,M){const T=e.update(v);d.defines.VSM_SAMPLES!==w.blurSamples&&(d.defines.VSM_SAMPLES=w.blurSamples,f.defines.VSM_SAMPLES=w.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),w.mapPass===null&&(w.mapPass=new zi(n.x,n.y)),d.uniforms.shadow_pass.value=w.map.texture,d.uniforms.resolution.value=w.mapSize,d.uniforms.radius.value=w.radius,s.setRenderTarget(w.mapPass),s.clear(),s.renderBufferDirect(M,null,T,d,v,null),f.uniforms.shadow_pass.value=w.mapPass.texture,f.uniforms.resolution.value=w.mapSize,f.uniforms.radius.value=w.radius,s.setRenderTarget(w.map),s.clear(),s.renderBufferDirect(M,null,T,f,v,null)}function x(w,M,T,S){let b=null;const U=T.isPointLight===!0?w.customDistanceMaterial:w.customDepthMaterial;if(U!==void 0)b=U;else if(b=T.isPointLight===!0?l:a,s.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0){const I=b.uuid,B=M.uuid;let G=c[I];G===void 0&&(G={},c[I]=G);let j=G[B];j===void 0&&(j=b.clone(),G[B]=j,M.addEventListener("dispose",E)),b=j}if(b.visible=M.visible,b.wireframe=M.wireframe,S===rr?b.side=M.shadowSide!==null?M.shadowSide:M.side:b.side=M.shadowSide!==null?M.shadowSide:u[M.side],b.alphaMap=M.alphaMap,b.alphaTest=M.alphaTest,b.map=M.map,b.clipShadows=M.clipShadows,b.clippingPlanes=M.clippingPlanes,b.clipIntersection=M.clipIntersection,b.displacementMap=M.displacementMap,b.displacementScale=M.displacementScale,b.displacementBias=M.displacementBias,b.wireframeLinewidth=M.wireframeLinewidth,b.linewidth=M.linewidth,T.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const I=s.properties.get(b);I.light=T}return b}function _(w,M,T,S,b){if(w.visible===!1)return;if(w.layers.test(M.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&b===rr)&&(!w.frustumCulled||i.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,w.matrixWorld);const B=e.update(w),G=w.material;if(Array.isArray(G)){const j=B.groups;for(let N=0,ee=j.length;N<ee;N++){const W=j[N],Y=G[W.materialIndex];if(Y&&Y.visible){const Q=x(w,Y,S,b);w.onBeforeShadow(s,w,M,T,B,Q,W),s.renderBufferDirect(T,null,B,Q,w,W),w.onAfterShadow(s,w,M,T,B,Q,W)}}}else if(G.visible){const j=x(w,G,S,b);w.onBeforeShadow(s,w,M,T,B,j,null),s.renderBufferDirect(T,null,B,j,w,null),w.onAfterShadow(s,w,M,T,B,j,null)}}const I=w.children;for(let B=0,G=I.length;B<G;B++)_(I[B],M,T,S,b)}function E(w){w.target.removeEventListener("dispose",E);for(const T in c){const S=c[T],b=w.target.uuid;b in S&&(S[b].dispose(),delete S[b])}}}const LE={[Tc]:Ac,[Cc]:Ic,[Rc]:Dc,[Bs]:Pc,[Ac]:Tc,[Ic]:Cc,[Dc]:Rc,[Pc]:Bs};function NE(s,e){function t(){let te=!1;const Ce=new Rt;let fe=null;const Pe=new Rt(0,0,0,0);return{setMask:function(Ue){fe!==Ue&&!te&&(s.colorMask(Ue,Ue,Ue,Ue),fe=Ue)},setLocked:function(Ue){te=Ue},setClear:function(Ue,Ie,st,vt,lt){lt===!0&&(Ue*=vt,Ie*=vt,st*=vt),Ce.set(Ue,Ie,st,vt),Pe.equals(Ce)===!1&&(s.clearColor(Ue,Ie,st,vt),Pe.copy(Ce))},reset:function(){te=!1,fe=null,Pe.set(-1,0,0,0)}}}function i(){let te=!1,Ce=!1,fe=null,Pe=null,Ue=null;return{setReversed:function(Ie){if(Ce!==Ie){const st=e.get("EXT_clip_control");Ie?st.clipControlEXT(st.LOWER_LEFT_EXT,st.ZERO_TO_ONE_EXT):st.clipControlEXT(st.LOWER_LEFT_EXT,st.NEGATIVE_ONE_TO_ONE_EXT),Ce=Ie;const vt=Ue;Ue=null,this.setClear(vt)}},getReversed:function(){return Ce},setTest:function(Ie){Ie?q(s.DEPTH_TEST):re(s.DEPTH_TEST)},setMask:function(Ie){fe!==Ie&&!te&&(s.depthMask(Ie),fe=Ie)},setFunc:function(Ie){if(Ce&&(Ie=LE[Ie]),Pe!==Ie){switch(Ie){case Tc:s.depthFunc(s.NEVER);break;case Ac:s.depthFunc(s.ALWAYS);break;case Cc:s.depthFunc(s.LESS);break;case Bs:s.depthFunc(s.LEQUAL);break;case Rc:s.depthFunc(s.EQUAL);break;case Pc:s.depthFunc(s.GEQUAL);break;case Ic:s.depthFunc(s.GREATER);break;case Dc:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}Pe=Ie}},setLocked:function(Ie){te=Ie},setClear:function(Ie){Ue!==Ie&&(Ce&&(Ie=1-Ie),s.clearDepth(Ie),Ue=Ie)},reset:function(){te=!1,fe=null,Pe=null,Ue=null,Ce=!1}}}function n(){let te=!1,Ce=null,fe=null,Pe=null,Ue=null,Ie=null,st=null,vt=null,lt=null;return{setTest:function(tt){te||(tt?q(s.STENCIL_TEST):re(s.STENCIL_TEST))},setMask:function(tt){Ce!==tt&&!te&&(s.stencilMask(tt),Ce=tt)},setFunc:function(tt,Ht,Zt){(fe!==tt||Pe!==Ht||Ue!==Zt)&&(s.stencilFunc(tt,Ht,Zt),fe=tt,Pe=Ht,Ue=Zt)},setOp:function(tt,Ht,Zt){(Ie!==tt||st!==Ht||vt!==Zt)&&(s.stencilOp(tt,Ht,Zt),Ie=tt,st=Ht,vt=Zt)},setLocked:function(tt){te=tt},setClear:function(tt){lt!==tt&&(s.clearStencil(tt),lt=tt)},reset:function(){te=!1,Ce=null,fe=null,Pe=null,Ue=null,Ie=null,st=null,vt=null,lt=null}}}const r=new t,o=new i,a=new n,l=new WeakMap,c=new WeakMap;let h={},u={},d=new WeakMap,f=[],p=null,v=!1,m=null,g=null,y=null,x=null,_=null,E=null,w=null,M=new Be(0,0,0),T=0,S=!1,b=null,U=null,I=null,B=null,G=null;const j=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let N=!1,ee=0;const W=s.getParameter(s.VERSION);W.indexOf("WebGL")!==-1?(ee=parseFloat(/^WebGL (\d)/.exec(W)[1]),N=ee>=1):W.indexOf("OpenGL ES")!==-1&&(ee=parseFloat(/^OpenGL ES (\d)/.exec(W)[1]),N=ee>=2);let Y=null,Q={};const z=s.getParameter(s.SCISSOR_BOX),J=s.getParameter(s.VIEWPORT),$=new Rt().fromArray(z),V=new Rt().fromArray(J);function H(te,Ce,fe,Pe){const Ue=new Uint8Array(4),Ie=s.createTexture();s.bindTexture(te,Ie),s.texParameteri(te,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(te,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let st=0;st<fe;st++)te===s.TEXTURE_3D||te===s.TEXTURE_2D_ARRAY?s.texImage3D(Ce,0,s.RGBA,1,1,Pe,0,s.RGBA,s.UNSIGNED_BYTE,Ue):s.texImage2D(Ce+st,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Ue);return Ie}const K={};K[s.TEXTURE_2D]=H(s.TEXTURE_2D,s.TEXTURE_2D,1),K[s.TEXTURE_CUBE_MAP]=H(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),K[s.TEXTURE_2D_ARRAY]=H(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),K[s.TEXTURE_3D]=H(s.TEXTURE_3D,s.TEXTURE_3D,1,1),r.setClear(0,0,0,1),o.setClear(1),a.setClear(0),q(s.DEPTH_TEST),o.setFunc(Bs),he(!1),ue(fd),q(s.CULL_FACE),X(Cr);function q(te){h[te]!==!0&&(s.enable(te),h[te]=!0)}function re(te){h[te]!==!1&&(s.disable(te),h[te]=!1)}function be(te,Ce){return u[te]!==Ce?(s.bindFramebuffer(te,Ce),u[te]=Ce,te===s.DRAW_FRAMEBUFFER&&(u[s.FRAMEBUFFER]=Ce),te===s.FRAMEBUFFER&&(u[s.DRAW_FRAMEBUFFER]=Ce),!0):!1}function Se(te,Ce){let fe=f,Pe=!1;if(te){fe=d.get(Ce),fe===void 0&&(fe=[],d.set(Ce,fe));const Ue=te.textures;if(fe.length!==Ue.length||fe[0]!==s.COLOR_ATTACHMENT0){for(let Ie=0,st=Ue.length;Ie<st;Ie++)fe[Ie]=s.COLOR_ATTACHMENT0+Ie;fe.length=Ue.length,Pe=!0}}else fe[0]!==s.BACK&&(fe[0]=s.BACK,Pe=!0);Pe&&s.drawBuffers(fe)}function Me(te){return p!==te?(s.useProgram(te),p=te,!0):!1}const ye={[qr]:s.FUNC_ADD,[Xg]:s.FUNC_SUBTRACT,[Yg]:s.FUNC_REVERSE_SUBTRACT};ye[qg]=s.MIN,ye[jg]=s.MAX;const We={[Zg]:s.ZERO,[Kg]:s.ONE,[Jg]:s.SRC_COLOR,[wc]:s.SRC_ALPHA,[i0]:s.SRC_ALPHA_SATURATE,[t0]:s.DST_COLOR,[$g]:s.DST_ALPHA,[Qg]:s.ONE_MINUS_SRC_COLOR,[Ec]:s.ONE_MINUS_SRC_ALPHA,[n0]:s.ONE_MINUS_DST_COLOR,[e0]:s.ONE_MINUS_DST_ALPHA,[r0]:s.CONSTANT_COLOR,[s0]:s.ONE_MINUS_CONSTANT_COLOR,[o0]:s.CONSTANT_ALPHA,[a0]:s.ONE_MINUS_CONSTANT_ALPHA};function X(te,Ce,fe,Pe,Ue,Ie,st,vt,lt,tt){if(te===Cr){v===!0&&(re(s.BLEND),v=!1);return}if(v===!1&&(q(s.BLEND),v=!0),te!==Wg){if(te!==m||tt!==S){if((g!==qr||_!==qr)&&(s.blendEquation(s.FUNC_ADD),g=qr,_=qr),tt)switch(te){case Ls:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case pd:s.blendFunc(s.ONE,s.ONE);break;case md:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case gd:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",te);break}else switch(te){case Ls:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case pd:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case md:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case gd:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",te);break}y=null,x=null,E=null,w=null,M.set(0,0,0),T=0,m=te,S=tt}return}Ue=Ue||Ce,Ie=Ie||fe,st=st||Pe,(Ce!==g||Ue!==_)&&(s.blendEquationSeparate(ye[Ce],ye[Ue]),g=Ce,_=Ue),(fe!==y||Pe!==x||Ie!==E||st!==w)&&(s.blendFuncSeparate(We[fe],We[Pe],We[Ie],We[st]),y=fe,x=Pe,E=Ie,w=st),(vt.equals(M)===!1||lt!==T)&&(s.blendColor(vt.r,vt.g,vt.b,lt),M.copy(vt),T=lt),m=te,S=!1}function Fe(te,Ce){te.side===vi?re(s.CULL_FACE):q(s.CULL_FACE);let fe=te.side===ti;Ce&&(fe=!fe),he(fe),te.blending===Ls&&te.transparent===!1?X(Cr):X(te.blending,te.blendEquation,te.blendSrc,te.blendDst,te.blendEquationAlpha,te.blendSrcAlpha,te.blendDstAlpha,te.blendColor,te.blendAlpha,te.premultipliedAlpha),o.setFunc(te.depthFunc),o.setTest(te.depthTest),o.setMask(te.depthWrite),r.setMask(te.colorWrite);const Pe=te.stencilWrite;a.setTest(Pe),Pe&&(a.setMask(te.stencilWriteMask),a.setFunc(te.stencilFunc,te.stencilRef,te.stencilFuncMask),a.setOp(te.stencilFail,te.stencilZFail,te.stencilZPass)),_e(te.polygonOffset,te.polygonOffsetFactor,te.polygonOffsetUnits),te.alphaToCoverage===!0?q(s.SAMPLE_ALPHA_TO_COVERAGE):re(s.SAMPLE_ALPHA_TO_COVERAGE)}function he(te){b!==te&&(te?s.frontFace(s.CW):s.frontFace(s.CCW),b=te)}function ue(te){te!==Vg?(q(s.CULL_FACE),te!==U&&(te===fd?s.cullFace(s.BACK):te===Hg?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):re(s.CULL_FACE),U=te}function ne(te){te!==I&&(N&&s.lineWidth(te),I=te)}function _e(te,Ce,fe){te?(q(s.POLYGON_OFFSET_FILL),(B!==Ce||G!==fe)&&(s.polygonOffset(Ce,fe),B=Ce,G=fe)):re(s.POLYGON_OFFSET_FILL)}function le(te){te?q(s.SCISSOR_TEST):re(s.SCISSOR_TEST)}function P(te){te===void 0&&(te=s.TEXTURE0+j-1),Y!==te&&(s.activeTexture(te),Y=te)}function A(te,Ce,fe){fe===void 0&&(Y===null?fe=s.TEXTURE0+j-1:fe=Y);let Pe=Q[fe];Pe===void 0&&(Pe={type:void 0,texture:void 0},Q[fe]=Pe),(Pe.type!==te||Pe.texture!==Ce)&&(Y!==fe&&(s.activeTexture(fe),Y=fe),s.bindTexture(te,Ce||K[te]),Pe.type=te,Pe.texture=Ce)}function Z(){const te=Q[Y];te!==void 0&&te.type!==void 0&&(s.bindTexture(te.type,null),te.type=void 0,te.texture=void 0)}function ae(){try{s.compressedTexImage2D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function se(){try{s.compressedTexImage3D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function de(){try{s.texSubImage2D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function we(){try{s.texSubImage3D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function ve(){try{s.compressedTexSubImage2D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function Ae(){try{s.compressedTexSubImage3D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function Xe(){try{s.texStorage2D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function Re(){try{s.texStorage3D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function Oe(){try{s.texImage2D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function ke(){try{s.texImage3D(...arguments)}catch(te){console.error("THREE.WebGLState:",te)}}function ze(te){$.equals(te)===!1&&(s.scissor(te.x,te.y,te.z,te.w),$.copy(te))}function Te(te){V.equals(te)===!1&&(s.viewport(te.x,te.y,te.z,te.w),V.copy(te))}function ht(te,Ce){let fe=c.get(Ce);fe===void 0&&(fe=new WeakMap,c.set(Ce,fe));let Pe=fe.get(te);Pe===void 0&&(Pe=s.getUniformBlockIndex(Ce,te.name),fe.set(te,Pe))}function Qe(te,Ce){const Pe=c.get(Ce).get(te);l.get(Ce)!==Pe&&(s.uniformBlockBinding(Ce,Pe,te.__bindingPointIndex),l.set(Ce,Pe))}function St(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),o.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),h={},Y=null,Q={},u={},d=new WeakMap,f=[],p=null,v=!1,m=null,g=null,y=null,x=null,_=null,E=null,w=null,M=new Be(0,0,0),T=0,S=!1,b=null,U=null,I=null,B=null,G=null,$.set(0,0,s.canvas.width,s.canvas.height),V.set(0,0,s.canvas.width,s.canvas.height),r.reset(),o.reset(),a.reset()}return{buffers:{color:r,depth:o,stencil:a},enable:q,disable:re,bindFramebuffer:be,drawBuffers:Se,useProgram:Me,setBlending:X,setMaterial:Fe,setFlipSided:he,setCullFace:ue,setLineWidth:ne,setPolygonOffset:_e,setScissorTest:le,activeTexture:P,bindTexture:A,unbindTexture:Z,compressedTexImage2D:ae,compressedTexImage3D:se,texImage2D:Oe,texImage3D:ke,updateUBOMapping:ht,uniformBlockBinding:Qe,texStorage2D:Xe,texStorage3D:Re,texSubImage2D:de,texSubImage3D:we,compressedTexSubImage2D:ve,compressedTexSubImage3D:Ae,scissor:ze,viewport:Te,reset:St}}function OE(s,e,t,i,n,r,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new ge,h=new WeakMap;let u;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(P,A){return f?new OffscreenCanvas(P,A):La("canvas")}function v(P,A,Z){let ae=1;const se=le(P);if((se.width>Z||se.height>Z)&&(ae=Z/Math.max(se.width,se.height)),ae<1)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap||typeof VideoFrame<"u"&&P instanceof VideoFrame){const de=Math.floor(ae*se.width),we=Math.floor(ae*se.height);u===void 0&&(u=p(de,we));const ve=A?p(de,we):u;return ve.width=de,ve.height=we,ve.getContext("2d").drawImage(P,0,0,de,we),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+se.width+"x"+se.height+") to ("+de+"x"+we+")."),ve}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+se.width+"x"+se.height+")."),P;return P}function m(P){return P.generateMipmaps}function g(P){s.generateMipmap(P)}function y(P){return P.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:P.isWebGL3DRenderTarget?s.TEXTURE_3D:P.isWebGLArrayRenderTarget||P.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function x(P,A,Z,ae,se=!1){if(P!==null){if(s[P]!==void 0)return s[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let de=A;if(A===s.RED&&(Z===s.FLOAT&&(de=s.R32F),Z===s.HALF_FLOAT&&(de=s.R16F),Z===s.UNSIGNED_BYTE&&(de=s.R8)),A===s.RED_INTEGER&&(Z===s.UNSIGNED_BYTE&&(de=s.R8UI),Z===s.UNSIGNED_SHORT&&(de=s.R16UI),Z===s.UNSIGNED_INT&&(de=s.R32UI),Z===s.BYTE&&(de=s.R8I),Z===s.SHORT&&(de=s.R16I),Z===s.INT&&(de=s.R32I)),A===s.RG&&(Z===s.FLOAT&&(de=s.RG32F),Z===s.HALF_FLOAT&&(de=s.RG16F),Z===s.UNSIGNED_BYTE&&(de=s.RG8)),A===s.RG_INTEGER&&(Z===s.UNSIGNED_BYTE&&(de=s.RG8UI),Z===s.UNSIGNED_SHORT&&(de=s.RG16UI),Z===s.UNSIGNED_INT&&(de=s.RG32UI),Z===s.BYTE&&(de=s.RG8I),Z===s.SHORT&&(de=s.RG16I),Z===s.INT&&(de=s.RG32I)),A===s.RGB_INTEGER&&(Z===s.UNSIGNED_BYTE&&(de=s.RGB8UI),Z===s.UNSIGNED_SHORT&&(de=s.RGB16UI),Z===s.UNSIGNED_INT&&(de=s.RGB32UI),Z===s.BYTE&&(de=s.RGB8I),Z===s.SHORT&&(de=s.RGB16I),Z===s.INT&&(de=s.RGB32I)),A===s.RGBA_INTEGER&&(Z===s.UNSIGNED_BYTE&&(de=s.RGBA8UI),Z===s.UNSIGNED_SHORT&&(de=s.RGBA16UI),Z===s.UNSIGNED_INT&&(de=s.RGBA32UI),Z===s.BYTE&&(de=s.RGBA8I),Z===s.SHORT&&(de=s.RGBA16I),Z===s.INT&&(de=s.RGBA32I)),A===s.RGB&&Z===s.UNSIGNED_INT_5_9_9_9_REV&&(de=s.RGB9_E5),A===s.RGBA){const we=se?Ia:Dt.getTransfer(ae);Z===s.FLOAT&&(de=s.RGBA32F),Z===s.HALF_FLOAT&&(de=s.RGBA16F),Z===s.UNSIGNED_BYTE&&(de=we===qt?s.SRGB8_ALPHA8:s.RGBA8),Z===s.UNSIGNED_SHORT_4_4_4_4&&(de=s.RGBA4),Z===s.UNSIGNED_SHORT_5_5_5_1&&(de=s.RGB5_A1)}return(de===s.R16F||de===s.R32F||de===s.RG16F||de===s.RG32F||de===s.RGBA16F||de===s.RGBA32F)&&e.get("EXT_color_buffer_float"),de}function _(P,A){let Z;return P?A===null||A===Ur||A===Ao?Z=s.DEPTH24_STENCIL8:A===xi?Z=s.DEPTH32F_STENCIL8:A===To&&(Z=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):A===null||A===Ur||A===Ao?Z=s.DEPTH_COMPONENT24:A===xi?Z=s.DEPTH_COMPONENT32F:A===To&&(Z=s.DEPTH_COMPONENT16),Z}function E(P,A){return m(P)===!0||P.isFramebufferTexture&&P.minFilter!==Vn&&P.minFilter!==bn?Math.log2(Math.max(A.width,A.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?A.mipmaps.length:1}function w(P){const A=P.target;A.removeEventListener("dispose",w),T(A),A.isVideoTexture&&h.delete(A)}function M(P){const A=P.target;A.removeEventListener("dispose",M),b(A)}function T(P){const A=i.get(P);if(A.__webglInit===void 0)return;const Z=P.source,ae=d.get(Z);if(ae){const se=ae[A.__cacheKey];se.usedTimes--,se.usedTimes===0&&S(P),Object.keys(ae).length===0&&d.delete(Z)}i.remove(P)}function S(P){const A=i.get(P);s.deleteTexture(A.__webglTexture);const Z=P.source,ae=d.get(Z);delete ae[A.__cacheKey],o.memory.textures--}function b(P){const A=i.get(P);if(P.depthTexture&&(P.depthTexture.dispose(),i.remove(P.depthTexture)),P.isWebGLCubeRenderTarget)for(let ae=0;ae<6;ae++){if(Array.isArray(A.__webglFramebuffer[ae]))for(let se=0;se<A.__webglFramebuffer[ae].length;se++)s.deleteFramebuffer(A.__webglFramebuffer[ae][se]);else s.deleteFramebuffer(A.__webglFramebuffer[ae]);A.__webglDepthbuffer&&s.deleteRenderbuffer(A.__webglDepthbuffer[ae])}else{if(Array.isArray(A.__webglFramebuffer))for(let ae=0;ae<A.__webglFramebuffer.length;ae++)s.deleteFramebuffer(A.__webglFramebuffer[ae]);else s.deleteFramebuffer(A.__webglFramebuffer);if(A.__webglDepthbuffer&&s.deleteRenderbuffer(A.__webglDepthbuffer),A.__webglMultisampledFramebuffer&&s.deleteFramebuffer(A.__webglMultisampledFramebuffer),A.__webglColorRenderbuffer)for(let ae=0;ae<A.__webglColorRenderbuffer.length;ae++)A.__webglColorRenderbuffer[ae]&&s.deleteRenderbuffer(A.__webglColorRenderbuffer[ae]);A.__webglDepthRenderbuffer&&s.deleteRenderbuffer(A.__webglDepthRenderbuffer)}const Z=P.textures;for(let ae=0,se=Z.length;ae<se;ae++){const de=i.get(Z[ae]);de.__webglTexture&&(s.deleteTexture(de.__webglTexture),o.memory.textures--),i.remove(Z[ae])}i.remove(P)}let U=0;function I(){U=0}function B(){const P=U;return P>=n.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+n.maxTextures),U+=1,P}function G(P){const A=[];return A.push(P.wrapS),A.push(P.wrapT),A.push(P.wrapR||0),A.push(P.magFilter),A.push(P.minFilter),A.push(P.anisotropy),A.push(P.internalFormat),A.push(P.format),A.push(P.type),A.push(P.generateMipmaps),A.push(P.premultiplyAlpha),A.push(P.flipY),A.push(P.unpackAlignment),A.push(P.colorSpace),A.join()}function j(P,A){const Z=i.get(P);if(P.isVideoTexture&&ne(P),P.isRenderTargetTexture===!1&&P.version>0&&Z.__version!==P.version){const ae=P.image;if(ae===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ae.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{V(Z,P,A);return}}t.bindTexture(s.TEXTURE_2D,Z.__webglTexture,s.TEXTURE0+A)}function N(P,A){const Z=i.get(P);if(P.version>0&&Z.__version!==P.version){V(Z,P,A);return}t.bindTexture(s.TEXTURE_2D_ARRAY,Z.__webglTexture,s.TEXTURE0+A)}function ee(P,A){const Z=i.get(P);if(P.version>0&&Z.__version!==P.version){V(Z,P,A);return}t.bindTexture(s.TEXTURE_3D,Z.__webglTexture,s.TEXTURE0+A)}function W(P,A){const Z=i.get(P);if(P.version>0&&Z.__version!==P.version){H(Z,P,A);return}t.bindTexture(s.TEXTURE_CUBE_MAP,Z.__webglTexture,s.TEXTURE0+A)}const Y={[ji]:s.REPEAT,[yi]:s.CLAMP_TO_EDGE,[Ca]:s.MIRRORED_REPEAT},Q={[Vn]:s.NEAREST,[Xd]:s.NEAREST_MIPMAP_NEAREST,[bo]:s.NEAREST_MIPMAP_LINEAR,[bn]:s.LINEAR,[pa]:s.LINEAR_MIPMAP_NEAREST,[Zi]:s.LINEAR_MIPMAP_LINEAR},z={[S0]:s.NEVER,[C0]:s.ALWAYS,[M0]:s.LESS,[rf]:s.LEQUAL,[w0]:s.EQUAL,[A0]:s.GEQUAL,[E0]:s.GREATER,[T0]:s.NOTEQUAL};function J(P,A){if(A.type===xi&&e.has("OES_texture_float_linear")===!1&&(A.magFilter===bn||A.magFilter===pa||A.magFilter===bo||A.magFilter===Zi||A.minFilter===bn||A.minFilter===pa||A.minFilter===bo||A.minFilter===Zi)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(P,s.TEXTURE_WRAP_S,Y[A.wrapS]),s.texParameteri(P,s.TEXTURE_WRAP_T,Y[A.wrapT]),(P===s.TEXTURE_3D||P===s.TEXTURE_2D_ARRAY)&&s.texParameteri(P,s.TEXTURE_WRAP_R,Y[A.wrapR]),s.texParameteri(P,s.TEXTURE_MAG_FILTER,Q[A.magFilter]),s.texParameteri(P,s.TEXTURE_MIN_FILTER,Q[A.minFilter]),A.compareFunction&&(s.texParameteri(P,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(P,s.TEXTURE_COMPARE_FUNC,z[A.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(A.magFilter===Vn||A.minFilter!==bo&&A.minFilter!==Zi||A.type===xi&&e.has("OES_texture_float_linear")===!1)return;if(A.anisotropy>1||i.get(A).__currentAnisotropy){const Z=e.get("EXT_texture_filter_anisotropic");s.texParameterf(P,Z.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,n.getMaxAnisotropy())),i.get(A).__currentAnisotropy=A.anisotropy}}}function $(P,A){let Z=!1;P.__webglInit===void 0&&(P.__webglInit=!0,A.addEventListener("dispose",w));const ae=A.source;let se=d.get(ae);se===void 0&&(se={},d.set(ae,se));const de=G(A);if(de!==P.__cacheKey){se[de]===void 0&&(se[de]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,Z=!0),se[de].usedTimes++;const we=se[P.__cacheKey];we!==void 0&&(se[P.__cacheKey].usedTimes--,we.usedTimes===0&&S(A)),P.__cacheKey=de,P.__webglTexture=se[de].texture}return Z}function V(P,A,Z){let ae=s.TEXTURE_2D;(A.isDataArrayTexture||A.isCompressedArrayTexture)&&(ae=s.TEXTURE_2D_ARRAY),A.isData3DTexture&&(ae=s.TEXTURE_3D);const se=$(P,A),de=A.source;t.bindTexture(ae,P.__webglTexture,s.TEXTURE0+Z);const we=i.get(de);if(de.version!==we.__version||se===!0){t.activeTexture(s.TEXTURE0+Z);const ve=Dt.getPrimaries(Dt.workingColorSpace),Ae=A.colorSpace===Sr?null:Dt.getPrimaries(A.colorSpace),Xe=A.colorSpace===Sr||ve===Ae?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,A.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,A.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Xe);let Re=v(A.image,!1,n.maxTextureSize);Re=_e(A,Re);const Oe=r.convert(A.format,A.colorSpace),ke=r.convert(A.type);let ze=x(A.internalFormat,Oe,ke,A.colorSpace,A.isVideoTexture);J(ae,A);let Te;const ht=A.mipmaps,Qe=A.isVideoTexture!==!0,St=we.__version===void 0||se===!0,te=de.dataReady,Ce=E(A,Re);if(A.isDepthTexture)ze=_(A.format===Ro,A.type),St&&(Qe?t.texStorage2D(s.TEXTURE_2D,1,ze,Re.width,Re.height):t.texImage2D(s.TEXTURE_2D,0,ze,Re.width,Re.height,0,Oe,ke,null));else if(A.isDataTexture)if(ht.length>0){Qe&&St&&t.texStorage2D(s.TEXTURE_2D,Ce,ze,ht[0].width,ht[0].height);for(let fe=0,Pe=ht.length;fe<Pe;fe++)Te=ht[fe],Qe?te&&t.texSubImage2D(s.TEXTURE_2D,fe,0,0,Te.width,Te.height,Oe,ke,Te.data):t.texImage2D(s.TEXTURE_2D,fe,ze,Te.width,Te.height,0,Oe,ke,Te.data);A.generateMipmaps=!1}else Qe?(St&&t.texStorage2D(s.TEXTURE_2D,Ce,ze,Re.width,Re.height),te&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Re.width,Re.height,Oe,ke,Re.data)):t.texImage2D(s.TEXTURE_2D,0,ze,Re.width,Re.height,0,Oe,ke,Re.data);else if(A.isCompressedTexture)if(A.isCompressedArrayTexture){Qe&&St&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Ce,ze,ht[0].width,ht[0].height,Re.depth);for(let fe=0,Pe=ht.length;fe<Pe;fe++)if(Te=ht[fe],A.format!==ci)if(Oe!==null)if(Qe){if(te)if(A.layerUpdates.size>0){const Ue=Ed(Te.width,Te.height,A.format,A.type);for(const Ie of A.layerUpdates){const st=Te.data.subarray(Ie*Ue/Te.data.BYTES_PER_ELEMENT,(Ie+1)*Ue/Te.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,fe,0,0,Ie,Te.width,Te.height,1,Oe,st)}A.clearLayerUpdates()}else t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,fe,0,0,0,Te.width,Te.height,Re.depth,Oe,Te.data)}else t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,fe,ze,Te.width,Te.height,Re.depth,0,Te.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else Qe?te&&t.texSubImage3D(s.TEXTURE_2D_ARRAY,fe,0,0,0,Te.width,Te.height,Re.depth,Oe,ke,Te.data):t.texImage3D(s.TEXTURE_2D_ARRAY,fe,ze,Te.width,Te.height,Re.depth,0,Oe,ke,Te.data)}else{Qe&&St&&t.texStorage2D(s.TEXTURE_2D,Ce,ze,ht[0].width,ht[0].height);for(let fe=0,Pe=ht.length;fe<Pe;fe++)Te=ht[fe],A.format!==ci?Oe!==null?Qe?te&&t.compressedTexSubImage2D(s.TEXTURE_2D,fe,0,0,Te.width,Te.height,Oe,Te.data):t.compressedTexImage2D(s.TEXTURE_2D,fe,ze,Te.width,Te.height,0,Te.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Qe?te&&t.texSubImage2D(s.TEXTURE_2D,fe,0,0,Te.width,Te.height,Oe,ke,Te.data):t.texImage2D(s.TEXTURE_2D,fe,ze,Te.width,Te.height,0,Oe,ke,Te.data)}else if(A.isDataArrayTexture)if(Qe){if(St&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Ce,ze,Re.width,Re.height,Re.depth),te)if(A.layerUpdates.size>0){const fe=Ed(Re.width,Re.height,A.format,A.type);for(const Pe of A.layerUpdates){const Ue=Re.data.subarray(Pe*fe/Re.data.BYTES_PER_ELEMENT,(Pe+1)*fe/Re.data.BYTES_PER_ELEMENT);t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,Pe,Re.width,Re.height,1,Oe,ke,Ue)}A.clearLayerUpdates()}else t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,Re.width,Re.height,Re.depth,Oe,ke,Re.data)}else t.texImage3D(s.TEXTURE_2D_ARRAY,0,ze,Re.width,Re.height,Re.depth,0,Oe,ke,Re.data);else if(A.isData3DTexture)Qe?(St&&t.texStorage3D(s.TEXTURE_3D,Ce,ze,Re.width,Re.height,Re.depth),te&&t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,Re.width,Re.height,Re.depth,Oe,ke,Re.data)):t.texImage3D(s.TEXTURE_3D,0,ze,Re.width,Re.height,Re.depth,0,Oe,ke,Re.data);else if(A.isFramebufferTexture){if(St)if(Qe)t.texStorage2D(s.TEXTURE_2D,Ce,ze,Re.width,Re.height);else{let fe=Re.width,Pe=Re.height;for(let Ue=0;Ue<Ce;Ue++)t.texImage2D(s.TEXTURE_2D,Ue,ze,fe,Pe,0,Oe,ke,null),fe>>=1,Pe>>=1}}else if(ht.length>0){if(Qe&&St){const fe=le(ht[0]);t.texStorage2D(s.TEXTURE_2D,Ce,ze,fe.width,fe.height)}for(let fe=0,Pe=ht.length;fe<Pe;fe++)Te=ht[fe],Qe?te&&t.texSubImage2D(s.TEXTURE_2D,fe,0,0,Oe,ke,Te):t.texImage2D(s.TEXTURE_2D,fe,ze,Oe,ke,Te);A.generateMipmaps=!1}else if(Qe){if(St){const fe=le(Re);t.texStorage2D(s.TEXTURE_2D,Ce,ze,fe.width,fe.height)}te&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Oe,ke,Re)}else t.texImage2D(s.TEXTURE_2D,0,ze,Oe,ke,Re);m(A)&&g(ae),we.__version=de.version,A.onUpdate&&A.onUpdate(A)}P.__version=A.version}function H(P,A,Z){if(A.image.length!==6)return;const ae=$(P,A),se=A.source;t.bindTexture(s.TEXTURE_CUBE_MAP,P.__webglTexture,s.TEXTURE0+Z);const de=i.get(se);if(se.version!==de.__version||ae===!0){t.activeTexture(s.TEXTURE0+Z);const we=Dt.getPrimaries(Dt.workingColorSpace),ve=A.colorSpace===Sr?null:Dt.getPrimaries(A.colorSpace),Ae=A.colorSpace===Sr||we===ve?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,A.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,A.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ae);const Xe=A.isCompressedTexture||A.image[0].isCompressedTexture,Re=A.image[0]&&A.image[0].isDataTexture,Oe=[];for(let Pe=0;Pe<6;Pe++)!Xe&&!Re?Oe[Pe]=v(A.image[Pe],!0,n.maxCubemapSize):Oe[Pe]=Re?A.image[Pe].image:A.image[Pe],Oe[Pe]=_e(A,Oe[Pe]);const ke=Oe[0],ze=r.convert(A.format,A.colorSpace),Te=r.convert(A.type),ht=x(A.internalFormat,ze,Te,A.colorSpace),Qe=A.isVideoTexture!==!0,St=de.__version===void 0||ae===!0,te=se.dataReady;let Ce=E(A,ke);J(s.TEXTURE_CUBE_MAP,A);let fe;if(Xe){Qe&&St&&t.texStorage2D(s.TEXTURE_CUBE_MAP,Ce,ht,ke.width,ke.height);for(let Pe=0;Pe<6;Pe++){fe=Oe[Pe].mipmaps;for(let Ue=0;Ue<fe.length;Ue++){const Ie=fe[Ue];A.format!==ci?ze!==null?Qe?te&&t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ue,0,0,Ie.width,Ie.height,ze,Ie.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ue,ht,Ie.width,Ie.height,0,Ie.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Qe?te&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ue,0,0,Ie.width,Ie.height,ze,Te,Ie.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ue,ht,Ie.width,Ie.height,0,ze,Te,Ie.data)}}}else{if(fe=A.mipmaps,Qe&&St){fe.length>0&&Ce++;const Pe=le(Oe[0]);t.texStorage2D(s.TEXTURE_CUBE_MAP,Ce,ht,Pe.width,Pe.height)}for(let Pe=0;Pe<6;Pe++)if(Re){Qe?te&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,0,0,0,Oe[Pe].width,Oe[Pe].height,ze,Te,Oe[Pe].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,0,ht,Oe[Pe].width,Oe[Pe].height,0,ze,Te,Oe[Pe].data);for(let Ue=0;Ue<fe.length;Ue++){const st=fe[Ue].image[Pe].image;Qe?te&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ue+1,0,0,st.width,st.height,ze,Te,st.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ue+1,ht,st.width,st.height,0,ze,Te,st.data)}}else{Qe?te&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,0,0,0,ze,Te,Oe[Pe]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,0,ht,ze,Te,Oe[Pe]);for(let Ue=0;Ue<fe.length;Ue++){const Ie=fe[Ue];Qe?te&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ue+1,0,0,ze,Te,Ie.image[Pe]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+Pe,Ue+1,ht,ze,Te,Ie.image[Pe])}}}m(A)&&g(s.TEXTURE_CUBE_MAP),de.__version=se.version,A.onUpdate&&A.onUpdate(A)}P.__version=A.version}function K(P,A,Z,ae,se,de){const we=r.convert(Z.format,Z.colorSpace),ve=r.convert(Z.type),Ae=x(Z.internalFormat,we,ve,Z.colorSpace),Xe=i.get(A),Re=i.get(Z);if(Re.__renderTarget=A,!Xe.__hasExternalTextures){const Oe=Math.max(1,A.width>>de),ke=Math.max(1,A.height>>de);se===s.TEXTURE_3D||se===s.TEXTURE_2D_ARRAY?t.texImage3D(se,de,Ae,Oe,ke,A.depth,0,we,ve,null):t.texImage2D(se,de,Ae,Oe,ke,0,we,ve,null)}t.bindFramebuffer(s.FRAMEBUFFER,P),ue(A)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,ae,se,Re.__webglTexture,0,he(A)):(se===s.TEXTURE_2D||se>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&se<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,ae,se,Re.__webglTexture,de),t.bindFramebuffer(s.FRAMEBUFFER,null)}function q(P,A,Z){if(s.bindRenderbuffer(s.RENDERBUFFER,P),A.depthBuffer){const ae=A.depthTexture,se=ae&&ae.isDepthTexture?ae.type:null,de=_(A.stencilBuffer,se),we=A.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ve=he(A);ue(A)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,ve,de,A.width,A.height):Z?s.renderbufferStorageMultisample(s.RENDERBUFFER,ve,de,A.width,A.height):s.renderbufferStorage(s.RENDERBUFFER,de,A.width,A.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,we,s.RENDERBUFFER,P)}else{const ae=A.textures;for(let se=0;se<ae.length;se++){const de=ae[se],we=r.convert(de.format,de.colorSpace),ve=r.convert(de.type),Ae=x(de.internalFormat,we,ve,de.colorSpace),Xe=he(A);Z&&ue(A)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Xe,Ae,A.width,A.height):ue(A)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Xe,Ae,A.width,A.height):s.renderbufferStorage(s.RENDERBUFFER,Ae,A.width,A.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function re(P,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,P),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const ae=i.get(A.depthTexture);ae.__renderTarget=A,(!ae.__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),j(A.depthTexture,0);const se=ae.__webglTexture,de=he(A);if(A.depthTexture.format===Co)ue(A)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,se,0,de):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,se,0);else if(A.depthTexture.format===Ro)ue(A)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,se,0,de):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,se,0);else throw new Error("Unknown depthTexture format")}function be(P){const A=i.get(P),Z=P.isWebGLCubeRenderTarget===!0;if(A.__boundDepthTexture!==P.depthTexture){const ae=P.depthTexture;if(A.__depthDisposeCallback&&A.__depthDisposeCallback(),ae){const se=()=>{delete A.__boundDepthTexture,delete A.__depthDisposeCallback,ae.removeEventListener("dispose",se)};ae.addEventListener("dispose",se),A.__depthDisposeCallback=se}A.__boundDepthTexture=ae}if(P.depthTexture&&!A.__autoAllocateDepthBuffer){if(Z)throw new Error("target.depthTexture not supported in Cube render targets");re(A.__webglFramebuffer,P)}else if(Z){A.__webglDepthbuffer=[];for(let ae=0;ae<6;ae++)if(t.bindFramebuffer(s.FRAMEBUFFER,A.__webglFramebuffer[ae]),A.__webglDepthbuffer[ae]===void 0)A.__webglDepthbuffer[ae]=s.createRenderbuffer(),q(A.__webglDepthbuffer[ae],P,!1);else{const se=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,de=A.__webglDepthbuffer[ae];s.bindRenderbuffer(s.RENDERBUFFER,de),s.framebufferRenderbuffer(s.FRAMEBUFFER,se,s.RENDERBUFFER,de)}}else if(t.bindFramebuffer(s.FRAMEBUFFER,A.__webglFramebuffer),A.__webglDepthbuffer===void 0)A.__webglDepthbuffer=s.createRenderbuffer(),q(A.__webglDepthbuffer,P,!1);else{const ae=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,se=A.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,se),s.framebufferRenderbuffer(s.FRAMEBUFFER,ae,s.RENDERBUFFER,se)}t.bindFramebuffer(s.FRAMEBUFFER,null)}function Se(P,A,Z){const ae=i.get(P);A!==void 0&&K(ae.__webglFramebuffer,P,P.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),Z!==void 0&&be(P)}function Me(P){const A=P.texture,Z=i.get(P),ae=i.get(A);P.addEventListener("dispose",M);const se=P.textures,de=P.isWebGLCubeRenderTarget===!0,we=se.length>1;if(we||(ae.__webglTexture===void 0&&(ae.__webglTexture=s.createTexture()),ae.__version=A.version,o.memory.textures++),de){Z.__webglFramebuffer=[];for(let ve=0;ve<6;ve++)if(A.mipmaps&&A.mipmaps.length>0){Z.__webglFramebuffer[ve]=[];for(let Ae=0;Ae<A.mipmaps.length;Ae++)Z.__webglFramebuffer[ve][Ae]=s.createFramebuffer()}else Z.__webglFramebuffer[ve]=s.createFramebuffer()}else{if(A.mipmaps&&A.mipmaps.length>0){Z.__webglFramebuffer=[];for(let ve=0;ve<A.mipmaps.length;ve++)Z.__webglFramebuffer[ve]=s.createFramebuffer()}else Z.__webglFramebuffer=s.createFramebuffer();if(we)for(let ve=0,Ae=se.length;ve<Ae;ve++){const Xe=i.get(se[ve]);Xe.__webglTexture===void 0&&(Xe.__webglTexture=s.createTexture(),o.memory.textures++)}if(P.samples>0&&ue(P)===!1){Z.__webglMultisampledFramebuffer=s.createFramebuffer(),Z.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,Z.__webglMultisampledFramebuffer);for(let ve=0;ve<se.length;ve++){const Ae=se[ve];Z.__webglColorRenderbuffer[ve]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,Z.__webglColorRenderbuffer[ve]);const Xe=r.convert(Ae.format,Ae.colorSpace),Re=r.convert(Ae.type),Oe=x(Ae.internalFormat,Xe,Re,Ae.colorSpace,P.isXRRenderTarget===!0),ke=he(P);s.renderbufferStorageMultisample(s.RENDERBUFFER,ke,Oe,P.width,P.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+ve,s.RENDERBUFFER,Z.__webglColorRenderbuffer[ve])}s.bindRenderbuffer(s.RENDERBUFFER,null),P.depthBuffer&&(Z.__webglDepthRenderbuffer=s.createRenderbuffer(),q(Z.__webglDepthRenderbuffer,P,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(de){t.bindTexture(s.TEXTURE_CUBE_MAP,ae.__webglTexture),J(s.TEXTURE_CUBE_MAP,A);for(let ve=0;ve<6;ve++)if(A.mipmaps&&A.mipmaps.length>0)for(let Ae=0;Ae<A.mipmaps.length;Ae++)K(Z.__webglFramebuffer[ve][Ae],P,A,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+ve,Ae);else K(Z.__webglFramebuffer[ve],P,A,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+ve,0);m(A)&&g(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(we){for(let ve=0,Ae=se.length;ve<Ae;ve++){const Xe=se[ve],Re=i.get(Xe);t.bindTexture(s.TEXTURE_2D,Re.__webglTexture),J(s.TEXTURE_2D,Xe),K(Z.__webglFramebuffer,P,Xe,s.COLOR_ATTACHMENT0+ve,s.TEXTURE_2D,0),m(Xe)&&g(s.TEXTURE_2D)}t.unbindTexture()}else{let ve=s.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(ve=P.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(ve,ae.__webglTexture),J(ve,A),A.mipmaps&&A.mipmaps.length>0)for(let Ae=0;Ae<A.mipmaps.length;Ae++)K(Z.__webglFramebuffer[Ae],P,A,s.COLOR_ATTACHMENT0,ve,Ae);else K(Z.__webglFramebuffer,P,A,s.COLOR_ATTACHMENT0,ve,0);m(A)&&g(ve),t.unbindTexture()}P.depthBuffer&&be(P)}function ye(P){const A=P.textures;for(let Z=0,ae=A.length;Z<ae;Z++){const se=A[Z];if(m(se)){const de=y(P),we=i.get(se).__webglTexture;t.bindTexture(de,we),g(de),t.unbindTexture()}}}const We=[],X=[];function Fe(P){if(P.samples>0){if(ue(P)===!1){const A=P.textures,Z=P.width,ae=P.height;let se=s.COLOR_BUFFER_BIT;const de=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,we=i.get(P),ve=A.length>1;if(ve)for(let Ae=0;Ae<A.length;Ae++)t.bindFramebuffer(s.FRAMEBUFFER,we.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ae,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,we.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ae,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,we.__webglMultisampledFramebuffer),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,we.__webglFramebuffer);for(let Ae=0;Ae<A.length;Ae++){if(P.resolveDepthBuffer&&(P.depthBuffer&&(se|=s.DEPTH_BUFFER_BIT),P.stencilBuffer&&P.resolveStencilBuffer&&(se|=s.STENCIL_BUFFER_BIT)),ve){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,we.__webglColorRenderbuffer[Ae]);const Xe=i.get(A[Ae]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,Xe,0)}s.blitFramebuffer(0,0,Z,ae,0,0,Z,ae,se,s.NEAREST),l===!0&&(We.length=0,X.length=0,We.push(s.COLOR_ATTACHMENT0+Ae),P.depthBuffer&&P.resolveDepthBuffer===!1&&(We.push(de),X.push(de),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,X)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,We))}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),ve)for(let Ae=0;Ae<A.length;Ae++){t.bindFramebuffer(s.FRAMEBUFFER,we.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ae,s.RENDERBUFFER,we.__webglColorRenderbuffer[Ae]);const Xe=i.get(A[Ae]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,we.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ae,s.TEXTURE_2D,Xe,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,we.__webglMultisampledFramebuffer)}else if(P.depthBuffer&&P.resolveDepthBuffer===!1&&l){const A=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[A])}}}function he(P){return Math.min(n.maxSamples,P.samples)}function ue(P){const A=i.get(P);return P.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function ne(P){const A=o.render.frame;h.get(P)!==A&&(h.set(P,A),P.update())}function _e(P,A){const Z=P.colorSpace,ae=P.format,se=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||Z!==zs&&Z!==Sr&&(Dt.getTransfer(Z)===qt?(ae!==ci||se!==dr)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Z)),A}function le(P){return typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement?(c.width=P.naturalWidth||P.width,c.height=P.naturalHeight||P.height):typeof VideoFrame<"u"&&P instanceof VideoFrame?(c.width=P.displayWidth,c.height=P.displayHeight):(c.width=P.width,c.height=P.height),c}this.allocateTextureUnit=B,this.resetTextureUnits=I,this.setTexture2D=j,this.setTexture2DArray=N,this.setTexture3D=ee,this.setTextureCube=W,this.rebindTextures=Se,this.setupRenderTarget=Me,this.updateRenderTargetMipmap=ye,this.updateMultisampleRenderTarget=Fe,this.setupDepthRenderbuffer=be,this.setupFrameBufferTexture=K,this.useMultisampledRTT=ue}function Pv(s,e){function t(i,n=Sr){let r;const o=Dt.getTransfer(n);if(i===dr)return s.UNSIGNED_BYTE;if(i===_h)return s.UNSIGNED_SHORT_4_4_4_4;if(i===yh)return s.UNSIGNED_SHORT_5_5_5_1;if(i===jd)return s.UNSIGNED_INT_5_9_9_9_REV;if(i===Yd)return s.BYTE;if(i===qd)return s.SHORT;if(i===To)return s.UNSIGNED_SHORT;if(i===vh)return s.INT;if(i===Ur)return s.UNSIGNED_INT;if(i===xi)return s.FLOAT;if(i===Lo)return s.HALF_FLOAT;if(i===Zd)return s.ALPHA;if(i===Kd)return s.RGB;if(i===ci)return s.RGBA;if(i===Jd)return s.LUMINANCE;if(i===Qd)return s.LUMINANCE_ALPHA;if(i===Co)return s.DEPTH_COMPONENT;if(i===Ro)return s.DEPTH_STENCIL;if(i===xh)return s.RED;if(i===Za)return s.RED_INTEGER;if(i===$d)return s.RG;if(i===bh)return s.RG_INTEGER;if(i===Sh)return s.RGBA_INTEGER;if(i===ma||i===ga||i===va||i===_a)if(o===qt)if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(i===ma)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===ga)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===va)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===_a)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null){if(i===ma)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===ga)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===va)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===_a)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===Lc||i===Nc||i===Oc||i===Fc)if(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(i===Lc)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===Nc)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===Oc)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===Fc)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===kc||i===Bc||i===zc)if(r=e.get("WEBGL_compressed_texture_etc"),r!==null){if(i===kc||i===Bc)return o===qt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(i===zc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===Gc||i===Vc||i===Hc||i===Wc||i===Xc||i===Yc||i===qc||i===jc||i===Zc||i===Kc||i===Jc||i===Qc||i===$c||i===eh)if(r=e.get("WEBGL_compressed_texture_astc"),r!==null){if(i===Gc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===Vc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===Hc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===Wc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===Xc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===Yc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===qc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===jc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===Zc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Kc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===Jc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===Qc)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===$c)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===eh)return o===qt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===ya||i===th||i===nh)if(r=e.get("EXT_texture_compression_bptc"),r!==null){if(i===ya)return o===qt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===th)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===nh)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===ef||i===ih||i===rh||i===sh)if(r=e.get("EXT_texture_compression_rgtc"),r!==null){if(i===ya)return r.COMPRESSED_RED_RGTC1_EXT;if(i===ih)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===rh)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===sh)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===Ao?s.UNSIGNED_INT_24_8:s[i]!==void 0?s[i]:null}return{convert:t}}const FE=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,kE=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class BE{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,i){if(this.texture===null){const n=new fn,r=e.properties.get(n);r.__webglTexture=t.texture,(t.depthNear!==i.depthNear||t.depthFar!==i.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,i=new Si({vertexShader:FE,fragmentShader:kE,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new Ne(new er(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class zE extends mr{constructor(e,t){super();const i=this;let n=null,r=1,o=null,a="local-floor",l=1,c=null,h=null,u=null,d=null,f=null,p=null;const v=new BE,m=t.getContextAttributes();let g=null,y=null;const x=[],_=[],E=new ge;let w=null;const M=new xn;M.viewport=new Rt;const T=new xn;T.viewport=new Rt;const S=[M,T],b=new yv;let U=null,I=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(V){let H=x[V];return H===void 0&&(H=new vc,x[V]=H),H.getTargetRaySpace()},this.getControllerGrip=function(V){let H=x[V];return H===void 0&&(H=new vc,x[V]=H),H.getGripSpace()},this.getHand=function(V){let H=x[V];return H===void 0&&(H=new vc,x[V]=H),H.getHandSpace()};function B(V){const H=_.indexOf(V.inputSource);if(H===-1)return;const K=x[H];K!==void 0&&(K.update(V.inputSource,V.frame,c||o),K.dispatchEvent({type:V.type,data:V.inputSource}))}function G(){n.removeEventListener("select",B),n.removeEventListener("selectstart",B),n.removeEventListener("selectend",B),n.removeEventListener("squeeze",B),n.removeEventListener("squeezestart",B),n.removeEventListener("squeezeend",B),n.removeEventListener("end",G),n.removeEventListener("inputsourceschange",j);for(let V=0;V<x.length;V++){const H=_[V];H!==null&&(_[V]=null,x[V].disconnect(H))}U=null,I=null,v.reset(),e.setRenderTarget(g),f=null,d=null,u=null,n=null,y=null,$.stop(),i.isPresenting=!1,e.setPixelRatio(w),e.setSize(E.width,E.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(V){r=V,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(V){a=V,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(V){c=V},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return n},this.setSession=async function(V){if(n=V,n!==null){if(g=e.getRenderTarget(),n.addEventListener("select",B),n.addEventListener("selectstart",B),n.addEventListener("selectend",B),n.addEventListener("squeeze",B),n.addEventListener("squeezestart",B),n.addEventListener("squeezeend",B),n.addEventListener("end",G),n.addEventListener("inputsourceschange",j),m.xrCompatible!==!0&&await t.makeXRCompatible(),w=e.getPixelRatio(),e.getSize(E),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let K=null,q=null,re=null;m.depth&&(re=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,K=m.stencil?Ro:Co,q=m.stencil?Ao:Ur);const be={colorFormat:t.RGBA8,depthFormat:re,scaleFactor:r};u=new XRWebGLBinding(n,t),d=u.createProjectionLayer(be),n.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),y=new zi(d.textureWidth,d.textureHeight,{format:ci,type:dr,depthTexture:new hf(d.textureWidth,d.textureHeight,q,void 0,void 0,void 0,void 0,void 0,void 0,K),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:m.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}else{const K={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(n,t,K),n.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),y=new zi(f.framebufferWidth,f.framebufferHeight,{format:ci,type:dr,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}y.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await n.requestReferenceSpace(a),$.setContext(n),$.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(n!==null)return n.environmentBlendMode},this.getDepthTexture=function(){return v.getDepthTexture()};function j(V){for(let H=0;H<V.removed.length;H++){const K=V.removed[H],q=_.indexOf(K);q>=0&&(_[q]=null,x[q].disconnect(K))}for(let H=0;H<V.added.length;H++){const K=V.added[H];let q=_.indexOf(K);if(q===-1){for(let be=0;be<x.length;be++)if(be>=_.length){_.push(K),q=be;break}else if(_[be]===null){_[be]=K,q=be;break}if(q===-1)break}const re=x[q];re&&re.connect(K)}}const N=new D,ee=new D;function W(V,H,K){N.setFromMatrixPosition(H.matrixWorld),ee.setFromMatrixPosition(K.matrixWorld);const q=N.distanceTo(ee),re=H.projectionMatrix.elements,be=K.projectionMatrix.elements,Se=re[14]/(re[10]-1),Me=re[14]/(re[10]+1),ye=(re[9]+1)/re[5],We=(re[9]-1)/re[5],X=(re[8]-1)/re[0],Fe=(be[8]+1)/be[0],he=Se*X,ue=Se*Fe,ne=q/(-X+Fe),_e=ne*-X;if(H.matrixWorld.decompose(V.position,V.quaternion,V.scale),V.translateX(_e),V.translateZ(ne),V.matrixWorld.compose(V.position,V.quaternion,V.scale),V.matrixWorldInverse.copy(V.matrixWorld).invert(),re[10]===-1)V.projectionMatrix.copy(H.projectionMatrix),V.projectionMatrixInverse.copy(H.projectionMatrixInverse);else{const le=Se+ne,P=Me+ne,A=he-_e,Z=ue+(q-_e),ae=ye*Me/P*le,se=We*Me/P*le;V.projectionMatrix.makePerspective(A,Z,ae,se,le,P),V.projectionMatrixInverse.copy(V.projectionMatrix).invert()}}function Y(V,H){H===null?V.matrixWorld.copy(V.matrix):V.matrixWorld.multiplyMatrices(H.matrixWorld,V.matrix),V.matrixWorldInverse.copy(V.matrixWorld).invert()}this.updateCamera=function(V){if(n===null)return;let H=V.near,K=V.far;v.texture!==null&&(v.depthNear>0&&(H=v.depthNear),v.depthFar>0&&(K=v.depthFar)),b.near=T.near=M.near=H,b.far=T.far=M.far=K,(U!==b.near||I!==b.far)&&(n.updateRenderState({depthNear:b.near,depthFar:b.far}),U=b.near,I=b.far),M.layers.mask=V.layers.mask|2,T.layers.mask=V.layers.mask|4,b.layers.mask=M.layers.mask|T.layers.mask;const q=V.parent,re=b.cameras;Y(b,q);for(let be=0;be<re.length;be++)Y(re[be],q);re.length===2?W(b,M,T):b.projectionMatrix.copy(M.projectionMatrix),Q(V,b,q)};function Q(V,H,K){K===null?V.matrix.copy(H.matrixWorld):(V.matrix.copy(K.matrixWorld),V.matrix.invert(),V.matrix.multiply(H.matrixWorld)),V.matrix.decompose(V.position,V.quaternion,V.scale),V.updateMatrixWorld(!0),V.projectionMatrix.copy(H.projectionMatrix),V.projectionMatrixInverse.copy(H.projectionMatrixInverse),V.isPerspectiveCamera&&(V.fov=Po*2*Math.atan(1/V.projectionMatrix.elements[5]),V.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(d===null&&f===null))return l},this.setFoveation=function(V){l=V,d!==null&&(d.fixedFoveation=V),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=V)},this.hasDepthSensing=function(){return v.texture!==null},this.getDepthSensingMesh=function(){return v.getMesh(b)};let z=null;function J(V,H){if(h=H.getViewerPose(c||o),p=H,h!==null){const K=h.views;f!==null&&(e.setRenderTargetFramebuffer(y,f.framebuffer),e.setRenderTarget(y));let q=!1;K.length!==b.cameras.length&&(b.cameras.length=0,q=!0);for(let Se=0;Se<K.length;Se++){const Me=K[Se];let ye=null;if(f!==null)ye=f.getViewport(Me);else{const X=u.getViewSubImage(d,Me);ye=X.viewport,Se===0&&(e.setRenderTargetTextures(y,X.colorTexture,X.depthStencilTexture),e.setRenderTarget(y))}let We=S[Se];We===void 0&&(We=new xn,We.layers.enable(Se),We.viewport=new Rt,S[Se]=We),We.matrix.fromArray(Me.transform.matrix),We.matrix.decompose(We.position,We.quaternion,We.scale),We.projectionMatrix.fromArray(Me.projectionMatrix),We.projectionMatrixInverse.copy(We.projectionMatrix).invert(),We.viewport.set(ye.x,ye.y,ye.width,ye.height),Se===0&&(b.matrix.copy(We.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),q===!0&&b.cameras.push(We)}const re=n.enabledFeatures;if(re&&re.includes("depth-sensing")&&n.depthUsage=="gpu-optimized"&&u){const Se=u.getDepthInformation(K[0]);Se&&Se.isValid&&Se.texture&&v.init(e,Se,n.renderState)}}for(let K=0;K<x.length;K++){const q=_[K],re=x[K];q!==null&&re!==void 0&&re.update(q,H,c||o)}z&&z(V,H),H.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:H}),p=null}const $=new Ev;$.setAnimationLoop(J),this.setAnimationLoop=function(V){z=V},this.dispose=function(){}}}const _s=new bi,GE=new rt;function VE(s,e){function t(m,g){m.matrixAutoUpdate===!0&&m.updateMatrix(),g.value.copy(m.matrix)}function i(m,g){g.color.getRGB(m.fogColor.value,U0(s)),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function n(m,g,y,x,_){g.isMeshBasicMaterial||g.isMeshLambertMaterial?r(m,g):g.isMeshToonMaterial?(r(m,g),u(m,g)):g.isMeshPhongMaterial?(r(m,g),h(m,g)):g.isMeshStandardMaterial?(r(m,g),d(m,g),g.isMeshPhysicalMaterial&&f(m,g,_)):g.isMeshMatcapMaterial?(r(m,g),p(m,g)):g.isMeshDepthMaterial?r(m,g):g.isMeshDistanceMaterial?(r(m,g),v(m,g)):g.isMeshNormalMaterial?r(m,g):g.isLineBasicMaterial?(o(m,g),g.isLineDashedMaterial&&a(m,g)):g.isPointsMaterial?l(m,g,y,x):g.isSpriteMaterial?c(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function r(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.bumpMap&&(m.bumpMap.value=g.bumpMap,t(g.bumpMap,m.bumpMapTransform),m.bumpScale.value=g.bumpScale,g.side===ti&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,t(g.normalMap,m.normalMapTransform),m.normalScale.value.copy(g.normalScale),g.side===ti&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,t(g.displacementMap,m.displacementMapTransform),m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,m.emissiveMapTransform)),g.specularMap&&(m.specularMap.value=g.specularMap,t(g.specularMap,m.specularMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const y=e.get(g),x=y.envMap,_=y.envMapRotation;x&&(m.envMap.value=x,_s.copy(_),_s.x*=-1,_s.y*=-1,_s.z*=-1,x.isCubeTexture&&x.isRenderTargetTexture===!1&&(_s.y*=-1,_s.z*=-1),m.envMapRotation.value.setFromMatrix4(GE.makeRotationFromEuler(_s)),m.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap&&(m.lightMap.value=g.lightMap,m.lightMapIntensity.value=g.lightMapIntensity,t(g.lightMap,m.lightMapTransform)),g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,m.aoMapTransform))}function o(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform))}function a(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function l(m,g,y,x){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*y,m.scale.value=x*.5,g.map&&(m.map.value=g.map,t(g.map,m.uvTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function c(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function h(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}function u(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}function d(m,g){m.metalness.value=g.metalness,g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,m.metalnessMapTransform)),m.roughness.value=g.roughness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,m.roughnessMapTransform)),g.envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function f(m,g,y){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,m.sheenColorMapTransform)),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,m.sheenRoughnessMapTransform))),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,m.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(m.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===ti&&m.clearcoatNormalScale.value.negate())),g.dispersion>0&&(m.dispersion.value=g.dispersion),g.iridescence>0&&(m.iridescence.value=g.iridescence,m.iridescenceIOR.value=g.iridescenceIOR,m.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(m.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,m.iridescenceMapTransform)),g.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=y.texture,m.transmissionSamplerSize.value.set(y.width,y.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,m.transmissionMapTransform)),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(m.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(m.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,m.specularColorMapTransform)),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,m.specularIntensityMapTransform))}function p(m,g){g.matcap&&(m.matcap.value=g.matcap)}function v(m,g){const y=e.get(g).light;m.referencePosition.value.setFromMatrixPosition(y.matrixWorld),m.nearDistance.value=y.shadow.camera.near,m.farDistance.value=y.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:n}}function HE(s,e,t,i){let n={},r={},o=[];const a=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function l(y,x){const _=x.program;i.uniformBlockBinding(y,_)}function c(y,x){let _=n[y.id];_===void 0&&(p(y),_=h(y),n[y.id]=_,y.addEventListener("dispose",m));const E=x.program;i.updateUBOMapping(y,E);const w=e.render.frame;r[y.id]!==w&&(d(y),r[y.id]=w)}function h(y){const x=u();y.__bindingPointIndex=x;const _=s.createBuffer(),E=y.__size,w=y.usage;return s.bindBuffer(s.UNIFORM_BUFFER,_),s.bufferData(s.UNIFORM_BUFFER,E,w),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,x,_),_}function u(){for(let y=0;y<a;y++)if(o.indexOf(y)===-1)return o.push(y),y;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(y){const x=n[y.id],_=y.uniforms,E=y.__cache;s.bindBuffer(s.UNIFORM_BUFFER,x);for(let w=0,M=_.length;w<M;w++){const T=Array.isArray(_[w])?_[w]:[_[w]];for(let S=0,b=T.length;S<b;S++){const U=T[S];if(f(U,w,S,E)===!0){const I=U.__offset,B=Array.isArray(U.value)?U.value:[U.value];let G=0;for(let j=0;j<B.length;j++){const N=B[j],ee=v(N);typeof N=="number"||typeof N=="boolean"?(U.__data[0]=N,s.bufferSubData(s.UNIFORM_BUFFER,I+G,U.__data)):N.isMatrix3?(U.__data[0]=N.elements[0],U.__data[1]=N.elements[1],U.__data[2]=N.elements[2],U.__data[3]=0,U.__data[4]=N.elements[3],U.__data[5]=N.elements[4],U.__data[6]=N.elements[5],U.__data[7]=0,U.__data[8]=N.elements[6],U.__data[9]=N.elements[7],U.__data[10]=N.elements[8],U.__data[11]=0):(N.toArray(U.__data,G),G+=ee.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,I,U.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function f(y,x,_,E){const w=y.value,M=x+"_"+_;if(E[M]===void 0)return typeof w=="number"||typeof w=="boolean"?E[M]=w:E[M]=w.clone(),!0;{const T=E[M];if(typeof w=="number"||typeof w=="boolean"){if(T!==w)return E[M]=w,!0}else if(T.equals(w)===!1)return T.copy(w),!0}return!1}function p(y){const x=y.uniforms;let _=0;const E=16;for(let M=0,T=x.length;M<T;M++){const S=Array.isArray(x[M])?x[M]:[x[M]];for(let b=0,U=S.length;b<U;b++){const I=S[b],B=Array.isArray(I.value)?I.value:[I.value];for(let G=0,j=B.length;G<j;G++){const N=B[G],ee=v(N),W=_%E,Y=W%ee.boundary,Q=W+Y;_+=Y,Q!==0&&E-Q<ee.storage&&(_+=E-Q),I.__data=new Float32Array(ee.storage/Float32Array.BYTES_PER_ELEMENT),I.__offset=_,_+=ee.storage}}}const w=_%E;return w>0&&(_+=E-w),y.__size=_,y.__cache={},this}function v(y){const x={boundary:0,storage:0};return typeof y=="number"||typeof y=="boolean"?(x.boundary=4,x.storage=4):y.isVector2?(x.boundary=8,x.storage=8):y.isVector3||y.isColor?(x.boundary=16,x.storage=12):y.isVector4?(x.boundary=16,x.storage=16):y.isMatrix3?(x.boundary=48,x.storage=48):y.isMatrix4?(x.boundary=64,x.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),x}function m(y){const x=y.target;x.removeEventListener("dispose",m);const _=o.indexOf(x.__bindingPointIndex);o.splice(_,1),s.deleteBuffer(n[x.id]),delete n[x.id],delete r[x.id]}function g(){for(const y in n)s.deleteBuffer(n[y]);o=[],n={},r={}}return{bind:l,update:c,dispose:g}}class Iv{constructor(e={}){const{canvas:t=P0(),context:i=null,depth:n=!0,stencil:r=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1,reverseDepthBuffer:d=!1}=e;this.isWebGLRenderer=!0;let f;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=i.getContextAttributes().alpha}else f=o;const p=new Uint32Array(4),v=new Int32Array(4);let m=null,g=null;const y=[],x=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=lr,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const _=this;let E=!1;this._outputColorSpace=on;let w=0,M=0,T=null,S=-1,b=null;const U=new Rt,I=new Rt;let B=null;const G=new Be(0);let j=0,N=t.width,ee=t.height,W=1,Y=null,Q=null;const z=new Rt(0,0,N,ee),J=new Rt(0,0,N,ee);let $=!1;const V=new nl;let H=!1,K=!1;const q=new rt,re=new rt,be=new D,Se=new Rt,Me={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ye=!1;function We(){return T===null?W:1}let X=i;function Fe(O,oe){return t.getContext(O,oe)}try{const O={alpha:!0,depth:n,stencil:r,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${qa}`),t.addEventListener("webglcontextlost",Pe,!1),t.addEventListener("webglcontextrestored",Ue,!1),t.addEventListener("webglcontextcreationerror",Ie,!1),X===null){const oe="webgl2";if(X=Fe(oe,O),X===null)throw Fe(oe)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(O){throw console.error("THREE.WebGLRenderer: "+O.message),O}let he,ue,ne,_e,le,P,A,Z,ae,se,de,we,ve,Ae,Xe,Re,Oe,ke,ze,Te,ht,Qe,St,te;function Ce(){he=new tw(X),he.init(),Qe=new Pv(X,he),ue=new jM(X,he,e,Qe),ne=new NE(X,he),ue.reverseDepthBuffer&&d&&ne.buffers.depth.setReversed(!0),_e=new rw(X),le=new SE,P=new OE(X,he,ne,le,ue,Qe,_e),A=new KM(_),Z=new ew(_),ae=new h1(X),St=new YM(X,ae),se=new nw(X,ae,_e,St),de=new ow(X,se,ae,_e),ze=new sw(X,ue,P),Re=new ZM(le),we=new bE(_,A,Z,he,ue,St,Re),ve=new VE(_,le),Ae=new wE,Xe=new PE(he),ke=new XM(_,A,Z,ne,de,f,l),Oe=new UE(_,de,ue),te=new HE(X,_e,ue,ne),Te=new qM(X,he,_e),ht=new iw(X,he,_e),_e.programs=we.programs,_.capabilities=ue,_.extensions=he,_.properties=le,_.renderLists=Ae,_.shadowMap=Oe,_.state=ne,_.info=_e}Ce();const fe=new zE(_,X);this.xr=fe,this.getContext=function(){return X},this.getContextAttributes=function(){return X.getContextAttributes()},this.forceContextLoss=function(){const O=he.get("WEBGL_lose_context");O&&O.loseContext()},this.forceContextRestore=function(){const O=he.get("WEBGL_lose_context");O&&O.restoreContext()},this.getPixelRatio=function(){return W},this.setPixelRatio=function(O){O!==void 0&&(W=O,this.setSize(N,ee,!1))},this.getSize=function(O){return O.set(N,ee)},this.setSize=function(O,oe,pe=!0){if(fe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}N=O,ee=oe,t.width=Math.floor(O*W),t.height=Math.floor(oe*W),pe===!0&&(t.style.width=O+"px",t.style.height=oe+"px"),this.setViewport(0,0,O,oe)},this.getDrawingBufferSize=function(O){return O.set(N*W,ee*W).floor()},this.setDrawingBufferSize=function(O,oe,pe){N=O,ee=oe,W=pe,t.width=Math.floor(O*pe),t.height=Math.floor(oe*pe),this.setViewport(0,0,O,oe)},this.getCurrentViewport=function(O){return O.copy(U)},this.getViewport=function(O){return O.copy(z)},this.setViewport=function(O,oe,pe,ie){O.isVector4?z.set(O.x,O.y,O.z,O.w):z.set(O,oe,pe,ie),ne.viewport(U.copy(z).multiplyScalar(W).round())},this.getScissor=function(O){return O.copy(J)},this.setScissor=function(O,oe,pe,ie){O.isVector4?J.set(O.x,O.y,O.z,O.w):J.set(O,oe,pe,ie),ne.scissor(I.copy(J).multiplyScalar(W).round())},this.getScissorTest=function(){return $},this.setScissorTest=function(O){ne.setScissorTest($=O)},this.setOpaqueSort=function(O){Y=O},this.setTransparentSort=function(O){Q=O},this.getClearColor=function(O){return O.copy(ke.getClearColor())},this.setClearColor=function(){ke.setClearColor(...arguments)},this.getClearAlpha=function(){return ke.getClearAlpha()},this.setClearAlpha=function(){ke.setClearAlpha(...arguments)},this.clear=function(O=!0,oe=!0,pe=!0){let ie=0;if(O){let ce=!1;if(T!==null){const Le=T.texture.format;ce=Le===Sh||Le===bh||Le===Za}if(ce){const Le=T.texture.type,Ve=Le===dr||Le===Ur||Le===To||Le===Ao||Le===_h||Le===yh,Ze=ke.getClearColor(),Je=ke.getClearAlpha(),gt=Ze.r,ft=Ze.g,ct=Ze.b;Ve?(p[0]=gt,p[1]=ft,p[2]=ct,p[3]=Je,X.clearBufferuiv(X.COLOR,0,p)):(v[0]=gt,v[1]=ft,v[2]=ct,v[3]=Je,X.clearBufferiv(X.COLOR,0,v))}else ie|=X.COLOR_BUFFER_BIT}oe&&(ie|=X.DEPTH_BUFFER_BIT),pe&&(ie|=X.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),X.clear(ie)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Pe,!1),t.removeEventListener("webglcontextrestored",Ue,!1),t.removeEventListener("webglcontextcreationerror",Ie,!1),ke.dispose(),Ae.dispose(),Xe.dispose(),le.dispose(),A.dispose(),Z.dispose(),de.dispose(),St.dispose(),te.dispose(),we.dispose(),fe.dispose(),fe.removeEventListener("sessionstart",nn),fe.removeEventListener("sessionend",qn),Pn.stop()};function Pe(O){O.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),E=!0}function Ue(){console.log("THREE.WebGLRenderer: Context Restored."),E=!1;const O=_e.autoReset,oe=Oe.enabled,pe=Oe.autoUpdate,ie=Oe.needsUpdate,ce=Oe.type;Ce(),_e.autoReset=O,Oe.enabled=oe,Oe.autoUpdate=pe,Oe.needsUpdate=ie,Oe.type=ce}function Ie(O){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",O.statusMessage)}function st(O){const oe=O.target;oe.removeEventListener("dispose",st),vt(oe)}function vt(O){lt(O),le.remove(O)}function lt(O){const oe=le.get(O).programs;oe!==void 0&&(oe.forEach(function(pe){we.releaseProgram(pe)}),O.isShaderMaterial&&we.releaseShaderCache(O))}this.renderBufferDirect=function(O,oe,pe,ie,ce,Le){oe===null&&(oe=Me);const Ve=ce.isMesh&&ce.matrixWorld.determinant()<0,Ze=Bo(O,oe,pe,ie,ce);ne.setMaterial(ie,Ve);let Je=pe.index,gt=1;if(ie.wireframe===!0){if(Je=se.getWireframeAttribute(pe),Je===void 0)return;gt=2}const ft=pe.drawRange,ct=pe.attributes.position;let Et=ft.start*gt,Nt=(ft.start+ft.count)*gt;Le!==null&&(Et=Math.max(Et,Le.start*gt),Nt=Math.min(Nt,(Le.start+Le.count)*gt)),Je!==null?(Et=Math.max(Et,0),Nt=Math.min(Nt,Je.count)):ct!=null&&(Et=Math.max(Et,0),Nt=Math.min(Nt,ct.count));const tn=Nt-Et;if(tn<0||tn===1/0)return;St.setup(ce,ie,Ze,pe,Je);let Kt,Lt=Te;if(Je!==null&&(Kt=ae.get(Je),Lt=ht,Lt.setIndex(Kt)),ce.isMesh)ie.wireframe===!0?(ne.setLineWidth(ie.wireframeLinewidth*We()),Lt.setMode(X.LINES)):Lt.setMode(X.TRIANGLES);else if(ce.isLine){let ut=ie.linewidth;ut===void 0&&(ut=1),ne.setLineWidth(ut*We()),ce.isLineSegments?Lt.setMode(X.LINES):ce.isLineLoop?Lt.setMode(X.LINE_LOOP):Lt.setMode(X.LINE_STRIP)}else ce.isPoints?Lt.setMode(X.POINTS):ce.isSprite&&Lt.setMode(X.TRIANGLES);if(ce.isBatchedMesh)if(ce._multiDrawInstances!==null)gc("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Lt.renderMultiDrawInstances(ce._multiDrawStarts,ce._multiDrawCounts,ce._multiDrawCount,ce._multiDrawInstances);else if(he.get("WEBGL_multi_draw"))Lt.renderMultiDraw(ce._multiDrawStarts,ce._multiDrawCounts,ce._multiDrawCount);else{const ut=ce._multiDrawStarts,an=ce._multiDrawCounts,It=ce._multiDrawCount,In=Je?ae.get(Je).bytesPerElement:1,Wt=le.get(ie).currentProgram.getUniforms();for(let _n=0;_n<It;_n++)Wt.setValue(X,"_gl_DrawID",_n),Lt.render(ut[_n]/In,an[_n])}else if(ce.isInstancedMesh)Lt.renderInstances(Et,tn,ce.count);else if(pe.isInstancedBufferGeometry){const ut=pe._maxInstanceCount!==void 0?pe._maxInstanceCount:1/0,an=Math.min(pe.instanceCount,ut);Lt.renderInstances(Et,tn,an)}else Lt.render(Et,tn)};function tt(O,oe,pe){O.transparent===!0&&O.side===vi&&O.forceSinglePass===!1?(O.side=ti,O.needsUpdate=!0,hi(O,oe,pe),O.side=ur,O.needsUpdate=!0,hi(O,oe,pe),O.side=vi):hi(O,oe,pe)}this.compile=function(O,oe,pe=null){pe===null&&(pe=O),g=Xe.get(pe),g.init(oe),x.push(g),pe.traverseVisible(function(ce){ce.isLight&&ce.layers.test(oe.layers)&&(g.pushLight(ce),ce.castShadow&&g.pushShadow(ce))}),O!==pe&&O.traverseVisible(function(ce){ce.isLight&&ce.layers.test(oe.layers)&&(g.pushLight(ce),ce.castShadow&&g.pushShadow(ce))}),g.setupLights();const ie=new Set;return O.traverse(function(ce){if(!(ce.isMesh||ce.isPoints||ce.isLine||ce.isSprite))return;const Le=ce.material;if(Le)if(Array.isArray(Le))for(let Ve=0;Ve<Le.length;Ve++){const Ze=Le[Ve];tt(Ze,pe,ce),ie.add(Ze)}else tt(Le,pe,ce),ie.add(Le)}),g=x.pop(),ie},this.compileAsync=function(O,oe,pe=null){const ie=this.compile(O,oe,pe);return new Promise(ce=>{function Le(){if(ie.forEach(function(Ve){le.get(Ve).currentProgram.isReady()&&ie.delete(Ve)}),ie.size===0){ce(O);return}setTimeout(Le,10)}he.get("KHR_parallel_shader_compile")!==null?Le():setTimeout(Le,10)})};let Ht=null;function Zt(O){Ht&&Ht(O)}function nn(){Pn.stop()}function qn(){Pn.start()}const Pn=new Ev;Pn.setAnimationLoop(Zt),typeof self<"u"&&Pn.setContext(self),this.setAnimationLoop=function(O){Ht=O,fe.setAnimationLoop(O),O===null?Pn.stop():Pn.start()},fe.addEventListener("sessionstart",nn),fe.addEventListener("sessionend",qn),this.render=function(O,oe){if(oe!==void 0&&oe.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(E===!0)return;if(O.matrixWorldAutoUpdate===!0&&O.updateMatrixWorld(),oe.parent===null&&oe.matrixWorldAutoUpdate===!0&&oe.updateMatrixWorld(),fe.enabled===!0&&fe.isPresenting===!0&&(fe.cameraAutoUpdate===!0&&fe.updateCamera(oe),oe=fe.getCamera()),O.isScene===!0&&O.onBeforeRender(_,O,oe,T),g=Xe.get(O,x.length),g.init(oe),x.push(g),re.multiplyMatrices(oe.projectionMatrix,oe.matrixWorldInverse),V.setFromProjectionMatrix(re),K=this.localClippingEnabled,H=Re.init(this.clippingPlanes,K),m=Ae.get(O,y.length),m.init(),y.push(m),fe.enabled===!0&&fe.isPresenting===!0){const Le=_.xr.getDepthSensingMesh();Le!==null&&ri(Le,oe,-1/0,_.sortObjects)}ri(O,oe,0,_.sortObjects),m.finish(),_.sortObjects===!0&&m.sort(Y,Q),ye=fe.enabled===!1||fe.isPresenting===!1||fe.hasDepthSensing()===!1,ye&&ke.addToRenderList(m,O),this.info.render.frame++,H===!0&&Re.beginShadows();const pe=g.state.shadowsArray;Oe.render(pe,O,oe),H===!0&&Re.endShadows(),this.info.autoReset===!0&&this.info.reset();const ie=m.opaque,ce=m.transmissive;if(g.setupLights(),oe.isArrayCamera){const Le=oe.cameras;if(ce.length>0)for(let Ve=0,Ze=Le.length;Ve<Ze;Ve++){const Je=Le[Ve];Ei(ie,ce,O,Je)}ye&&ke.render(O);for(let Ve=0,Ze=Le.length;Ve<Ze;Ve++){const Je=Le[Ve];wi(m,O,Je,Je.viewport)}}else ce.length>0&&Ei(ie,ce,O,oe),ye&&ke.render(O),wi(m,O,oe);T!==null&&M===0&&(P.updateMultisampleRenderTarget(T),P.updateRenderTargetMipmap(T)),O.isScene===!0&&O.onAfterRender(_,O,oe),St.resetDefaultState(),S=-1,b=null,x.pop(),x.length>0?(g=x[x.length-1],H===!0&&Re.setGlobalState(_.clippingPlanes,g.state.camera)):g=null,y.pop(),y.length>0?m=y[y.length-1]:m=null};function ri(O,oe,pe,ie){if(O.visible===!1)return;if(O.layers.test(oe.layers)){if(O.isGroup)pe=O.renderOrder;else if(O.isLOD)O.autoUpdate===!0&&O.update(oe);else if(O.isLight)g.pushLight(O),O.castShadow&&g.pushShadow(O);else if(O.isSprite){if(!O.frustumCulled||V.intersectsSprite(O)){ie&&Se.setFromMatrixPosition(O.matrixWorld).applyMatrix4(re);const Ve=de.update(O),Ze=O.material;Ze.visible&&m.push(O,Ve,Ze,pe,Se.z,null)}}else if((O.isMesh||O.isLine||O.isPoints)&&(!O.frustumCulled||V.intersectsObject(O))){const Ve=de.update(O),Ze=O.material;if(ie&&(O.boundingSphere!==void 0?(O.boundingSphere===null&&O.computeBoundingSphere(),Se.copy(O.boundingSphere.center)):(Ve.boundingSphere===null&&Ve.computeBoundingSphere(),Se.copy(Ve.boundingSphere.center)),Se.applyMatrix4(O.matrixWorld).applyMatrix4(re)),Array.isArray(Ze)){const Je=Ve.groups;for(let gt=0,ft=Je.length;gt<ft;gt++){const ct=Je[gt],Et=Ze[ct.materialIndex];Et&&Et.visible&&m.push(O,Ve,Et,pe,Se.z,ct)}}else Ze.visible&&m.push(O,Ve,Ze,pe,Se.z,null)}}const Le=O.children;for(let Ve=0,Ze=Le.length;Ve<Ze;Ve++)ri(Le[Ve],oe,pe,ie)}function wi(O,oe,pe,ie){const ce=O.opaque,Le=O.transmissive,Ve=O.transparent;g.setupLightsView(pe),H===!0&&Re.setGlobalState(_.clippingPlanes,pe),ie&&ne.viewport(U.copy(ie)),ce.length>0&&jn(ce,oe,pe),Le.length>0&&jn(Le,oe,pe),Ve.length>0&&jn(Ve,oe,pe),ne.buffers.depth.setTest(!0),ne.buffers.depth.setMask(!0),ne.buffers.color.setMask(!0),ne.setPolygonOffset(!1)}function Ei(O,oe,pe,ie){if((pe.isScene===!0?pe.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[ie.id]===void 0&&(g.state.transmissionRenderTarget[ie.id]=new zi(1,1,{generateMipmaps:!0,type:he.has("EXT_color_buffer_half_float")||he.has("EXT_color_buffer_float")?Lo:dr,minFilter:Zi,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Dt.workingColorSpace}));const Le=g.state.transmissionRenderTarget[ie.id],Ve=ie.viewport||U;Le.setSize(Ve.z*_.transmissionResolutionScale,Ve.w*_.transmissionResolutionScale);const Ze=_.getRenderTarget();_.setRenderTarget(Le),_.getClearColor(G),j=_.getClearAlpha(),j<1&&_.setClearColor(16777215,.5),_.clear(),ye&&ke.render(pe);const Je=_.toneMapping;_.toneMapping=lr;const gt=ie.viewport;if(ie.viewport!==void 0&&(ie.viewport=void 0),g.setupLightsView(ie),H===!0&&Re.setGlobalState(_.clippingPlanes,ie),jn(O,pe,ie),P.updateMultisampleRenderTarget(Le),P.updateRenderTargetMipmap(Le),he.has("WEBGL_multisampled_render_to_texture")===!1){let ft=!1;for(let ct=0,Et=oe.length;ct<Et;ct++){const Nt=oe[ct],tn=Nt.object,Kt=Nt.geometry,Lt=Nt.material,ut=Nt.group;if(Lt.side===vi&&tn.layers.test(ie.layers)){const an=Lt.side;Lt.side=ti,Lt.needsUpdate=!0,vn(tn,pe,ie,Kt,Lt,ut),Lt.side=an,Lt.needsUpdate=!0,ft=!0}}ft===!0&&(P.updateMultisampleRenderTarget(Le),P.updateRenderTargetMipmap(Le))}_.setRenderTarget(Ze),_.setClearColor(G,j),gt!==void 0&&(ie.viewport=gt),_.toneMapping=Je}function jn(O,oe,pe){const ie=oe.isScene===!0?oe.overrideMaterial:null;for(let ce=0,Le=O.length;ce<Le;ce++){const Ve=O[ce],Ze=Ve.object,Je=Ve.geometry,gt=Ve.group;let ft=Ve.material;ft.allowOverride===!0&&ie!==null&&(ft=ie),Ze.layers.test(pe.layers)&&vn(Ze,oe,pe,Je,ft,gt)}}function vn(O,oe,pe,ie,ce,Le){O.onBeforeRender(_,oe,pe,ie,ce,Le),O.modelViewMatrix.multiplyMatrices(pe.matrixWorldInverse,O.matrixWorld),O.normalMatrix.getNormalMatrix(O.modelViewMatrix),ce.onBeforeRender(_,oe,pe,ie,O,Le),ce.transparent===!0&&ce.side===vi&&ce.forceSinglePass===!1?(ce.side=ti,ce.needsUpdate=!0,_.renderBufferDirect(pe,oe,ie,ce,O,Le),ce.side=ur,ce.needsUpdate=!0,_.renderBufferDirect(pe,oe,ie,ce,O,Le),ce.side=vi):_.renderBufferDirect(pe,oe,ie,ce,O,Le),O.onAfterRender(_,oe,pe,ie,ce,Le)}function hi(O,oe,pe){oe.isScene!==!0&&(oe=Me);const ie=le.get(O),ce=g.state.lights,Le=g.state.shadowsArray,Ve=ce.state.version,Ze=we.getParameters(O,ce.state,Le,oe,pe),Je=we.getProgramCacheKey(Ze);let gt=ie.programs;ie.environment=O.isMeshStandardMaterial?oe.environment:null,ie.fog=oe.fog,ie.envMap=(O.isMeshStandardMaterial?Z:A).get(O.envMap||ie.environment),ie.envMapRotation=ie.environment!==null&&O.envMap===null?oe.environmentRotation:O.envMapRotation,gt===void 0&&(O.addEventListener("dispose",st),gt=new Map,ie.programs=gt);let ft=gt.get(Je);if(ft!==void 0){if(ie.currentProgram===ft&&ie.lightsStateVersion===Ve)return Lr(O,Ze),ft}else Ze.uniforms=we.getUniforms(O),O.onBeforeCompile(Ze,_),ft=we.acquireProgram(Ze,Je),gt.set(Je,ft),ie.uniforms=Ze.uniforms;const ct=ie.uniforms;return(!O.isShaderMaterial&&!O.isRawShaderMaterial||O.clipping===!0)&&(ct.clippingPlanes=Re.uniform),Lr(O,Ze),ie.needsLights=Nr(O),ie.lightsStateVersion=Ve,ie.needsLights&&(ct.ambientLightColor.value=ce.state.ambient,ct.lightProbe.value=ce.state.probe,ct.directionalLights.value=ce.state.directional,ct.directionalLightShadows.value=ce.state.directionalShadow,ct.spotLights.value=ce.state.spot,ct.spotLightShadows.value=ce.state.spotShadow,ct.rectAreaLights.value=ce.state.rectArea,ct.ltc_1.value=ce.state.rectAreaLTC1,ct.ltc_2.value=ce.state.rectAreaLTC2,ct.pointLights.value=ce.state.point,ct.pointLightShadows.value=ce.state.pointShadow,ct.hemisphereLights.value=ce.state.hemi,ct.directionalShadowMap.value=ce.state.directionalShadowMap,ct.directionalShadowMatrix.value=ce.state.directionalShadowMatrix,ct.spotShadowMap.value=ce.state.spotShadowMap,ct.spotLightMatrix.value=ce.state.spotLightMatrix,ct.spotLightMap.value=ce.state.spotLightMap,ct.pointShadowMap.value=ce.state.pointShadowMap,ct.pointShadowMatrix.value=ce.state.pointShadowMatrix),ie.currentProgram=ft,ie.uniformsList=null,ft}function ns(O){if(O.uniformsList===null){const oe=O.currentProgram.getUniforms();O.uniformsList=_c.seqWithValue(oe.seq,O.uniforms)}return O.uniformsList}function Lr(O,oe){const pe=le.get(O);pe.outputColorSpace=oe.outputColorSpace,pe.batching=oe.batching,pe.batchingColor=oe.batchingColor,pe.instancing=oe.instancing,pe.instancingColor=oe.instancingColor,pe.instancingMorph=oe.instancingMorph,pe.skinning=oe.skinning,pe.morphTargets=oe.morphTargets,pe.morphNormals=oe.morphNormals,pe.morphColors=oe.morphColors,pe.morphTargetsCount=oe.morphTargetsCount,pe.numClippingPlanes=oe.numClippingPlanes,pe.numIntersection=oe.numClipIntersection,pe.vertexAlphas=oe.vertexAlphas,pe.vertexTangents=oe.vertexTangents,pe.toneMapping=oe.toneMapping}function Bo(O,oe,pe,ie,ce){oe.isScene!==!0&&(oe=Me),P.resetTextureUnits();const Le=oe.fog,Ve=ie.isMeshStandardMaterial?oe.environment:null,Ze=T===null?_.outputColorSpace:T.isXRRenderTarget===!0?T.texture.colorSpace:zs,Je=(ie.isMeshStandardMaterial?Z:A).get(ie.envMap||Ve),gt=ie.vertexColors===!0&&!!pe.attributes.color&&pe.attributes.color.itemSize===4,ft=!!pe.attributes.tangent&&(!!ie.normalMap||ie.anisotropy>0),ct=!!pe.morphAttributes.position,Et=!!pe.morphAttributes.normal,Nt=!!pe.morphAttributes.color;let tn=lr;ie.toneMapped&&(T===null||T.isXRRenderTarget===!0)&&(tn=_.toneMapping);const Kt=pe.morphAttributes.position||pe.morphAttributes.normal||pe.morphAttributes.color,Lt=Kt!==void 0?Kt.length:0,ut=le.get(ie),an=g.state.lights;if(H===!0&&(K===!0||O!==b)){const ln=O===b&&ie.id===S;Re.setState(ie,O,ln)}let It=!1;ie.version===ut.__version?(ut.needsLights&&ut.lightsStateVersion!==an.state.version||ut.outputColorSpace!==Ze||ce.isBatchedMesh&&ut.batching===!1||!ce.isBatchedMesh&&ut.batching===!0||ce.isBatchedMesh&&ut.batchingColor===!0&&ce.colorTexture===null||ce.isBatchedMesh&&ut.batchingColor===!1&&ce.colorTexture!==null||ce.isInstancedMesh&&ut.instancing===!1||!ce.isInstancedMesh&&ut.instancing===!0||ce.isSkinnedMesh&&ut.skinning===!1||!ce.isSkinnedMesh&&ut.skinning===!0||ce.isInstancedMesh&&ut.instancingColor===!0&&ce.instanceColor===null||ce.isInstancedMesh&&ut.instancingColor===!1&&ce.instanceColor!==null||ce.isInstancedMesh&&ut.instancingMorph===!0&&ce.morphTexture===null||ce.isInstancedMesh&&ut.instancingMorph===!1&&ce.morphTexture!==null||ut.envMap!==Je||ie.fog===!0&&ut.fog!==Le||ut.numClippingPlanes!==void 0&&(ut.numClippingPlanes!==Re.numPlanes||ut.numIntersection!==Re.numIntersection)||ut.vertexAlphas!==gt||ut.vertexTangents!==ft||ut.morphTargets!==ct||ut.morphNormals!==Et||ut.morphColors!==Nt||ut.toneMapping!==tn||ut.morphTargetsCount!==Lt)&&(It=!0):(It=!0,ut.__version=ie.version);let In=ut.currentProgram;It===!0&&(In=hi(ie,oe,ce));let Wt=!1,_n=!1,Dn=!1;const Yt=In.getUniforms(),Mn=ut.uniforms;if(ne.useProgram(In.program)&&(Wt=!0,_n=!0,Dn=!0),ie.id!==S&&(S=ie.id,_n=!0),Wt||b!==O){ne.buffers.depth.getReversed()?(q.copy(O.projectionMatrix),ky(q),By(q),Yt.setValue(X,"projectionMatrix",q)):Yt.setValue(X,"projectionMatrix",O.projectionMatrix),Yt.setValue(X,"viewMatrix",O.matrixWorldInverse);const rn=Yt.map.cameraPosition;rn!==void 0&&rn.setValue(X,be.setFromMatrixPosition(O.matrixWorld)),ue.logarithmicDepthBuffer&&Yt.setValue(X,"logDepthBufFC",2/(Math.log(O.far+1)/Math.LN2)),(ie.isMeshPhongMaterial||ie.isMeshToonMaterial||ie.isMeshLambertMaterial||ie.isMeshBasicMaterial||ie.isMeshStandardMaterial||ie.isShaderMaterial)&&Yt.setValue(X,"isOrthographic",O.isOrthographicCamera===!0),b!==O&&(b=O,_n=!0,Dn=!0)}if(ce.isSkinnedMesh){Yt.setOptional(X,ce,"bindMatrix"),Yt.setOptional(X,ce,"bindMatrixInverse");const ln=ce.skeleton;ln&&(ln.boneTexture===null&&ln.computeBoneTexture(),Yt.setValue(X,"boneTexture",ln.boneTexture,P))}ce.isBatchedMesh&&(Yt.setOptional(X,ce,"batchingTexture"),Yt.setValue(X,"batchingTexture",ce._matricesTexture,P),Yt.setOptional(X,ce,"batchingIdTexture"),Yt.setValue(X,"batchingIdTexture",ce._indirectTexture,P),Yt.setOptional(X,ce,"batchingColorTexture"),ce._colorsTexture!==null&&Yt.setValue(X,"batchingColorTexture",ce._colorsTexture,P));const pn=pe.morphAttributes;if((pn.position!==void 0||pn.normal!==void 0||pn.color!==void 0)&&ze.update(ce,pe,In),(_n||ut.receiveShadow!==ce.receiveShadow)&&(ut.receiveShadow=ce.receiveShadow,Yt.setValue(X,"receiveShadow",ce.receiveShadow)),ie.isMeshGouraudMaterial&&ie.envMap!==null&&(Mn.envMap.value=Je,Mn.flipEnvMap.value=Je.isCubeTexture&&Je.isRenderTargetTexture===!1?-1:1),ie.isMeshStandardMaterial&&ie.envMap===null&&oe.environment!==null&&(Mn.envMapIntensity.value=oe.environmentIntensity),_n&&(Yt.setValue(X,"toneMappingExposure",_.toneMappingExposure),ut.needsLights&&Js(Mn,Dn),Le&&ie.fog===!0&&ve.refreshFogUniforms(Mn,Le),ve.refreshMaterialUniforms(Mn,ie,W,ee,g.state.transmissionRenderTarget[O.id]),_c.upload(X,ns(ut),Mn,P)),ie.isShaderMaterial&&ie.uniformsNeedUpdate===!0&&(_c.upload(X,ns(ut),Mn,P),ie.uniformsNeedUpdate=!1),ie.isSpriteMaterial&&Yt.setValue(X,"center",ce.center),Yt.setValue(X,"modelViewMatrix",ce.modelViewMatrix),Yt.setValue(X,"normalMatrix",ce.normalMatrix),Yt.setValue(X,"modelMatrix",ce.matrixWorld),ie.isShaderMaterial||ie.isRawShaderMaterial){const ln=ie.uniformsGroups;for(let rn=0,Vi=ln.length;rn<Vi;rn++){const Ti=ln[rn];te.update(Ti,In),te.bind(Ti,In)}}return In}function Js(O,oe){O.ambientLightColor.needsUpdate=oe,O.lightProbe.needsUpdate=oe,O.directionalLights.needsUpdate=oe,O.directionalLightShadows.needsUpdate=oe,O.pointLights.needsUpdate=oe,O.pointLightShadows.needsUpdate=oe,O.spotLights.needsUpdate=oe,O.spotLightShadows.needsUpdate=oe,O.rectAreaLights.needsUpdate=oe,O.hemisphereLights.needsUpdate=oe}function Nr(O){return O.isMeshLambertMaterial||O.isMeshToonMaterial||O.isMeshPhongMaterial||O.isMeshStandardMaterial||O.isShadowMaterial||O.isShaderMaterial&&O.lights===!0}this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return T},this.setRenderTargetTextures=function(O,oe,pe){const ie=le.get(O);ie.__autoAllocateDepthBuffer=O.resolveDepthBuffer===!1,ie.__autoAllocateDepthBuffer===!1&&(ie.__useRenderToTexture=!1),le.get(O.texture).__webglTexture=oe,le.get(O.depthTexture).__webglTexture=ie.__autoAllocateDepthBuffer?void 0:pe,ie.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(O,oe){const pe=le.get(O);pe.__webglFramebuffer=oe,pe.__useDefaultFramebuffer=oe===void 0};const is=X.createFramebuffer();this.setRenderTarget=function(O,oe=0,pe=0){T=O,w=oe,M=pe;let ie=!0,ce=null,Le=!1,Ve=!1;if(O){const Je=le.get(O);if(Je.__useDefaultFramebuffer!==void 0)ne.bindFramebuffer(X.FRAMEBUFFER,null),ie=!1;else if(Je.__webglFramebuffer===void 0)P.setupRenderTarget(O);else if(Je.__hasExternalTextures)P.rebindTextures(O,le.get(O.texture).__webglTexture,le.get(O.depthTexture).__webglTexture);else if(O.depthBuffer){const ct=O.depthTexture;if(Je.__boundDepthTexture!==ct){if(ct!==null&&le.has(ct)&&(O.width!==ct.image.width||O.height!==ct.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");P.setupDepthRenderbuffer(O)}}const gt=O.texture;(gt.isData3DTexture||gt.isDataArrayTexture||gt.isCompressedArrayTexture)&&(Ve=!0);const ft=le.get(O).__webglFramebuffer;O.isWebGLCubeRenderTarget?(Array.isArray(ft[oe])?ce=ft[oe][pe]:ce=ft[oe],Le=!0):O.samples>0&&P.useMultisampledRTT(O)===!1?ce=le.get(O).__webglMultisampledFramebuffer:Array.isArray(ft)?ce=ft[pe]:ce=ft,U.copy(O.viewport),I.copy(O.scissor),B=O.scissorTest}else U.copy(z).multiplyScalar(W).floor(),I.copy(J).multiplyScalar(W).floor(),B=$;if(pe!==0&&(ce=is),ne.bindFramebuffer(X.FRAMEBUFFER,ce)&&ie&&ne.drawBuffers(O,ce),ne.viewport(U),ne.scissor(I),ne.setScissorTest(B),Le){const Je=le.get(O.texture);X.framebufferTexture2D(X.FRAMEBUFFER,X.COLOR_ATTACHMENT0,X.TEXTURE_CUBE_MAP_POSITIVE_X+oe,Je.__webglTexture,pe)}else if(Ve){const Je=le.get(O.texture),gt=oe;X.framebufferTextureLayer(X.FRAMEBUFFER,X.COLOR_ATTACHMENT0,Je.__webglTexture,pe,gt)}else if(O!==null&&pe!==0){const Je=le.get(O.texture);X.framebufferTexture2D(X.FRAMEBUFFER,X.COLOR_ATTACHMENT0,X.TEXTURE_2D,Je.__webglTexture,pe)}S=-1},this.readRenderTargetPixels=function(O,oe,pe,ie,ce,Le,Ve){if(!(O&&O.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ze=le.get(O).__webglFramebuffer;if(O.isWebGLCubeRenderTarget&&Ve!==void 0&&(Ze=Ze[Ve]),Ze){ne.bindFramebuffer(X.FRAMEBUFFER,Ze);try{const Je=O.texture,gt=Je.format,ft=Je.type;if(!ue.textureFormatReadable(gt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!ue.textureTypeReadable(ft)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}oe>=0&&oe<=O.width-ie&&pe>=0&&pe<=O.height-ce&&X.readPixels(oe,pe,ie,ce,Qe.convert(gt),Qe.convert(ft),Le)}finally{const Je=T!==null?le.get(T).__webglFramebuffer:null;ne.bindFramebuffer(X.FRAMEBUFFER,Je)}}},this.readRenderTargetPixelsAsync=async function(O,oe,pe,ie,ce,Le,Ve){if(!(O&&O.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Ze=le.get(O).__webglFramebuffer;if(O.isWebGLCubeRenderTarget&&Ve!==void 0&&(Ze=Ze[Ve]),Ze)if(oe>=0&&oe<=O.width-ie&&pe>=0&&pe<=O.height-ce){ne.bindFramebuffer(X.FRAMEBUFFER,Ze);const Je=O.texture,gt=Je.format,ft=Je.type;if(!ue.textureFormatReadable(gt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!ue.textureTypeReadable(ft))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const ct=X.createBuffer();X.bindBuffer(X.PIXEL_PACK_BUFFER,ct),X.bufferData(X.PIXEL_PACK_BUFFER,Le.byteLength,X.STREAM_READ),X.readPixels(oe,pe,ie,ce,Qe.convert(gt),Qe.convert(ft),0);const Et=T!==null?le.get(T).__webglFramebuffer:null;ne.bindFramebuffer(X.FRAMEBUFFER,Et);const Nt=X.fenceSync(X.SYNC_GPU_COMMANDS_COMPLETE,0);return X.flush(),await Fy(X,Nt,4),X.bindBuffer(X.PIXEL_PACK_BUFFER,ct),X.getBufferSubData(X.PIXEL_PACK_BUFFER,0,Le),X.deleteBuffer(ct),X.deleteSync(Nt),Le}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(O,oe=null,pe=0){const ie=Math.pow(2,-pe),ce=Math.floor(O.image.width*ie),Le=Math.floor(O.image.height*ie),Ve=oe!==null?oe.x:0,Ze=oe!==null?oe.y:0;P.setTexture2D(O,0),X.copyTexSubImage2D(X.TEXTURE_2D,pe,0,0,Ve,Ze,ce,Le),ne.unbindTexture()};const zo=X.createFramebuffer(),Qs=X.createFramebuffer();this.copyTextureToTexture=function(O,oe,pe=null,ie=null,ce=0,Le=null){Le===null&&(ce!==0?(gc("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Le=ce,ce=0):Le=0);let Ve,Ze,Je,gt,ft,ct,Et,Nt,tn;const Kt=O.isCompressedTexture?O.mipmaps[Le]:O.image;if(pe!==null)Ve=pe.max.x-pe.min.x,Ze=pe.max.y-pe.min.y,Je=pe.isBox3?pe.max.z-pe.min.z:1,gt=pe.min.x,ft=pe.min.y,ct=pe.isBox3?pe.min.z:0;else{const pn=Math.pow(2,-ce);Ve=Math.floor(Kt.width*pn),Ze=Math.floor(Kt.height*pn),O.isDataArrayTexture?Je=Kt.depth:O.isData3DTexture?Je=Math.floor(Kt.depth*pn):Je=1,gt=0,ft=0,ct=0}ie!==null?(Et=ie.x,Nt=ie.y,tn=ie.z):(Et=0,Nt=0,tn=0);const Lt=Qe.convert(oe.format),ut=Qe.convert(oe.type);let an;oe.isData3DTexture?(P.setTexture3D(oe,0),an=X.TEXTURE_3D):oe.isDataArrayTexture||oe.isCompressedArrayTexture?(P.setTexture2DArray(oe,0),an=X.TEXTURE_2D_ARRAY):(P.setTexture2D(oe,0),an=X.TEXTURE_2D),X.pixelStorei(X.UNPACK_FLIP_Y_WEBGL,oe.flipY),X.pixelStorei(X.UNPACK_PREMULTIPLY_ALPHA_WEBGL,oe.premultiplyAlpha),X.pixelStorei(X.UNPACK_ALIGNMENT,oe.unpackAlignment);const It=X.getParameter(X.UNPACK_ROW_LENGTH),In=X.getParameter(X.UNPACK_IMAGE_HEIGHT),Wt=X.getParameter(X.UNPACK_SKIP_PIXELS),_n=X.getParameter(X.UNPACK_SKIP_ROWS),Dn=X.getParameter(X.UNPACK_SKIP_IMAGES);X.pixelStorei(X.UNPACK_ROW_LENGTH,Kt.width),X.pixelStorei(X.UNPACK_IMAGE_HEIGHT,Kt.height),X.pixelStorei(X.UNPACK_SKIP_PIXELS,gt),X.pixelStorei(X.UNPACK_SKIP_ROWS,ft),X.pixelStorei(X.UNPACK_SKIP_IMAGES,ct);const Yt=O.isDataArrayTexture||O.isData3DTexture,Mn=oe.isDataArrayTexture||oe.isData3DTexture;if(O.isDepthTexture){const pn=le.get(O),ln=le.get(oe),rn=le.get(pn.__renderTarget),Vi=le.get(ln.__renderTarget);ne.bindFramebuffer(X.READ_FRAMEBUFFER,rn.__webglFramebuffer),ne.bindFramebuffer(X.DRAW_FRAMEBUFFER,Vi.__webglFramebuffer);for(let Ti=0;Ti<Je;Ti++)Yt&&(X.framebufferTextureLayer(X.READ_FRAMEBUFFER,X.COLOR_ATTACHMENT0,le.get(O).__webglTexture,ce,ct+Ti),X.framebufferTextureLayer(X.DRAW_FRAMEBUFFER,X.COLOR_ATTACHMENT0,le.get(oe).__webglTexture,Le,tn+Ti)),X.blitFramebuffer(gt,ft,Ve,Ze,Et,Nt,Ve,Ze,X.DEPTH_BUFFER_BIT,X.NEAREST);ne.bindFramebuffer(X.READ_FRAMEBUFFER,null),ne.bindFramebuffer(X.DRAW_FRAMEBUFFER,null)}else if(ce!==0||O.isRenderTargetTexture||le.has(O)){const pn=le.get(O),ln=le.get(oe);ne.bindFramebuffer(X.READ_FRAMEBUFFER,zo),ne.bindFramebuffer(X.DRAW_FRAMEBUFFER,Qs);for(let rn=0;rn<Je;rn++)Yt?X.framebufferTextureLayer(X.READ_FRAMEBUFFER,X.COLOR_ATTACHMENT0,pn.__webglTexture,ce,ct+rn):X.framebufferTexture2D(X.READ_FRAMEBUFFER,X.COLOR_ATTACHMENT0,X.TEXTURE_2D,pn.__webglTexture,ce),Mn?X.framebufferTextureLayer(X.DRAW_FRAMEBUFFER,X.COLOR_ATTACHMENT0,ln.__webglTexture,Le,tn+rn):X.framebufferTexture2D(X.DRAW_FRAMEBUFFER,X.COLOR_ATTACHMENT0,X.TEXTURE_2D,ln.__webglTexture,Le),ce!==0?X.blitFramebuffer(gt,ft,Ve,Ze,Et,Nt,Ve,Ze,X.COLOR_BUFFER_BIT,X.NEAREST):Mn?X.copyTexSubImage3D(an,Le,Et,Nt,tn+rn,gt,ft,Ve,Ze):X.copyTexSubImage2D(an,Le,Et,Nt,gt,ft,Ve,Ze);ne.bindFramebuffer(X.READ_FRAMEBUFFER,null),ne.bindFramebuffer(X.DRAW_FRAMEBUFFER,null)}else Mn?O.isDataTexture||O.isData3DTexture?X.texSubImage3D(an,Le,Et,Nt,tn,Ve,Ze,Je,Lt,ut,Kt.data):oe.isCompressedArrayTexture?X.compressedTexSubImage3D(an,Le,Et,Nt,tn,Ve,Ze,Je,Lt,Kt.data):X.texSubImage3D(an,Le,Et,Nt,tn,Ve,Ze,Je,Lt,ut,Kt):O.isDataTexture?X.texSubImage2D(X.TEXTURE_2D,Le,Et,Nt,Ve,Ze,Lt,ut,Kt.data):O.isCompressedTexture?X.compressedTexSubImage2D(X.TEXTURE_2D,Le,Et,Nt,Kt.width,Kt.height,Lt,Kt.data):X.texSubImage2D(X.TEXTURE_2D,Le,Et,Nt,Ve,Ze,Lt,ut,Kt);X.pixelStorei(X.UNPACK_ROW_LENGTH,It),X.pixelStorei(X.UNPACK_IMAGE_HEIGHT,In),X.pixelStorei(X.UNPACK_SKIP_PIXELS,Wt),X.pixelStorei(X.UNPACK_SKIP_ROWS,_n),X.pixelStorei(X.UNPACK_SKIP_IMAGES,Dn),Le===0&&oe.generateMipmaps&&X.generateMipmap(an),ne.unbindTexture()},this.copyTextureToTexture3D=function(O,oe,pe=null,ie=null,ce=0){return gc('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(O,oe,pe,ie,ce)},this.initRenderTarget=function(O){le.get(O).__webglFramebuffer===void 0&&P.setupRenderTarget(O)},this.initTexture=function(O){O.isCubeTexture?P.setTextureCube(O,0):O.isData3DTexture?P.setTexture3D(O,0):O.isDataArrayTexture||O.isCompressedArrayTexture?P.setTexture2DArray(O,0):P.setTexture2D(O,0),ne.unbindTexture()},this.resetState=function(){w=0,M=0,T=null,ne.reset(),St.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ki}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=Dt._getDrawingBufferColorSpace(e),t.unpackColorSpace=Dt._getUnpackColorSpace()}}const WE=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:f0,AddEquation:qr,AddOperation:c0,AdditiveAnimationBlendMode:tf,AdditiveBlending:pd,AgXToneMapping:Uc,AlphaFormat:Zd,AlwaysCompare:C0,AlwaysDepth:Ac,AlwaysStencilFunc:_d,AmbientLight:Cf,AnimationAction:Sv,AnimationClip:Ws,AnimationLoader:cb,AnimationMixer:Ob,AnimationObjectGroup:Lb,AnimationUtils:sb,ArcCurve:W0,ArrayCamera:yv,ArrowHelper:n1,AttachedBindMode:vd,Audio:xv,AudioAnalyser:wb,AudioContext:Rf,AudioListener:bb,AudioLoader:_b,AxesHelper:i1,BackSide:ti,BasicDepthPacking:x0,BasicShadowMap:B_,BatchedMesh:B0,Bone:Ih,BooleanKeyframeTrack:js,Box2:Hb,Box3:Sn,Box3Helper:e1,BoxGeometry:gn,BoxHelper:$b,BufferAttribute:Tt,BufferGeometry:_t,BufferGeometryLoader:_v,ByteType:Yd,Cache:Ar,Camera:Ah,CameraHelper:Qb,CanvasTexture:H0,CapsuleGeometry:Lh,CatmullRomCurve3:X0,CineonToneMapping:d0,CircleGeometry:Nh,ClampToEdgeWrapping:yi,Clock:Pf,Color:Be,ColorKeyframeTrack:Sf,ColorManagement:Dt,CompressedArrayTexture:Ax,CompressedCubeTexture:Cx,CompressedTexture:Dh,CompressedTextureLoader:hb,ConeGeometry:Oh,ConstantAlphaFactor:o0,ConstantColorFactor:r0,Controls:Zh,CubeCamera:L0,CubeReflectionMapping:Dr,CubeRefractionMapping:Kr,CubeTexture:Qa,CubeTextureLoader:ub,CubeUVReflectionMapping:Uo,CubicBezierCurve:df,CubicBezierCurve3:Y0,CubicInterpolant:cv,CullFaceBack:fd,CullFaceFront:Hg,CullFaceFrontBack:k_,CullFaceNone:Vg,Curve:$i,CurvePath:j0,CustomBlending:Wg,CustomToneMapping:p0,CylinderGeometry:En,Cylindrical:Vb,Data3DTexture:Eh,DataArrayTexture:Ka,DataTexture:cr,DataTextureLoader:dv,DataUtils:ex,DecrementStencilOp:$_,DecrementWrapStencilOp:ty,DefaultLoadingManager:Ks,DepthFormat:Co,DepthStencilFormat:Ro,DepthTexture:hf,DetachedBindMode:g0,DirectionalLight:Af,DirectionalLightHelper:Jb,DiscreteInterpolant:hv,DodecahedronGeometry:Fh,DoubleSide:vi,DstAlphaFactor:$g,DstColorFactor:t0,DynamicCopyUsage:gy,DynamicDrawUsage:hy,DynamicReadUsage:fy,EdgesGeometry:Z0,EllipseCurve:Uh,EqualCompare:w0,EqualDepth:Rc,EqualStencilFunc:sy,EquirectangularReflectionMapping:Ta,EquirectangularRefractionMapping:Aa,Euler:bi,EventDispatcher:mr,ExtrudeGeometry:kh,FileLoader:Ji,Float16BufferAttribute:ax,Float32BufferAttribute:je,FloatType:xi,Fog:Rh,FogExp2:Ch,FramebufferTexture:Tx,FrontSide:ur,Frustum:nl,GLBufferAttribute:Gb,GLSL1:_y,GLSL3:yd,GreaterCompare:E0,GreaterDepth:Ic,GreaterEqualCompare:A0,GreaterEqualDepth:Pc,GreaterEqualStencilFunc:cy,GreaterStencilFunc:ay,GridHelper:Zb,Group:ki,HalfFloatType:Lo,HemisphereLight:pv,HemisphereLightHelper:jb,IcosahedronGeometry:Bh,ImageBitmapLoader:vb,ImageLoader:za,ImageUtils:I0,IncrementStencilOp:Q_,IncrementWrapStencilOp:ey,InstancedBufferAttribute:Gs,InstancedBufferGeometry:qh,InstancedInterleavedBuffer:dh,InstancedMesh:k0,Int16BufferAttribute:sx,Int32BufferAttribute:ox,Int8BufferAttribute:nx,IntType:vh,InterleavedBuffer:Ph,InterleavedBufferAttribute:Ii,Interpolant:sl,InterpolateDiscrete:Ra,InterpolateLinear:oh,InterpolateSmooth:mc,InvertStencilOp:ny,KeepStencilOp:ws,KeyframeTrack:Gi,LOD:F0,LatheGeometry:il,Layers:Th,LessCompare:M0,LessDepth:Cc,LessEqualCompare:rf,LessEqualDepth:Bs,LessEqualStencilFunc:oy,LessStencilFunc:ry,Light:es,LightProbe:vv,Line:Gn,Line3:Mv,LineBasicMaterial:Nn,LineCurve:ff,LineCurve3:q0,LineDashedMaterial:ov,LineLoop:z0,LineSegments:Qi,LinearFilter:bn,LinearInterpolant:bf,LinearMipMapLinearFilter:H_,LinearMipMapNearestFilter:V_,LinearMipmapLinearFilter:Zi,LinearMipmapNearestFilter:pa,LinearSRGBColorSpace:zs,LinearToneMapping:h0,LinearTransfer:Ia,Loader:Hn,LoaderUtils:uh,LoadingManager:Mf,LoopOnce:v0,LoopPingPong:y0,LoopRepeat:_0,LuminanceAlphaFormat:Qd,LuminanceFormat:Jd,MOUSE:Di,Material:ii,MaterialLoader:Yh,MathUtils:or,Matrix2:Lf,Matrix3:Mt,Matrix4:rt,MaxEquation:jg,Mesh:Ne,MeshBasicMaterial:Ln,MeshDepthMaterial:rl,MeshDistanceMaterial:Xh,MeshLambertMaterial:yf,MeshMatcapMaterial:sv,MeshNormalMaterial:rv,MeshPhongMaterial:hh,MeshPhysicalMaterial:nv,MeshStandardMaterial:_f,MeshToonMaterial:iv,MinEquation:qg,MirroredRepeatWrapping:Ca,MixOperation:l0,MultiplyBlending:gd,MultiplyOperation:ja,NearestFilter:Vn,NearestMipMapLinearFilter:G_,NearestMipMapNearestFilter:z_,NearestMipmapLinearFilter:bo,NearestMipmapNearestFilter:Xd,NeutralToneMapping:m0,NeverCompare:S0,NeverDepth:Tc,NeverStencilFunc:iy,NoBlending:Cr,NoColorSpace:Sr,NoToneMapping:lr,NormalAnimationBlendMode:Mh,NormalBlending:Ls,NotEqualCompare:T0,NotEqualDepth:Dc,NotEqualStencilFunc:ly,NumberKeyframeTrack:Ba,Object3D:Ut,ObjectLoader:mb,ObjectSpaceNormalMap:b0,OctahedronGeometry:Tr,OneFactor:Kg,OneMinusConstantAlphaFactor:a0,OneMinusConstantColorFactor:s0,OneMinusDstAlphaFactor:e0,OneMinusDstColorFactor:n0,OneMinusSrcAlphaFactor:Ec,OneMinusSrcColorFactor:Qg,OrthographicCamera:ts,PCFShadowMap:Wd,PCFSoftShadowMap:fa,PMREMGenerator:Td,Path:Na,PerspectiveCamera:xn,Plane:sr,PlaneGeometry:er,PlaneHelper:t1,PointLight:Tf,PointLightHelper:Yb,Points:G0,PointsMaterial:cf,PolarGridHelper:Kb,PolyhedronGeometry:$r,PositionalAudio:Mb,PropertyBinding:Bt,PropertyMixer:bv,QuadraticBezierCurve:pf,QuadraticBezierCurve3:mf,Quaternion:Gt,QuaternionKeyframeTrack:Oo,QuaternionLinearInterpolant:uv,RED_GREEN_RGTC2_Format:rh,RED_RGTC1_Format:ef,REVISION:qa,RGBADepthPacking:nf,RGBAFormat:ci,RGBAIntegerFormat:Sh,RGBA_ASTC_10x10_Format:Qc,RGBA_ASTC_10x5_Format:Zc,RGBA_ASTC_10x6_Format:Kc,RGBA_ASTC_10x8_Format:Jc,RGBA_ASTC_12x10_Format:$c,RGBA_ASTC_12x12_Format:eh,RGBA_ASTC_4x4_Format:Gc,RGBA_ASTC_5x4_Format:Vc,RGBA_ASTC_5x5_Format:Hc,RGBA_ASTC_6x5_Format:Wc,RGBA_ASTC_6x6_Format:Xc,RGBA_ASTC_8x5_Format:Yc,RGBA_ASTC_8x6_Format:qc,RGBA_ASTC_8x8_Format:jc,RGBA_BPTC_Format:ya,RGBA_ETC2_EAC_Format:zc,RGBA_PVRTC_2BPPV1_Format:Fc,RGBA_PVRTC_4BPPV1_Format:Oc,RGBA_S3TC_DXT1_Format:ga,RGBA_S3TC_DXT3_Format:va,RGBA_S3TC_DXT5_Format:_a,RGBDepthPacking:j_,RGBFormat:Kd,RGBIntegerFormat:W_,RGB_BPTC_SIGNED_Format:th,RGB_BPTC_UNSIGNED_Format:nh,RGB_ETC1_Format:kc,RGB_ETC2_Format:Bc,RGB_PVRTC_2BPPV1_Format:Nc,RGB_PVRTC_4BPPV1_Format:Lc,RGB_S3TC_DXT1_Format:ma,RGDepthPacking:Z_,RGFormat:$d,RGIntegerFormat:bh,RawShaderMaterial:tv,Ray:Qr,Raycaster:jh,RectAreaLight:mv,RedFormat:xh,RedIntegerFormat:Za,ReinhardToneMapping:u0,RenderTarget:wh,RenderTarget3D:Fb,RenderTargetArray:kb,RepeatWrapping:ji,ReplaceStencilOp:J_,ReverseSubtractEquation:Yg,RingGeometry:zh,SIGNED_RED_GREEN_RGTC2_Format:sh,SIGNED_RED_RGTC1_Format:ih,SRGBColorSpace:on,SRGBTransfer:qt,Scene:$a,ShaderChunk:mt,ShaderLib:ai,ShaderMaterial:Si,ShadowMaterial:ev,Shape:Os,ShapeGeometry:Gh,ShapePath:r1,ShapeUtils:hr,ShortType:qd,Skeleton:tl,SkeletonHelper:Xb,SkinnedMesh:lf,Source:Zr,Sphere:Tn,SphereGeometry:qs,Spherical:fh,SphericalHarmonics3:gv,SplineCurve:gf,SpotLight:Ef,SpotLightHelper:Wb,Sprite:el,SpriteMaterial:No,SrcAlphaFactor:wc,SrcAlphaSaturateFactor:i0,SrcColorFactor:Jg,StaticCopyUsage:my,StaticDrawUsage:Da,StaticReadUsage:dy,StereoCamera:yb,StreamCopyUsage:vy,StreamDrawUsage:uy,StreamReadUsage:py,StringKeyframeTrack:Zs,SubtractEquation:Xg,SubtractiveBlending:md,TOUCH:Rs,TangentSpaceNormalMap:Jr,TetrahedronGeometry:Vh,Texture:fn,TextureLoader:fv,TextureUtils:c1,TimestampQuery:yy,TorusGeometry:wr,TorusKnotGeometry:Hh,Triangle:_i,TriangleFanDrawMode:q_,TriangleStripDrawMode:Y_,TrianglesDrawMode:X_,TubeGeometry:Wh,UVMapping:gh,Uint16BufferAttribute:of,Uint32BufferAttribute:af,Uint8BufferAttribute:ix,Uint8ClampedBufferAttribute:rx,Uniform:Uf,UniformsGroup:zb,UniformsLib:Ye,UniformsUtils:Ja,UnsignedByteType:dr,UnsignedInt248Type:Ao,UnsignedInt5999Type:jd,UnsignedIntType:Ur,UnsignedShort4444Type:_h,UnsignedShort5551Type:yh,UnsignedShortType:To,VSMShadowMap:rr,Vector2:ge,Vector3:D,Vector4:Rt,VectorKeyframeTrack:Hs,VideoFrameTexture:Ex,VideoTexture:V0,WebGL3DRenderTarget:Wy,WebGLArrayRenderTarget:Hy,WebGLCoordinateSystem:Ki,WebGLCubeRenderTarget:N0,WebGLRenderTarget:zi,WebGLRenderer:Iv,WebGLUtils:Pv,WebGPUCoordinateSystem:Ua,WebXRController:vc,WireframeGeometry:vf,WrapAroundEnding:Pa,ZeroCurvatureEnding:Ps,ZeroFactor:Zg,ZeroSlopeEnding:Is,ZeroStencilOp:K_,createCanvasElement:P0},Symbol.toStringTag,{value:"Module"})),Bm=(s,e)=>{if(s===e)return!0;if(!s||!e)return!1;const t=s.length;if(e.length!==t)return!1;for(let i=0;i<t;i++)if(s[i]!==e[i])return!1;return!0},XE=()=>{const s=[],i={items:s,remember:(n,r)=>{for(let a=0;a<s.length;a++){const l=s[a];if(Bm(r,l.keys)&&l.promise)return l.promise}const o={promise:n(),keys:r};return s.push(o),o.promise},clear:n=>{for(let r=0;r<s.length;r++){const o=s[r];if(Bm(n,o.keys)){s.splice(r,1);return}}}};return Mi("threlte-cache",i),i},YE=()=>{const s=ni("threlte-cache");if(!s)throw new Error("No cache found. The cache can only be used in a child component to <Canvas>.");return s},zm=Symbol(),qE=s=>typeof(s==null?void 0:s.subscribe)=="function",Dv=(s,e,t)=>{const i=s().map(o=>qE(o)?F_(o):zm),n=xt(()=>s().map((o,a)=>i[a]===zm?o:i[a].current)),r=()=>{Ee(n);let o;return zg(()=>{o=e(Ee(n))}),o};t?Pt(r):gi(r)},jE=(s,e)=>Dv(s,e,!1),ZE=(s,e)=>Dv(s,e,!0),Uv=Object.assign(jE,{pre:ZE}),Pi=(s,e)=>(s==null?void 0:s[`is${e}`])===!0,qu=s=>{const e=ei(void 0),t=ei(void 0);return s.then(i=>{e.set(i)}).catch(i=>{console.error("Error in asyncWritable:",i.message),t.set(i)}),Object.assign(Object.assign(s,e),{error:t,promise:s})},KE=typeof window<"u",$n=(s,e)=>{const t=Ya(s,r=>r);let i;const n=t.subscribe(async r=>{i&&i();const o=await e(r);o&&(i=o)});pr(()=>{n(),i&&i()})},un=s=>{const e=ei(s),t={set:i=>{t.current=i,e.set(i)},subscribe:e.subscribe,update:i=>{const n=i(t.current);t.current=n,e.set(n)},current:s};return t},JE=s=>({subscribe:s.subscribe,get current(){return s.current}}),Lv=(s,e)=>{if(e.includes(".")){const t=e.split("."),i=t.pop();for(let n=0;n<t.length;n+=1)s=s[t[n]];return{target:s,key:i}}else return{target:s,key:e}},QE=s=>{const{dom:e,canvas:t}=s,i=un({width:e.offsetWidth,height:e.offsetHeight});Gg(()=>{const r=new ResizeObserver(()=>{const{offsetWidth:o,offsetHeight:a}=e;(i.current.width!==o||i.current.height!==a)&&i.set({width:o,height:a})});return r.observe(e),()=>{r.disconnect()}});const n={dom:e,canvas:t,size:JE(i)};return Mi("threlte-dom-context",n),n},Jh=()=>{const s=ni("threlte-dom-context");if(!s)throw new Error("useDOM can only be used in a child component to <Canvas>.");return s};function $E(s){return{all:s=s||new Map,on:function(e,t){var i=s.get(e);i?i.push(t):s.set(e,[t])},off:function(e,t){var i=s.get(e);i&&(t?i.splice(i.indexOf(t)>>>0,1):s.set(e,[]))},emit:function(e,t){var i=s.get(e);i&&i.slice().map(function(n){n(t)}),(i=s.get("*"))&&i.slice().map(function(n){n(e,t)})}}}class Yr{constructor(){$t(this,"allVertices",{});$t(this,"isolatedVertices",{});$t(this,"connectedVertices",{});$t(this,"sortedConnectedValues",[]);$t(this,"needsSort",!1);$t(this,"emitter",$E());$t(this,"emit",this.emitter.emit.bind(this.emitter));$t(this,"on",this.emitter.on.bind(this.emitter));$t(this,"off",this.emitter.off.bind(this.emitter));$t(this,"getKey",e=>typeof e=="object"?e.key:e)}get sortedVertices(){return this.mapNodes(e=>e)}moveToIsolated(e){const t=this.connectedVertices[e];t&&(this.isolatedVertices[e]=t,delete this.connectedVertices[e])}moveToConnected(e){const t=this.isolatedVertices[e];t&&(this.connectedVertices[e]=t,delete this.isolatedVertices[e])}add(e,t,i){if(this.allVertices[e]&&this.allVertices[e].value!==void 0)throw new Error(`A node with the key ${e.toString()} already exists`);let n=this.allVertices[e];n?n.value===void 0&&(n.value=t):(n={value:t,previous:new Set,next:new Set},this.allVertices[e]=n);const r=n.next.size>0||n.previous.size>0;if(!(i!=null&&i.after)&&!(i!=null&&i.before)&&!r){this.isolatedVertices[e]=n,this.emit("node:added",{key:e,type:"isolated",value:t});return}else this.connectedVertices[e]=n;if(i!=null&&i.after){const o=Array.isArray(i.after)?i.after:[i.after];o.forEach(a=>{n.previous.add(this.getKey(a))}),o.forEach(a=>{const l=this.getKey(a),c=this.allVertices[l];c?(c.next.add(e),this.moveToConnected(l)):(this.allVertices[l]={value:void 0,previous:new Set,next:new Set([e])},this.connectedVertices[l]=this.allVertices[l])})}if(i!=null&&i.before){const o=Array.isArray(i.before)?i.before:[i.before];o.forEach(a=>{n.next.add(this.getKey(a))}),o.forEach(a=>{const l=this.getKey(a),c=this.allVertices[l];c?(c.previous.add(e),this.moveToConnected(l)):(this.allVertices[l]={value:void 0,previous:new Set([e]),next:new Set},this.connectedVertices[l]=this.allVertices[l])})}this.emit("node:added",{key:e,type:"connected",value:t}),this.needsSort=!0}remove(e){const t=this.getKey(e);if(this.isolatedVertices[t]){delete this.isolatedVertices[t],delete this.allVertices[t],this.emit("node:removed",{key:t,type:"isolated"});return}const n=this.connectedVertices[t];n&&(n.next.forEach(r=>{const o=this.connectedVertices[r];o&&(o.previous.delete(t),o.previous.size===0&&o.next.size===0&&this.moveToIsolated(r))}),n.previous.forEach(r=>{const o=this.connectedVertices[r];o&&(o.next.delete(t),o.previous.size===0&&o.next.size===0&&this.moveToIsolated(r))}),delete this.connectedVertices[t],delete this.allVertices[t],this.emit("node:removed",{key:t,type:"connected"}),this.needsSort=!0)}mapNodes(e){this.needsSort&&this.sort();const t=[];return this.forEachNode((i,n)=>{t.push(e(i,n))}),t}forEachNode(e){this.needsSort&&this.sort();let t=0;for(;t<this.sortedConnectedValues.length;t++)e(this.sortedConnectedValues[t],t);Reflect.ownKeys(this.isolatedVertices).forEach(i=>{const n=this.isolatedVertices[i];n.value!==void 0&&e(n.value,t++)})}getValueByKey(e){var t;return(t=this.allVertices[e])==null?void 0:t.value}getKeyByValue(e){return Reflect.ownKeys(this.connectedVertices).find(t=>this.connectedVertices[t].value===e)??Reflect.ownKeys(this.isolatedVertices).find(t=>this.isolatedVertices[t].value===e)}sort(){var o;const e=new Map,t=[],i=[],n=Reflect.ownKeys(this.connectedVertices).filter(a=>this.connectedVertices[a].value!==void 0);for(n.forEach(a=>{e.set(a,0)}),n.forEach(a=>{this.connectedVertices[a].next.forEach(c=>{this.connectedVertices[c]&&e.set(c,(e.get(c)||0)+1)})}),e.forEach((a,l)=>{a===0&&t.push(l)});t.length>0;){const a=t.shift();i.push(a);const l=n.find(c=>c===a);l&&((o=this.connectedVertices[l])==null||o.next.forEach(c=>{const h=(e.get(c)||0)-1;e.set(c,h),h===0&&t.push(c)}))}if(i.length!==n.length)throw new Error("The graph contains a cycle, and thus can not be sorted topologically.");const r=a=>a!==void 0;this.sortedConnectedValues=i.map(a=>this.connectedVertices[a].value).filter(r),this.needsSort=!1}clear(){this.allVertices={},this.isolatedVertices={},this.connectedVertices={},this.sortedConnectedValues=[],this.needsSort=!1}static isKey(e){return typeof e=="string"||typeof e=="symbol"}static isValue(e){return typeof e=="object"&&"key"in e}}class eT{constructor(e,t,i){$t(this,"key");$t(this,"stage");$t(this,"callback");$t(this,"runTask",!0);this.stage=e,this.key=t,this.callback=i}stop(){this.runTask=!1}start(){this.runTask=!0}run(e){this.runTask&&this.callback(e)}}class tT extends Yr{constructor(t,i,n){super();$t(this,"key");$t(this,"scheduler");$t(this,"runTask",!0);$t(this,"callback",(t,i)=>i());$t(this,"removeTask",this.remove.bind(this));this.scheduler=t,this.key=i,this.start=this.start.bind(this),this.stop=this.stop.bind(this),n&&(this.callback=n.bind(this))}stop(){this.runTask=!1}start(){this.runTask=!0}get tasks(){return this.sortedVertices}createTask(t,i,n){const r=new eT(this,t,i);return this.add(t,r,n),r}getTask(t){return this.getValueByKey(t)}run(t){this.runTask&&this.callback(t,i=>{this.forEachNode(n=>{n.run(i??t)})})}runWithTiming(t){if(!this.runTask)return{};const i={};return this.callback(t,n=>{this.forEachNode(r=>{const o=performance.now();r.run(n??t);const a=performance.now()-o;i[r.key]=a})}),i}getSchedule(){return this.mapNodes(t=>t.key.toString())}}class nT extends Yr{constructor(t){super();$t(this,"lastTime",performance.now());$t(this,"clampDeltaTo",.1);$t(this,"removeStage",this.remove.bind(this));t!=null&&t.clampDeltaTo&&(this.clampDeltaTo=t.clampDeltaTo),this.run=this.run.bind(this)}get stages(){return this.sortedVertices}createStage(t,i){const n=new tT(this,t,i==null?void 0:i.callback);return this.add(t,n,{after:i==null?void 0:i.after,before:i==null?void 0:i.before}),n}getStage(t){return this.getValueByKey(t)}run(t){const i=t-this.lastTime;this.forEachNode(n=>{n.run(Math.min(i/1e3,this.clampDeltaTo))}),this.lastTime=t}runWithTiming(t){const i=t-this.lastTime,n={},r=performance.now();return this.forEachNode(o=>{const a=performance.now(),l=o.runWithTiming(Math.min(i/1e3,this.clampDeltaTo)),c=performance.now()-a;n[o.key.toString()]={duration:c,tasks:l}}),{total:performance.now()-r,stages:n}}getSchedule(t={tasks:!0}){return{stages:this.mapNodes(i=>{if(i===void 0)throw new Error("Stage not found");return{key:i.key.toString(),tasks:t.tasks?i.getSchedule():void 0}})}}dispose(){this.clear()}}const iT=s=>{const e=new nT,t=e.createStage(Symbol("threlte-main-stage")),i={scheduler:e,frameInvalidated:!0,autoInvalidations:new Set,shouldAdvance:!1,advance:()=>{i.shouldAdvance=!0},autoRender:un(s.autoRender??!0),renderMode:un(s.renderMode??"on-demand"),invalidate(){i.frameInvalidated=!0},mainStage:t,shouldRender:()=>i.renderMode.current==="always"||i.renderMode.current==="on-demand"&&(i.frameInvalidated||i.autoInvalidations.size>0)||i.renderMode.current==="manual"&&i.shouldAdvance,renderStage:e.createStage(Symbol("threlte-render-stage"),{after:t,callback(n,r){i.shouldRender()&&r()}}),resetFrameInvalidation(){i.frameInvalidated=!1,i.shouldAdvance=!1}};return gi(()=>{i.autoRender.set(s.autoRender??!0)}),gi(()=>{i.renderMode.set(s.renderMode??"on-demand")}),pr(()=>{i.scheduler.dispose()}),Mi("threlte-scheduler-context",i),i},Qh=()=>{const s=ni("threlte-scheduler-context");if(!s)throw new Error("useScheduler can only be used in a child component to <Canvas>.");return s},rT=()=>{const{size:s}=Jh(),{invalidate:e}=Qh(),t=new xn(75,0,.1,1e3);t.position.z=5,t.lookAt(0,0,0);const i=un(t);$n(s,r=>{if(i.current===t){const o=i.current;o.aspect=r.width/r.height,o.updateProjectionMatrix(),e()}});const n={camera:i};return Mi("threlte-camera-context",n),n},Nv=()=>{const s=ni("threlte-camera-context");if(!s)throw new Error("useCamera can only be used in a child component to <Canvas>.");return s},sT=()=>{const s={removeObjectFromDisposal:e=>{s.disposableObjects.delete(e)},disposableObjectMounted:e=>{const t=s.disposableObjects.get(e);t?s.disposableObjects.set(e,t+1):s.disposableObjects.set(e,1)},disposableObjectUnmounted:e=>{const t=s.disposableObjects.get(e);t&&t>0&&(s.disposableObjects.set(e,t-1),t-1<=0&&(s.shouldDispose=!0))},disposableObjects:new Map,shouldDispose:!1,dispose:async(e=!1)=>{await Vd(),!(!s.shouldDispose&&!e)&&(s.disposableObjects.forEach((t,i)=>{var n;(t===0||e)&&((n=i==null?void 0:i.dispose)==null||n.call(i),s.disposableObjects.delete(i))}),s.shouldDispose=!1)}};return pr(()=>{s.dispose(!0)}),Mi("threlte-disposal-context",s),s},Ov=()=>{const s=ni("threlte-disposal-context");if(!s)throw new Error("useDisposal can only be used in a child component to <Canvas>.");return s},Fv=Symbol("threlte-parent-context"),kv=s=>{const e=un(s);return Mi(Fv,e),e},Of=()=>ni(Fv),ph=Symbol("threlte-parent-object3d-context"),oT=s=>{const e=Hd(s);return Mi(ph,e),e},aT=s=>{const e=ni(ph),t=ei(s),i=Ya([t,e],([n,r])=>n??r);return Mi(ph,i),t},lT=()=>ni(ph);function Xs(s,e,t){if(!KE)return{task:void 0,start:()=>{},stop:()=>{},started:Hd(!1)};let i,n,r;Yr.isKey(s)?(i=s,n=e,r=t):(i=Symbol("useTask"),n=s,r=e);const o=Qh();let a=o.mainStage;if(r){if(r.stage)if(Yr.isValue(r.stage))a=r.stage;else{const d=o.scheduler.getStage(r.stage);if(!d)throw new Error(`No stage found with key ${r.stage.toString()}`);a=d}else if(r.after)if(Array.isArray(r.after))for(let d=0;d<r.after.length;d++){const f=r.after[d];if(Yr.isValue(f)){a=f.stage;break}}else Yr.isValue(r.after)&&(a=r.after.stage);else if(r.before)if(Array.isArray(r.before))for(let d=0;d<r.before.length;d++){const f=r.before[d];if(Yr.isValue(f)){a=f.stage;break}}else Yr.isValue(r.before)&&(a=r.before.stage)}const l=ei(!1),c=a.createTask(i,n,r),h=()=>{l.set(!0),((r==null?void 0:r.autoInvalidate)??!0)&&o.autoInvalidations.add(n),c.start()},u=()=>{l.set(!1),((r==null?void 0:r.autoInvalidate)??!0)&&o.autoInvalidations.delete(n),c.stop()};return(r==null?void 0:r.autoStart)??!0?h():u(),pr(()=>{u(),a.removeTask(i)}),{task:c,start:h,stop:u,started:{subscribe:l.subscribe}}}const cT=s=>{const e={scene:new $a};return Mi("threlte-scene-context",e),e},Bv=()=>{const s=ni("threlte-scene-context");if(!s)throw new Error("useScene can only be used in a child component to <Canvas>.");return s},hT=s=>{const{dispose:e}=Ov(),{camera:t}=Nv(),{scene:i}=Bv(),{invalidate:n,renderStage:r,autoRender:o,scheduler:a,resetFrameInvalidation:l}=Qh(),{size:c,canvas:h}=Jh(),u=s.createRenderer?s.createRenderer(h):new Iv({canvas:h,powerPreference:"high-performance",antialias:!0,alpha:!0}),d=r.createTask(Symbol("threlte-auto-render-task"),()=>{u.render(i,t.current)}),f={renderer:u,colorManagementEnabled:un(s.colorManagementEnabled??!0),colorSpace:un(s.colorSpace??"srgb"),dpr:un(s.dpr??window.devicePixelRatio),shadows:un(s.shadows??fa),toneMapping:un(s.toneMapping??Uc),autoRenderTask:d};Mi("threlte-renderer-context",f),$n([f.colorManagementEnabled],([m])=>{Dt.enabled=m}),$n([f.colorSpace],([m])=>{"outputColorSpace"in u&&(u.outputColorSpace=m)}),$n([f.dpr],([m])=>{"setPixelRatio"in u&&u.setPixelRatio(m)});const{start:p,stop:v}=Xs(()=>{var m;!("xr"in u)||(m=u.xr)!=null&&m.isPresenting||(u.setSize(c.current.width,c.current.height),n(),v())},{before:d,autoStart:!1,autoInvalidate:!1});return $n([c],()=>{p()}),$n([f.shadows],([m])=>{"shadowMap"in u&&(u.shadowMap.enabled=!!m,m&&m!==!0?u.shadowMap.type=m:m===!0&&(u.shadowMap.type=fa))}),$n([f.toneMapping],([m])=>{"toneMapping"in u&&(u.toneMapping=m)}),$n([o],([m])=>(m?f.autoRenderTask.start():f.autoRenderTask.stop(),()=>{f.autoRenderTask.stop()})),"setAnimationLoop"in f.renderer&&f.renderer.setAnimationLoop(g=>{e(),a.run(g),l()}),pr(()=>{if("dispose"in f.renderer){const m=f.renderer.dispose;m()}}),gi(()=>{f.colorManagementEnabled.set(s.colorManagementEnabled??!0)}),gi(()=>{f.colorSpace.set(s.colorSpace??"srgb")}),gi(()=>{f.toneMapping.set(s.toneMapping??Uc)}),gi(()=>{f.shadows.set(s.shadows??fa)}),gi(()=>{f.dpr.set(s.dpr??window.devicePixelRatio)}),f},uT=()=>{const s=ni("threlte-renderer-context");if(!s)throw new Error("useRenderer can only be used in a child component to <Canvas>.");return s},dT=()=>{const s=un({});return Mi("threlte-user-context",s),s},fT=()=>{const s=ni("threlte-user-context");if(!s)throw new Error("useUserContext can only be used in a child component to <Canvas>.");return s},pT=s=>{const{scene:e}=cT();return{scene:e,...QE(s),...XE(),...kv(e),...oT(e),...sT(),...iT(s),...rT(),...hT(s),...dT()}};function mT(s,e){Xn(e,!0);let t=fr(e,["$$slots","$$events","$$legacy","children"]);pT(t);var i=yt(),n=it(i);Bi(n,()=>e.children),nt(s,i),Yn()}var gT=Wn('<div class="svelte-1osucwe"><canvas class="svelte-1osucwe"><!></canvas></div>');function aR(s,e){let t=fr(e,["$$slots","$$events","$$legacy","children"]),i=jr(void 0),n=jr(void 0);var r=gT(),o=sp(r),a=sp(o);{var l=c=>{mT(c,Ir({get dom(){return Ee(n)},get canvas(){return Ee(i)}},()=>t,{children:(h,u)=>{var d=yt(),f=it(d);Bi(f,()=>e.children??Pr),nt(h,d)},$$slots:{default:!0}}))};jt(a,c=>{Ee(i)&&Ee(n)&&c(l)})}op(o),ap(o,c=>Er(i,c),()=>Ee(i)),op(r),ap(r,c=>Er(n,c),()=>Ee(n)),nt(s,r)}const Li=()=>{const s=Qh(),e=uT(),t=Nv(),i=Bv(),n=Jh();return{advance:s.advance,autoRender:s.autoRender,autoRenderTask:e.autoRenderTask,camera:t.camera,colorManagementEnabled:e.colorManagementEnabled,colorSpace:e.colorSpace,dpr:e.dpr,invalidate:s.invalidate,mainStage:s.mainStage,renderer:e.renderer,renderMode:s.renderMode,renderStage:s.renderStage,scheduler:s.scheduler,shadows:e.shadows,shouldRender:s.shouldRender,dom:n.dom,canvas:n.canvas,size:n.size,toneMapping:e.toneMapping,get scene(){return i.scene},set scene(o){i.scene=o}}},vT=s=>typeof s=="object"&&s!==null,_T=()=>{const{invalidate:s}=Li();let e;const t=ei(),i=Of(),n=lT(),r=kv(),o=aT();$n([t,r,i,n],([c,h,u,d])=>{if(e==null||e(),e=void 0,!h){s();return}if(c!==void 0){if(c){if(typeof c=="function")e=c({ref:h,parent:u,parentObject3D:d});else if(Pi(c,"Object3D")&&Pi(h,"Object3D"))e=()=>c==null?void 0:c.remove(h),c==null||c.add(h);else if(typeof c=="string"){const{target:f,key:p}=Lv(u,c),v=f[p];e=()=>f[p]=v,f[p]=h}}}else Pi(h,"Object3D")?(e=()=>d==null?void 0:d.remove(h),d==null||d.add(h)):vT(u)&&(Pi(h,"Material")?u.material=h:Pi(h,"BufferGeometry")&&(u.geometry=h));s()});const a=c=>{t.set(c)},l=c=>{r.set(c),Pi(c,"Object3D")&&o.set(c)};return pr(()=>{e==null||e(),s()}),{updateRef:l,updateAttach:a}},yT=s=>Pi(s,"PerspectiveCamera")||Pi(s,"OrthographicCamera"),xT=()=>{const{invalidate:s,size:e,camera:t}=Li(),i=ei(),n=ei(!0),r=ei(!1);return $n([i,r],([c,h])=>{!c||!h||(t.set(c),s())}),$n([i,n,e],([c,h,u])=>{!c||h||(Pi(c,"OrthographicCamera")?(c.left=u.width/-2,c.right=u.width/2,c.top=u.height/2,c.bottom=u.height/-2,c.updateProjectionMatrix(),c.updateMatrixWorld(),s()):Pi(c,"PerspectiveCamera")&&(c.aspect=u.width/u.height,c.updateProjectionMatrix(),c.updateMatrixWorld(),s()))}),{updateRef:c=>{yT(c)&&i.set(c)},updateManual:c=>{n.set(c)},updateMakeDefault:c=>{r.set(c)}}},bT=s=>{let e,t,i=!1;const n=()=>{e==null||e(),e=s==null?void 0:s(t)},r=o=>{t=o,i&&n()};return Gg(()=>{n(),i=!0}),pr(()=>e==null?void 0:e()),{updateRef:r}},Gm=Symbol("threlte-disposable-object-context"),ST=s=>typeof(s==null?void 0:s.dispose)=="function"&&!Pi(s,"Scene"),MT=s=>{let e;const t=ei(void 0),i=ei(s),{disposableObjectMounted:n,disposableObjectUnmounted:r,removeObjectFromDisposal:o}=Ov(),a=ni(Gm),l=Ya([i,a??ei(!0)],([u,d])=>u??d??!0);return Mi(Gm,l),$n([t,l],([u,d])=>{u===e?d?e&&n(e):e&&o(e):d&&(e&&r(e),u&&n(u)),e=u}),pr(()=>{if(!dd(l))return;const u=dd(t);u&&r(u)}),{updateRef:u=>{ST(u)&&t.set(u)},updateDispose:u=>{i.set(u)}}},wT=s=>s!==null&&typeof s=="object"&&"addEventListener"in s&&"removeEventListener"in s,ET=(s={})=>{const e=n=>{var r;n!=null&&n.type&&((r=s[`on${n.type}`])==null||r.call(s,n))},t=(n,r)=>{const o=[];for(const a of Object.keys(r))a.startsWith("on")&&(n.addEventListener(a.slice(2),e),o.push(a));return()=>{for(let a=0;a<o.length;a++)n.removeEventListener(o[a],e)}};return{updateRef:n=>{if(wT(n))return t(n,s)}}};let Cd;const TT=s=>{Cd=s},AT=()=>{const s=Cd;return Cd=void 0,s},CT=s=>{const t=ni("threlte-plugin-context");if(!t)return;const i=[],n=Object.values(t);if(n.length){const r=s();for(let o=0;o<n.length;o++){const a=n[o],l=a(r);l&&l.pluginProps&&i.push(...l.pluginProps)}}return{pluginsProps:i}},RT=new Set(["$$scope","$$slots","type","args","attach","instance"]),PT=new Set(["fov","aspect","near","far","left","right","top","bottom","zoom"]),IT=s=>typeof s=="string"||typeof s=="number"||typeof s=="boolean"||typeof s>"u"||s===null,Vm=(s,e,t)=>{var i,n,r;return!Array.isArray(t)&&typeof t=="number"&&typeof((i=s[e])==null?void 0:i.setScalar)=="function"&&!((n=s[e])!=null&&n.isColor)?(o,a,l)=>{o[a].setScalar(l)}:typeof((r=s[e])==null?void 0:r.set)=="function"?Array.isArray(t)?(o,a,l)=>{o[a].set(...l)}:(o,a,l)=>{o[a].set(l)}:(o,a,l)=>{o[a]=l}},DT=()=>{const{invalidate:s}=Li(),e=new Map,t=new Map,i=(r,o,a,l)=>{if(IT(a)){const u=e.get(o);if(u&&u.instance===r&&u.value===a)return;e.set(o,{instance:r,value:a})}const{key:c,target:h}=Lv(r,o);if(a!=null){const u=t.get(o);if(u)u(h,c,a);else{const d=Vm(h,c,a);t.set(o,d),d(h,c,a)}}else Vm(h,c,a)(h,c,a);l.manualCamera||PT.has(c)&&(h.isPerspectiveCamera||h.isOrthographicCamera)&&h.updateProjectionMatrix()};return{updateProp:(r,o,a,l)=>{var c;!RT.has(o)&&!((c=l.pluginsProps)!=null&&c.includes(o))&&i(r,o,a,l),s()}}},UT=/^\s*class\s+/,LT=s=>typeof s!="function"?!1:UT.test(s.toString()),NT=s=>Array.isArray(s),OT=(s,e)=>LT(s)?NT(e)?new s(...e):new s:s;function ju(s,e){Xn(e,!0);let t=He(e,"is",19,AT),i=He(e,"manual",3,!1),n=He(e,"makeDefault",3,!1),r=He(e,"ref",15),o=fr(e,["$$slots","$$events","$$legacy","is","args","attach","manual","makeDefault","dispose","ref","oncreate","children"]),a=xt(()=>OT(t(),e.args));const l=bT(e.oncreate);Pt(()=>{r()!==Ee(a)&&(r(Ee(a)),l.updateRef(Ee(a)))});const c=CT(()=>({get ref(){return Ee(a)},get args(){return e.args},get attach(){return e.attach},get manual(){return i()},get makeDefault(){return n()},get dispose(){return e.dispose},get props(){return o}})),{updateProp:h}=DT();Object.keys(o).forEach(g=>{Pt(()=>{h(Ee(a),g,o[g],{manualCamera:i(),pluginsProps:c==null?void 0:c.pluginsProps})})});const u=_T();Pt(()=>u.updateAttach(e.attach)),Pt(()=>u.updateRef(Ee(a)));const d=xT();Pt(()=>d.updateRef(Ee(a))),Pt(()=>d.updateManual(i())),Pt(()=>d.updateMakeDefault(n()));const f=MT(e.dispose);Pt(()=>f.updateRef(Ee(a))),Pt(()=>f.updateDispose(e.dispose));const p=ET(o);Pt(()=>p.updateRef(Ee(a)));var v=yt(),m=it(v);Bi(m,()=>e.children??Pr,()=>({ref:Ee(a)})),nt(s,v),Yn()}const FT={},bt=new Proxy(function(){},{apply(s,e,t){return ju(...t)},get(s,e){if(typeof e!="string")return ju;const t=FT[e]||WE[e];if(t===void 0)throw new Error(`No Three.js module found for ${e}. Did you forget to extend the catalogue?`);return TT(t),ju}});function kT(s,e){const t="threlte-plugin-context";e&&Mi(t,{...ni(t),[s]:e})}function BT(s,e){const{scheduler:t}=Li();return t.getStage(s)??t.createStage(s,e)}function zT(s,e,t){const i=fT();if(!i)throw new Error("No user context store found, did you invoke this function outside of your main <Canvas> component?");return e?(i.update(n=>{if(s in n)return n;const r=typeof e=="function"?e():e;return n[s]=r,n}),i.current[s]):Ya(i,n=>n[s])}function zv(s,e){const{remember:t,clear:i}=YE();let n;const r=()=>new s;return{load:(l,c)=>{const h=async u=>{var d;if(n||(n=r()),"loadAsync"in n){const f=await n.loadAsync(u,c==null?void 0:c.onProgress);return((d=c==null?void 0:c.transform)==null?void 0:d.call(c,f))??f}else return new Promise((f,p)=>{n.load(u,v=>{var m;return f(((m=c==null?void 0:c.transform)==null?void 0:m.call(c,v))??v)},v=>{var m;return(m=c==null?void 0:c.onProgress)==null?void 0:m.call(c,v)},p)})};if(Array.isArray(l)){const u=l.map(f=>t(()=>h(f),[s,f]));return qu(Promise.all(u))}else if(typeof l=="string"){const u=t(()=>h(l),[s,l]);return qu(u)}else{const u=Object.values(l).map(f=>t(()=>h(f),[s,f]));return qu(Promise.all(u).then(f=>Object.fromEntries(Object.entries(l).map(([p],v)=>[p,f[v]]))))}},clear:l=>{Array.isArray(l)?l.forEach(c=>{i([s,c])}):typeof l=="string"?i([s,l]):Object.entries(l).forEach(([c,h])=>{i([s,c,h])})},loader:n}}const ys=s=>({subscribe:s.subscribe,get current(){return s.current}});let Ma=0;const Ff=un(!1),$h=un(!1),kf=un(void 0),Bf=un(0),zf=un(0),Gv=un([]),Gf=un(0),{onStart:Zu,onLoad:Ku,onError:Ju}=Ks;Ks.onStart=(s,e,t)=>{Zu==null||Zu(s,e,t),$h.set(!0),kf.set(s),Bf.set(e),zf.set(t);const i=(e-Ma)/(t-Ma);Gf.set(i),i===1&&Ff.set(!0)};Ks.onLoad=()=>{Ku==null||Ku(),$h.set(!1)};Ks.onError=s=>{Ju==null||Ju(s),Gv.update(e=>[...e,s])};Ks.onProgress=(s,e,t)=>{e===t&&(Ma=t),$h.set(!0),kf.set(s),Bf.set(e),zf.set(t);const i=(e-Ma)/(t-Ma)||1;Gf.set(i),i===1&&Ff.set(!0)};ys($h),ys(kf),ys(Bf),ys(zf),ys(Gv),ys(Gf),ys(Ff);new D;new D;new D;new Tn;new rt;new Qr;new D;const GT=Symbol("THRELTE_SUSPENSE_CONTEXT_IDENTIFIER"),VT=()=>{const s=ni(GT),e=new Set,t=n=>(s&&(s.suspend(n),e.add(n)),n),i={suspended:Ya((s==null?void 0:s.suspended)??Hd(!1),n=>n)};return pr(()=>{if(s){for(const n of e)s.onComponentDestroy(n);e.clear()}}),Object.assign(t,i)};new D;new D;new D;new ge;var HT=Object.defineProperty,WT=(s,e,t)=>e in s?HT(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,Xt=(s,e,t)=>WT(s,typeof e!="symbol"?e+"":e,t);const Vv=(s,e)=>{const[t,i]=e.split("-");return Object.assign(s.style,{left:i==="left"?"0":i==="center"?"50%":"",right:i==="right"?"0":"",top:t==="top"?"0":t==="bottom"?"":"50%",bottom:t==="bottom"?"0":"",transform:`${i==="center"?"translateX(-50%)":""} ${t==="center"?"translateY(-50%)":""}`}),e},XT=({placement:s,size:e,offset:t,id:i,className:n})=>{const r=document.createElement("div"),{top:o,left:a,right:l,bottom:c}=t;return Object.assign(r.style,{id:i,position:"absolute",zIndex:"1000",height:`${e}px`,width:`${e}px`,margin:`${o}px ${l}px ${c}px ${a}px`,borderRadius:"100%"}),Vv(r,s),i&&(r.id=i),n&&(r.className=n),r},YT=s=>{const e=typeof s=="string"?document.querySelector(s):s;if(!e)throw Error("Invalid DOM element");return e};function Rd(s,e,t){return Math.max(e,Math.min(t,s))}const qT=[["x",0,3],["y",1,4],["z",2,5]],Hm=new D;function Wm({isSphere:s},e,t){s&&(Hm.set(0,0,1).applyQuaternion(t.quaternion),qT.forEach(([i,n,r])=>{const o=Hm[i];let a=e[n],l=a.userData.opacity;a.material.opacity=Rd(o>=0?l:l/2,0,1),a=e[r],l=a.userData.opacity,a.material.opacity=Rd(o>=0?l/2:l,0,1)}))}const jT=(s,e,t=10)=>Math.abs(s.clientX-e.x)<t&&Math.abs(s.clientY-e.y)<t,Xm=new jh,Ym=new ge,qm=(s,e,t,i)=>{Ym.set((s.clientX-e.left)/e.width*2-1,-((s.clientY-e.top)/e.height)*2+1),Xm.setFromCamera(Ym,t);const n=Xm.intersectObjects(i,!1),r=n.length?n[0]:null;return!r||!r.object.visible?null:r},Qu=1e-6,ZT=2*Math.PI,Hv=["x","y","z"],Ga=[...Hv,"nx","ny","nz"],KT=["x","z","y","nx","nz","ny"],JT=["z","x","y","nz","nx","ny"],Pd="Right",yc="Top",Id="Front",Dd="Left",xc="Bottom",Ud="Back",QT=[Pd,yc,Id,Dd,xc,Ud].map(s=>s.toLocaleLowerCase()),Wv=1.3,jm=(s,e=!0)=>{const{material:t,userData:i}=s,{color:n,opacity:r}=e?i.hover:i;t.color.set(n),t.opacity=r},xs=s=>JSON.parse(JSON.stringify(s)),$T=s=>{const e=s.type||"sphere",t=e==="sphere",i=s.resolution||t?64:128,n=Ut.DEFAULT_UP,r=n.z===1,o=n.x===1,{container:a}=s;s.container=void 0,s=JSON.parse(JSON.stringify(s)),s.container=a;const l=r?KT:o?JT:Ga;QT.forEach((d,f)=>{s[d]&&(s[l[f]]=s[d])});const c={enabled:!0,color:16777215,opacity:1,scale:.7,labelColor:2236962,line:!1,border:{size:0,color:14540253},hover:{color:t?16777215:9688043,labelColor:2236962,opacity:1,scale:.7,border:{size:0,color:14540253}}},h={line:!1,scale:t?.45:.7,hover:{scale:t?.5:.7}},u={type:e,container:document.body,size:128,placement:"top-right",resolution:i,lineWidth:4,radius:t?1:.2,smoothness:18,animated:!0,speed:1,background:{enabled:!0,color:t?16777215:14739180,opacity:t?0:1,hover:{color:t?16777215:14739180,opacity:t?.2:1}},font:{family:"sans-serif",weight:900},offset:{top:10,left:10,bottom:10,right:10},corners:{enabled:!t,color:t?15915362:16777215,opacity:1,scale:t?.15:.2,radius:1,smoothness:18,hover:{color:t?16777215:9688043,opacity:1,scale:t?.2:.225}},edges:{enabled:!t,color:t?15915362:16777215,opacity:t?1:0,radius:t?1:.125,smoothness:18,scale:t?.15:1,hover:{color:t?16777215:9688043,opacity:1,scale:t?.2:1}},x:{...xs(c),...t?{label:"X",color:16725587,line:!0}:{label:o?yc:Pd}},y:{...xs(c),...t?{label:"Y",color:9100032,line:!0}:{label:r||o?Id:yc}},z:{...xs(c),...t?{label:"Z",color:2920447,line:!0}:{label:r?yc:o?Pd:Id}},nx:{...xs(h),label:t?"":o?xc:Dd},ny:{...xs(h),label:t?"":r||o?Ud:xc},nz:{...xs(h),label:t?"":r?xc:o?Dd:Ud}};return Ld(s,u),Hv.forEach(d=>Ld(s[`n${d}`],xs(s[d]))),{...s,isSphere:t}};function Ld(s,...e){if(s instanceof HTMLElement||typeof s!="object"||s===null)return s;for(const t of e)for(const i in t)i!=="container"&&i in t&&(s[i]===void 0?s[i]=t[i]:typeof t[i]=="object"&&!Array.isArray(t[i])&&(s[i]=Ld(s[i]||{},t[i])));return s}const eA=(s,e=2)=>{const t=new Be,i=e*2,{isSphere:n,resolution:r,radius:o,font:a,corners:l,edges:c}=s,h=Ga.map(M=>({...s[M],radius:o}));n&&l.enabled&&h.push(l),n&&c.enabled&&h.push(c);const u=document.createElement("canvas"),d=u.getContext("2d");u.width=r*2+i*2,u.height=r*h.length+i*h.length;const[f,p]=E(h,r,a);h.forEach(({radius:M,label:T,color:S,labelColor:b,border:U,hover:{color:I,labelColor:B,border:G}},j)=>{const N=r*j+j*i+e;_(e,N,e,r,M,T,U,S,b),_(r+e*3,N,e,r,M,T,G??U,I??S,B??b)});const v=h.length,m=e/(r*2),g=e/(r*6),y=1/v,x=new H0(u);return x.repeat.set(.5-2*m,y-2*g),x.offset.set(m,1-g),Object.assign(x,{colorSpace:on,wrapS:ji,wrapT:ji,userData:{offsetX:m,offsetY:g,cellHeight:y}}),x;function _(M,T,S,b,U,I,B,G,j){if(U=U*(b/2),G!=null&&G!==""&&(N(),d.fillStyle=t.set(G).getStyle(),d.fill()),B&&B.size){const ee=B.size*b/2;M+=ee,T+=ee,b-=B.size*b,U=Math.max(0,U-ee),N(),d.strokeStyle=t.set(B.color).getStyle(),d.lineWidth=B.size*b,d.stroke()}I&&w(d,M+b/2,T+(b+S)/2,I,t.set(j).getStyle());function N(){d.beginPath(),d.moveTo(M+U,T),d.lineTo(M+b-U,T),d.arcTo(M+b,T,M+b,T+U,U),d.lineTo(M+b,T+b-U),d.arcTo(M+b,T+b,M+b-U,T+b,U),d.lineTo(M+U,T+b),d.arcTo(M,T+b,M,T+b-U,U),d.lineTo(M,T+U),d.arcTo(M,T,M+U,T,U),d.closePath()}}function E(M,T,S){const b=[...M].sort((Q,z)=>{var J,$;return(((J=Q.label)==null?void 0:J.length)||0)-((($=z.label)==null?void 0:$.length)||0)}).pop().label,{family:U,weight:I}=S,B=n?Math.sqrt(Math.pow(T*.7,2)/2):T;let G=B,j=0,N=0;do{d.font=`${I} ${G}px ${U}`;const Q=d.measureText(b);j=Q.width,N=Q.fontBoundingBoxDescent,G--}while(j>B&&G>0);const ee=B/N,W=Math.min(B/j,ee),Y=Math.floor(G*W);return[`${I} ${Y}px ${U}`,ee]}function w(M,T,S,b,U){M.font=f,M.textAlign="center",M.textBaseline="middle",M.fillStyle=U,M.fillText(b,T,S+(n?p:0))}},tA=(s,e)=>s.offset.x=(e?.5:0)+s.userData.offsetX,Vf=(s,e)=>{const{offset:t,userData:{offsetY:i,cellHeight:n}}=s;t.y=1-(e+1)*n+i};function Hf(s,e,t=2,i=2){const n=t/2-s,r=i/2-s,o=s/t,a=(t-s)/t,l=s/i,c=(i-s)/i,h=[n,r,0,-n,r,0,-n,-r,0,n,-r,0],u=[a,c,o,c,o,l,a,l],d=[3*(e+1)+3,3*(e+1)+4,e+4,e+5,2*(e+1)+4,2,1,2*(e+1)+3,3,4*(e+1)+3,4,0],f=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11].map(w=>d[w]);let p,v,m,g,y,x,_,E;for(let w=0;w<4;w++){g=w<1||w>2?n:-n,y=w<2?r:-r,x=w<1||w>2?a:o,_=w<2?c:l;for(let M=0;M<=e;M++)p=Math.PI/2*(w+M/e),v=Math.cos(p),m=Math.sin(p),h.push(g+s*v,y+s*m,0),u.push(x+o*v,_+l*m),M<e&&(E=(e+1)*w+M+4,f.push(w,E,E+1))}return new _t().setIndex(new Tt(new Uint32Array(f),1)).setAttribute("position",new Tt(new Float32Array(h),3)).setAttribute("uv",new Tt(new Float32Array(u),2))}const nA=(s,e)=>{const t=new D,{isSphere:i,radius:n,smoothness:r}=s,o=Hf(n,r);return Ga.map((a,l)=>{const c=l<3,h=Ga[l],u=l?e.clone():e;Vf(u,l);const{enabled:d,scale:f,opacity:p,hover:v}=s[h],m={map:u,opacity:p,transparent:!0},g=i?new el(new No(m)):new Ne(o,new Ln(m)),y=c?h:h[1];return g.position[y]=(c?1:-1)*(i?Wv:1),i||g.lookAt(t.copy(g.position).multiplyScalar(1.7)),g.scale.setScalar(f),g.renderOrder=1,g.visible=d,g.userData={scale:f,opacity:p,hover:v},g})},iA=(s,e)=>{const{isSphere:t,corners:i}=s;if(!i.enabled)return[];const{color:n,opacity:r,scale:o,radius:a,smoothness:l,hover:c}=i,h=t?null:Hf(a,l),u={transparent:!0,opacity:r},d=[1,1,1,-1,1,1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,-1,-1,-1,-1,-1].map(p=>p*.85),f=new D;return Array(d.length/3).fill(0).map((p,v)=>{if(t){const y=e.clone();Vf(y,6),u.map=y}else u.color=n;const m=t?new el(new No(u)):new Ne(h,new Ln(u)),g=v*3;return m.position.set(d[g],d[g+1],d[g+2]),t&&m.position.normalize().multiplyScalar(1.7),m.scale.setScalar(o),m.lookAt(f.copy(m.position).multiplyScalar(2)),m.renderOrder=1,m.userData={color:n,opacity:r,scale:o,hover:c},m})},rA=(s,e,t)=>{const{isSphere:i,edges:n}=s;if(!n.enabled)return[];const{color:r,opacity:o,scale:a,hover:l,radius:c,smoothness:h}=n,u=i?null:Hf(c,h,1.2,.25),d={transparent:!0,opacity:o},f=[0,1,1,0,-1,1,1,0,1,-1,0,1,0,1,-1,0,-1,-1,1,0,-1,-1,0,-1,1,1,0,1,-1,0,-1,1,0,-1,-1,0].map(m=>m*.925),p=new D,v=new D(0,1,0);return Array(f.length/3).fill(0).map((m,g)=>{if(i){const _=e.clone();Vf(_,t),d.map=_}else d.color=r;const y=i?new el(new No(d)):new Ne(u,new Ln(d)),x=g*3;return y.position.set(f[x],f[x+1],f[x+2]),i&&y.position.normalize().multiplyScalar(1.7),y.scale.setScalar(a),y.up.copy(v),y.lookAt(p.copy(y.position).multiplyScalar(2)),!i&&!y.position.y&&(y.rotation.z=Math.PI/2),y.renderOrder=1,y.userData={color:r,opacity:o,scale:a,hover:l},y})};function sA(s,e=!1){const t=s[0].index!==null,i=new Set(Object.keys(s[0].attributes)),n=new Set(Object.keys(s[0].morphAttributes)),r={},o={},a=s[0].morphTargetsRelative,l=new _t;let c=0;for(let h=0;h<s.length;++h){const u=s[h];let d=0;if(t!==(u.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const f in u.attributes){if(!i.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+'. All geometries must have compatible attributes; make sure "'+f+'" attribute exists among all geometries, or in none of them.'),null;r[f]===void 0&&(r[f]=[]),r[f].push(u.attributes[f]),d++}if(d!==i.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". Make sure all geometries have the same number of attributes."),null;if(a!==u.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const f in u.morphAttributes){if(!n.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+".  .morphAttributes must be consistent throughout all geometries."),null;o[f]===void 0&&(o[f]=[]),o[f].push(u.morphAttributes[f])}if(e){let f;if(t)f=u.index.count;else if(u.attributes.position!==void 0)f=u.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". The geometry must have either an index or a position attribute"),null;l.addGroup(c,f,h),c+=f}}if(t){let h=0;const u=[];for(let d=0;d<s.length;++d){const f=s[d].index;for(let p=0;p<f.count;++p)u.push(f.getX(p)+h);h+=s[d].attributes.position.count}l.setIndex(u)}for(const h in r){const u=Zm(r[h]);if(!u)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" attribute."),null;l.setAttribute(h,u)}for(const h in o){const u=o[h][0].length;if(u===0)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[h]=[];for(let d=0;d<u;++d){const f=[];for(let v=0;v<o[h].length;++v)f.push(o[h][v][d]);const p=Zm(f);if(!p)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" morphAttribute."),null;l.morphAttributes[h].push(p)}}return l}function Zm(s){let e,t,i,n=-1,r=0;for(let c=0;c<s.length;++c){const h=s[c];if(e===void 0&&(e=h.array.constructor),e!==h.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(t===void 0&&(t=h.itemSize),t!==h.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(i===void 0&&(i=h.normalized),i!==h.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(n===-1&&(n=h.gpuType),n!==h.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;r+=h.count*t}const o=new e(r),a=new Tt(o,t,i);let l=0;for(let c=0;c<s.length;++c){const h=s[c];if(h.isInterleavedBufferAttribute){const u=l/t;for(let d=0,f=h.count;d<f;d++)for(let p=0;p<t;p++){const v=h.getComponent(d,p);a.setComponent(d+u,p,v)}}else o.set(h.array,l);l+=h.count*t}return n!==void 0&&(a.gpuType=n),a}const oA=(s,e)=>{const{isSphere:t,background:{enabled:i,color:n,opacity:r,hover:o}}=e;let a;const l=new Ln({color:n,side:ti,opacity:r,transparent:!0,depthWrite:!1});if(!i)return null;if(t)a=new Ne(new qs(1.8,64,64),l);else{let c;s.forEach(h=>{const u=h.scale.x;h.scale.setScalar(.9),h.updateMatrix();const d=h.geometry.clone();d.applyMatrix4(h.matrix),c=c?sA([c,d]):d,h.scale.setScalar(u)}),a=new Ne(c,l)}return a.userData={color:n,opacity:r,hover:o},a},Km=new Sn,ec=new D;let Xv=class extends qh{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";const e=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],t=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],i=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(i),this.setAttribute("position",new je(e,3)),this.setAttribute("uv",new je(t,2))}applyMatrix4(e){const t=this.attributes.instanceStart,i=this.attributes.instanceEnd;return t!==void 0&&(t.applyMatrix4(e),i.applyMatrix4(e),t.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new dh(t,6,1);return this.setAttribute("instanceStart",new Ii(i,3,0)),this.setAttribute("instanceEnd",new Ii(i,3,3)),this.instanceCount=this.attributes.instanceStart.count,this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new dh(t,6,1);return this.setAttribute("instanceColorStart",new Ii(i,3,0)),this.setAttribute("instanceColorEnd",new Ii(i,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new vf(e.geometry)),this}fromLineSegments(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Sn);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;e!==void 0&&t!==void 0&&(this.boundingBox.setFromBufferAttribute(e),Km.setFromBufferAttribute(t),this.boundingBox.union(Km))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Tn),this.boundingBox===null&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(e!==void 0&&t!==void 0){const i=this.boundingSphere.center;this.boundingBox.getCenter(i);let n=0;for(let r=0,o=e.count;r<o;r++)ec.fromBufferAttribute(e,r),n=Math.max(n,i.distanceToSquared(ec)),ec.fromBufferAttribute(t,r),n=Math.max(n,i.distanceToSquared(ec));this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}};Ye.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new ge(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}};ai.line={uniforms:Ja.merge([Ye.common,Ye.fog,Ye.line]),vertexShader:`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
				vUv = uv;

			#endif

			float aspect = resolution.x / resolution.y;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			#ifdef WORLD_UNITS

				worldStart = start.xyz;
				worldEnd = end.xyz;

			#else

				vUv = uv;

			#endif

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );
				vec3 worldUp = normalize( cross( worldDir, tmpFwd ) );
				vec3 worldFwd = cross( worldDir, worldUp );
				worldPos = position.y < 0.5 ? start: end;

				// height offset
				float hw = linewidth * 0.5;
				worldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// cap extension
					worldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;

					// add width to the box
					worldPos.xyz += worldFwd * hw;

					// endcaps
					if ( position.y > 1.0 || position.y < 0.0 ) {

						worldPos.xyz -= worldFwd * 2.0 * hw;

					}

				#endif

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segments overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

				vec2 offset = vec2( dir.y, - dir.x );
				// undo aspect ratio adjustment
				dir.x /= aspect;
				offset.x /= aspect;

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				// endcaps
				if ( position.y < 0.0 ) {

					offset += - dir;

				} else if ( position.y > 1.0 ) {

					offset += dir;

				}

				// adjust for linewidth
				offset *= linewidth;

				// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
				offset /= resolution.y;

				// select end
				vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

				// back to clip space
				offset *= clip.w;

				clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef USE_ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

				#endif

			#else

				#ifdef USE_ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

					if ( abs( vUv.y ) > 1.0 ) {

						float a = vUv.x;
						float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
						float len2 = a * a + b * b;

						if ( len2 > 1.0 ) discard;

					}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};let Wf=class extends Si{constructor(e){super({type:"LineMaterial",uniforms:Ja.clone(ai.line.uniforms),vertexShader:ai.line.vertexShader,fragmentShader:ai.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,this.setValues(e)}get color(){return this.uniforms.diffuse.value}set color(e){this.uniforms.diffuse.value=e}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(e){e===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(e){this.uniforms.linewidth&&(this.uniforms.linewidth.value=e)}get dashed(){return"USE_DASH"in this.defines}set dashed(e){e===!0!==this.dashed&&(this.needsUpdate=!0),e===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(e){this.uniforms.dashScale.value=e}get dashSize(){return this.uniforms.dashSize.value}set dashSize(e){this.uniforms.dashSize.value=e}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(e){this.uniforms.dashOffset.value=e}get gapSize(){return this.uniforms.gapSize.value}set gapSize(e){this.uniforms.gapSize.value=e}get opacity(){return this.uniforms.opacity.value}set opacity(e){this.uniforms&&(this.uniforms.opacity.value=e)}get resolution(){return this.uniforms.resolution.value}set resolution(e){this.uniforms.resolution.value.copy(e)}get alphaToCoverage(){return"USE_ALPHA_TO_COVERAGE"in this.defines}set alphaToCoverage(e){this.defines&&(e===!0!==this.alphaToCoverage&&(this.needsUpdate=!0),e===!0?this.defines.USE_ALPHA_TO_COVERAGE="":delete this.defines.USE_ALPHA_TO_COVERAGE)}};const $u=new Rt,Jm=new D,Qm=new D,Fn=new Rt,kn=new Rt,tr=new Rt,ed=new D,td=new rt,zn=new Mv,$m=new D,tc=new Sn,nc=new Tn,nr=new Rt;let ar,Fs;function eg(s,e,t){return nr.set(0,0,-e,1).applyMatrix4(s.projectionMatrix),nr.multiplyScalar(1/nr.w),nr.x=Fs/t.width,nr.y=Fs/t.height,nr.applyMatrix4(s.projectionMatrixInverse),nr.multiplyScalar(1/nr.w),Math.abs(Math.max(nr.x,nr.y))}function aA(s,e){const t=s.matrixWorld,i=s.geometry,n=i.attributes.instanceStart,r=i.attributes.instanceEnd,o=Math.min(i.instanceCount,n.count);for(let a=0,l=o;a<l;a++){zn.start.fromBufferAttribute(n,a),zn.end.fromBufferAttribute(r,a),zn.applyMatrix4(t);const c=new D,h=new D;ar.distanceSqToSegment(zn.start,zn.end,h,c),h.distanceTo(c)<Fs*.5&&e.push({point:h,pointOnLine:c,distance:ar.origin.distanceTo(h),object:s,face:null,faceIndex:a,uv:null,uv1:null})}}function lA(s,e,t){const i=e.projectionMatrix,n=s.material.resolution,r=s.matrixWorld,o=s.geometry,a=o.attributes.instanceStart,l=o.attributes.instanceEnd,c=Math.min(o.instanceCount,a.count),h=-e.near;ar.at(1,tr),tr.w=1,tr.applyMatrix4(e.matrixWorldInverse),tr.applyMatrix4(i),tr.multiplyScalar(1/tr.w),tr.x*=n.x/2,tr.y*=n.y/2,tr.z=0,ed.copy(tr),td.multiplyMatrices(e.matrixWorldInverse,r);for(let u=0,d=c;u<d;u++){if(Fn.fromBufferAttribute(a,u),kn.fromBufferAttribute(l,u),Fn.w=1,kn.w=1,Fn.applyMatrix4(td),kn.applyMatrix4(td),Fn.z>h&&kn.z>h)continue;if(Fn.z>h){const g=Fn.z-kn.z,y=(Fn.z-h)/g;Fn.lerp(kn,y)}else if(kn.z>h){const g=kn.z-Fn.z,y=(kn.z-h)/g;kn.lerp(Fn,y)}Fn.applyMatrix4(i),kn.applyMatrix4(i),Fn.multiplyScalar(1/Fn.w),kn.multiplyScalar(1/kn.w),Fn.x*=n.x/2,Fn.y*=n.y/2,kn.x*=n.x/2,kn.y*=n.y/2,zn.start.copy(Fn),zn.start.z=0,zn.end.copy(kn),zn.end.z=0;const f=zn.closestPointToPointParameter(ed,!0);zn.at(f,$m);const p=or.lerp(Fn.z,kn.z,f),v=p>=-1&&p<=1,m=ed.distanceTo($m)<Fs*.5;if(v&&m){zn.start.fromBufferAttribute(a,u),zn.end.fromBufferAttribute(l,u),zn.start.applyMatrix4(r),zn.end.applyMatrix4(r);const g=new D,y=new D;ar.distanceSqToSegment(zn.start,zn.end,y,g),t.push({point:y,pointOnLine:g,distance:ar.origin.distanceTo(y),object:s,face:null,faceIndex:u,uv:null,uv1:null})}}}class cA extends Ne{constructor(e=new Xv,t=new Wf({color:Math.random()*16777215})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,i=e.attributes.instanceEnd,n=new Float32Array(2*t.count);for(let o=0,a=0,l=t.count;o<l;o++,a+=2)Jm.fromBufferAttribute(t,o),Qm.fromBufferAttribute(i,o),n[a]=a===0?0:n[a-1],n[a+1]=n[a]+Jm.distanceTo(Qm);const r=new dh(n,2,1);return e.setAttribute("instanceDistanceStart",new Ii(r,1,0)),e.setAttribute("instanceDistanceEnd",new Ii(r,1,1)),this}raycast(e,t){const i=this.material.worldUnits,n=e.camera;n===null&&!i&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const r=e.params.Line2!==void 0&&e.params.Line2.threshold||0;ar=e.ray;const o=this.matrixWorld,a=this.geometry,l=this.material;Fs=l.linewidth+r,a.boundingSphere===null&&a.computeBoundingSphere(),nc.copy(a.boundingSphere).applyMatrix4(o);let c;if(i)c=Fs*.5;else{const u=Math.max(n.near,nc.distanceToPoint(ar.origin));c=eg(n,u,l.resolution)}if(nc.radius+=c,ar.intersectsSphere(nc)===!1)return;a.boundingBox===null&&a.computeBoundingBox(),tc.copy(a.boundingBox).applyMatrix4(o);let h;if(i)h=Fs*.5;else{const u=Math.max(n.near,tc.distanceToPoint(ar.origin));h=eg(n,u,l.resolution)}tc.expandByScalar(h),ar.intersectsBox(tc)!==!1&&(i?aA(this,t):lA(this,n,t))}onBeforeRender(e){const t=this.material.uniforms;t&&t.resolution&&(e.getViewport($u),this.material.uniforms.resolution.value.set($u.z,$u.w))}}class Yv extends Xv{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){const t=e.length-3,i=new Float32Array(2*t);for(let n=0;n<t;n+=3)i[2*n]=e[n],i[2*n+1]=e[n+1],i[2*n+2]=e[n+2],i[2*n+3]=e[n+3],i[2*n+4]=e[n+4],i[2*n+5]=e[n+5];return super.setPositions(i),this}setColors(e){const t=e.length-3,i=new Float32Array(2*t);for(let n=0;n<t;n+=3)i[2*n]=e[n],i[2*n+1]=e[n+1],i[2*n+2]=e[n+2],i[2*n+3]=e[n+3],i[2*n+4]=e[n+4],i[2*n+5]=e[n+5];return super.setColors(i),this}setFromPoints(e){const t=e.length-1,i=new Float32Array(6*t);for(let n=0;n<t;n++)i[6*n]=e[n].x,i[6*n+1]=e[n].y,i[6*n+2]=e[n].z||0,i[6*n+3]=e[n+1].x,i[6*n+4]=e[n+1].y,i[6*n+5]=e[n+1].z||0;return super.setPositions(i),this}fromLine(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}}class hA extends cA{constructor(e=new Yv,t=new Wf({color:Math.random()*16777215})){super(e,t),this.isLine2=!0,this.type="Line2"}}const uA=s=>{const e=new Be,t=[],i=[],{isSphere:n}=s;if(Ga.forEach((a,l)=>{const{enabled:c,line:h,scale:u,color:d}=s[a];if(!c||!h)return;const f=l<3?1:-1,p=(n?Wv-u/2:.975)*f;t.push(a.includes("x")?p:0,a.includes("y")?p:0,a.includes("z")?p:0,0,0,0);const v=e.set(d).toArray();i.push(...v,...v)}),!t.length)return null;const r=new Yv().setPositions(t).setColors(i),o=new Wf({linewidth:s.lineWidth,vertexColors:!0,resolution:new ge(window.innerWidth,window.innerHeight)});return new hA(r,o).computeLineDistances()},dA=s=>{const{corners:e,edges:t}=s,i=[],n=eA(s),r=nA(s,n);i.push(...r),e.enabled&&i.push(...iA(s,n)),t.enabled&&i.push(...rA(s,n,e.enabled?7:6));const o=oA(r,s),a=uA(s);return[i,o,a]},ta=(s,e=!0)=>{const{material:t,userData:i}=s,{opacity:n,color:r,scale:o}=e?i.hover:i;s.scale.setScalar(o),t.opacity=n,t.map?tA(t.map,e):t.color.set(r)},_o=new rt,tg=new fh,fA=new ge,bs=new D,ng=new Rt;class ig extends Ut{constructor(e,t,i={}){super(),Xt(this,"enabled",!0),Xt(this,"camera"),Xt(this,"renderer"),Xt(this,"options"),Xt(this,"target",new D),Xt(this,"animated",!0),Xt(this,"speed",1),Xt(this,"animating",!1),Xt(this,"_options"),Xt(this,"_intersections"),Xt(this,"_background",null),Xt(this,"_viewport",[0,0,0,0]),Xt(this,"_originalViewport",[0,0,0,0]),Xt(this,"_originalScissor",[0,0,0,0]),Xt(this,"_scene"),Xt(this,"_camera"),Xt(this,"_container"),Xt(this,"_domElement"),Xt(this,"_domRect"),Xt(this,"_dragging",!1),Xt(this,"_distance",0),Xt(this,"_clock",new Pf),Xt(this,"_targetQuaternion",new Gt),Xt(this,"_quaternionStart",new Gt),Xt(this,"_quaternionEnd",new Gt),Xt(this,"_pointerStart",new ge),Xt(this,"_focus",null),Xt(this,"_placement"),Xt(this,"_controls"),Xt(this,"_controlsListeners"),this.camera=e,this.renderer=t,this._scene=new $a().add(this),this.set(i)}get placement(){return this._placement}set placement(e){this._placement=Vv(this._domElement,e),this.domUpdate()}set(e={}){this.dispose(),this.options=e,this._options=$T(e),this._camera=this._options.isSphere?new ts(-1.8,1.8,1.8,-1.8,5,10):new xn(26,1,5,10),this._camera.position.set(0,0,7);const[t,i,n]=dA(this._options);i&&this.add(i),n&&this.add(n),this.add(...t),this._background=i,this._intersections=t;const{container:r,animated:o,speed:a}=this._options;return this.animated=o,this.speed=a,this._container=r?YT(r):document.body,this._domElement=XT(this._options),this._domElement.onpointerdown=l=>this._onPointerDown(l),this._domElement.onpointermove=l=>this._onPointerMove(l),this._domElement.onpointerleave=()=>this._onPointerLeave(),this._container.appendChild(this._domElement),this._controls&&this.attachControls(this._controls),this.update(),this._updateOrientation(!0),this}render(){this.animating&&this._animate();const{renderer:e,_viewport:t}=this,i=e.getScissorTest(),n=e.autoClear;return e.autoClear=!1,e.setViewport(...t),i&&e.setScissor(...t),e.clear(!1,!0,!1),e.render(this._scene,this._camera),e.setViewport(...this._originalViewport),i&&e.setScissor(...this._originalScissor),e.autoClear=n,this}domUpdate(){this._domRect=this._domElement.getBoundingClientRect();const e=this.renderer,t=this._domRect,i=e.domElement.getBoundingClientRect();return this._viewport.splice(0,4,t.left-i.left,e.domElement.clientHeight-(t.top-i.top+t.height),t.width,t.height),e.getViewport(ng).toArray(this._originalViewport),e.getScissorTest()&&e.getScissor(ng).toArray(this._originalScissor),this}cameraUpdate(){return this._updateOrientation(),this}update(e=!0){return e&&this._controls&&this._controls.update(),this.domUpdate().cameraUpdate()}attachControls(e){return this.detachControls(),this.target=e.target,this._controlsListeners={start:()=>e.enabled=!1,end:()=>e.enabled=!0,change:()=>this.update(!1)},this.addEventListener("start",this._controlsListeners.start),this.addEventListener("end",this._controlsListeners.end),e.addEventListener("change",this._controlsListeners.change),this._controls=e,this}detachControls(){if(!(!this._controlsListeners||!this._controls))return this.target=new D().copy(this._controls.target),this.removeEventListener("start",this._controlsListeners.start),this.removeEventListener("end",this._controlsListeners.end),this._controls.removeEventListener("change",this._controlsListeners.change),this._controlsListeners=void 0,this._controls=void 0,this}dispose(){var e;this.detachControls(),this.children.forEach(t=>{var i,n,r,o;this.remove(t);const a=t;(i=a.material)==null||i.dispose(),(r=(n=a.material)==null?void 0:n.map)==null||r.dispose(),(o=a.geometry)==null||o.dispose()}),(e=this._domElement)==null||e.remove()}_updateOrientation(e=!0){e&&(this.quaternion.copy(this.camera.quaternion).invert(),this.updateMatrixWorld()),Wm(this._options,this._intersections,this.camera)}_animate(){const{position:e,quaternion:t}=this.camera;if(e.set(0,0,1),!this.animated){e.applyQuaternion(this._quaternionEnd).multiplyScalar(this._distance).add(this.target),t.copy(this._targetQuaternion),this._updateOrientation(),this.animating=!1,this.dispatchEvent({type:"change"}),this.dispatchEvent({type:"end"});return}this._controls&&(this._controls.enabled=!1);const i=this._clock.getDelta()*ZT*this.speed;this._quaternionStart.rotateTowards(this._quaternionEnd,i),e.applyQuaternion(this._quaternionStart).multiplyScalar(this._distance).add(this.target),t.rotateTowards(this._targetQuaternion,i),this._updateOrientation(),requestAnimationFrame(()=>this.dispatchEvent({type:"change"})),this._quaternionStart.angleTo(this._quaternionEnd)<Qu&&(this._controls&&(this._controls.enabled=!0),this.animating=!1,this.dispatchEvent({type:"end"}))}_setOrientation(e){const t=this.camera,i=this.target;bs.copy(e).multiplyScalar(this._distance),_o.setPosition(bs).lookAt(bs,this.position,this.up),this._targetQuaternion.setFromRotationMatrix(_o),bs.add(i),_o.lookAt(bs,i,this.up),this._quaternionEnd.setFromRotationMatrix(_o),_o.setPosition(t.position).lookAt(t.position,i,this.up),this._quaternionStart.setFromRotationMatrix(_o),this.animating=!0,this._clock.start(),this.dispatchEvent({type:"start"})}_onPointerDown(e){if(!this.enabled)return;const t=l=>{if(!this._dragging){if(jT(l,this._pointerStart))return;this._dragging=!0}const c=fA.set(l.clientX,l.clientY).sub(this._pointerStart).multiplyScalar(1/this._domRect.width*Math.PI),h=this.coordinateConversion(bs.subVectors(this.camera.position,this.target)),u=tg.setFromVector3(h);u.theta=o-c.x,u.phi=Rd(a-c.y,Qu,Math.PI-Qu),this.coordinateConversion(this.camera.position.setFromSpherical(u),!0).add(this.target),this.camera.lookAt(this.target),this.quaternion.copy(this.camera.quaternion).invert(),this._updateOrientation(!1),this.dispatchEvent({type:"change"})},i=()=>{if(document.removeEventListener("pointermove",t,!1),document.removeEventListener("pointerup",i,!1),!this._dragging)return this._handleClick(e);this._focus&&(ta(this._focus,!1),this._focus=null),this._dragging=!1,this.dispatchEvent({type:"end"})};if(this.animating)return;e.preventDefault(),this._pointerStart.set(e.clientX,e.clientY);const n=this.coordinateConversion(bs.subVectors(this.camera.position,this.target)),r=tg.setFromVector3(n),o=r.theta,a=r.phi;this._distance=r.radius,document.addEventListener("pointermove",t,!1),document.addEventListener("pointerup",i,!1),this.dispatchEvent({type:"start"})}coordinateConversion(e,t=!1){const{x:i,y:n,z:r}=e,o=Ut.DEFAULT_UP;return o.x===1?t?e.set(n,r,i):e.set(r,i,n):o.z===1?t?e.set(r,i,n):e.set(n,r,i):e}_onPointerMove(e){!this.enabled||this._dragging||(this._background&&jm(this._background,!0),this._handleHover(e))}_onPointerLeave(){!this.enabled||this._dragging||(this._background&&jm(this._background,!1),this._focus&&ta(this._focus,!1),this._domElement.style.cursor="")}_handleClick(e){const t=qm(e,this._domRect,this._camera,this._intersections);this._focus&&(ta(this._focus,!1),this._focus=null),t&&(this._setOrientation(t.object.position),this.dispatchEvent({type:"change"}))}_handleHover(e){const t=qm(e,this._domRect,this._camera,this._intersections),i=(t==null?void 0:t.object)||null;this._focus!==i&&(this._domElement.style.cursor=i?"pointer":"",this._focus&&ta(this._focus,!1),(this._focus=i)?ta(i,!0):Wm(this._options,this._intersections,this.camera))}}const rg={type:"change"},Xf={type:"start"},qv={type:"end"},ic=new Qr,sg=new sr,pA=Math.cos(70*or.DEG2RAD),An=new D,pi=2*Math.PI,Jt={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},nd=1e-6;let jv=class extends Zh{constructor(e,t=null){super(e,t),this.state=Jt.NONE,this.target=new D,this.cursor=new D,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Di.ROTATE,MIDDLE:Di.DOLLY,RIGHT:Di.PAN},this.touches={ONE:Rs.ROTATE,TWO:Rs.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new D,this._lastQuaternion=new Gt,this._lastTargetPosition=new D,this._quat=new Gt().setFromUnitVectors(e.up,new D(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new fh,this._sphericalDelta=new fh,this._scale=1,this._panOffset=new D,this._rotateStart=new ge,this._rotateEnd=new ge,this._rotateDelta=new ge,this._panStart=new ge,this._panEnd=new ge,this._panDelta=new ge,this._dollyStart=new ge,this._dollyEnd=new ge,this._dollyDelta=new ge,this._dollyDirection=new D,this._mouse=new ge,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=gA.bind(this),this._onPointerDown=mA.bind(this),this._onPointerUp=vA.bind(this),this._onContextMenu=wA.bind(this),this._onMouseWheel=xA.bind(this),this._onKeyDown=bA.bind(this),this._onTouchStart=SA.bind(this),this._onTouchMove=MA.bind(this),this._onMouseDown=_A.bind(this),this._onMouseMove=yA.bind(this),this._interceptControlDown=EA.bind(this),this._interceptControlUp=TA.bind(this),this.domElement!==null&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(rg),this.update(),this.state=Jt.NONE}update(e=null){const t=this.object.position;An.copy(t).sub(this.target),An.applyQuaternion(this._quat),this._spherical.setFromVector3(An),this.autoRotate&&this.state===Jt.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let i=this.minAzimuthAngle,n=this.maxAzimuthAngle;isFinite(i)&&isFinite(n)&&(i<-Math.PI?i+=pi:i>Math.PI&&(i-=pi),n<-Math.PI?n+=pi:n>Math.PI&&(n-=pi),i<=n?this._spherical.theta=Math.max(i,Math.min(n,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(i+n)/2?Math.max(i,this._spherical.theta):Math.min(n,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let r=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const o=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),r=o!=this._spherical.radius}if(An.setFromSpherical(this._spherical),An.applyQuaternion(this._quatInverse),t.copy(this.target).add(An),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let o=null;if(this.object.isPerspectiveCamera){const a=An.length();o=this._clampDistance(a*this._scale);const l=a-o;this.object.position.addScaledVector(this._dollyDirection,l),this.object.updateMatrixWorld(),r=!!l}else if(this.object.isOrthographicCamera){const a=new D(this._mouse.x,this._mouse.y,0);a.unproject(this.object);const l=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),r=l!==this.object.zoom;const c=new D(this._mouse.x,this._mouse.y,0);c.unproject(this.object),this.object.position.sub(c).add(a),this.object.updateMatrixWorld(),o=An.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;o!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(o).add(this.object.position):(ic.origin.copy(this.object.position),ic.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(ic.direction))<pA?this.object.lookAt(this.target):(sg.setFromNormalAndCoplanarPoint(this.object.up,this.target),ic.intersectPlane(sg,this.target))))}else if(this.object.isOrthographicCamera){const o=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),o!==this.object.zoom&&(this.object.updateProjectionMatrix(),r=!0)}return this._scale=1,this._performCursorZoom=!1,r||this._lastPosition.distanceToSquared(this.object.position)>nd||8*(1-this._lastQuaternion.dot(this.object.quaternion))>nd||this._lastTargetPosition.distanceToSquared(this.target)>nd?(this.dispatchEvent(rg),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?pi/60*this.autoRotateSpeed*e:pi/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){An.setFromMatrixColumn(t,0),An.multiplyScalar(-e),this._panOffset.add(An)}_panUp(e,t){this.screenSpacePanning===!0?An.setFromMatrixColumn(t,1):(An.setFromMatrixColumn(t,0),An.crossVectors(this.object.up,An)),An.multiplyScalar(e),this._panOffset.add(An)}_pan(e,t){const i=this.domElement;if(this.object.isPerspectiveCamera){const n=this.object.position;An.copy(n).sub(this.target);let r=An.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*r/i.clientHeight,this.object.matrix),this._panUp(2*t*r/i.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/i.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/i.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const i=this.domElement.getBoundingClientRect(),n=e-i.left,r=t-i.top,o=i.width,a=i.height;this._mouse.x=n/o*2-1,this._mouse.y=-(r/a)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(pi*this._rotateDelta.x/t.clientHeight),this._rotateUp(pi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(pi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-pi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(pi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-pi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._rotateStart.set(i,n)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._panStart.set(i,n)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),i=e.pageX-t.x,n=e.pageY-t.y,r=Math.sqrt(i*i+n*n);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const i=this._getSecondPointerPosition(e),n=.5*(e.pageX+i.x),r=.5*(e.pageY+i.y);this._rotateEnd.set(n,r)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(pi*this._rotateDelta.x/t.clientHeight),this._rotateUp(pi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._panEnd.set(i,n)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),i=e.pageX-t.x,n=e.pageY-t.y,r=Math.sqrt(i*i+n*n);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const o=(e.pageX+t.x)*.5,a=(e.pageY+t.y)*.5;this._updateZoomParameters(o,a)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new ge,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,i={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:i.deltaY*=16;break;case 2:i.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(i.deltaY*=10),i}};function mA(s){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(s)&&(this._addPointer(s),s.pointerType==="touch"?this._onTouchStart(s):this._onMouseDown(s)))}function gA(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchMove(s):this._onMouseMove(s))}function vA(s){switch(this._removePointer(s),this._pointers.length){case 0:this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(qv),this.state=Jt.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function _A(s){let e;switch(s.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Di.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(s),this.state=Jt.DOLLY;break;case Di.ROTATE:if(s.ctrlKey||s.metaKey||s.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(s),this.state=Jt.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(s),this.state=Jt.ROTATE}break;case Di.PAN:if(s.ctrlKey||s.metaKey||s.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(s),this.state=Jt.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(s),this.state=Jt.PAN}break;default:this.state=Jt.NONE}this.state!==Jt.NONE&&this.dispatchEvent(Xf)}function yA(s){switch(this.state){case Jt.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(s);break;case Jt.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(s);break;case Jt.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(s);break}}function xA(s){this.enabled===!1||this.enableZoom===!1||this.state!==Jt.NONE||(s.preventDefault(),this.dispatchEvent(Xf),this._handleMouseWheel(this._customWheelEvent(s)),this.dispatchEvent(qv))}function bA(s){this.enabled!==!1&&this._handleKeyDown(s)}function SA(s){switch(this._trackPointer(s),this._pointers.length){case 1:switch(this.touches.ONE){case Rs.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(s),this.state=Jt.TOUCH_ROTATE;break;case Rs.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(s),this.state=Jt.TOUCH_PAN;break;default:this.state=Jt.NONE}break;case 2:switch(this.touches.TWO){case Rs.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(s),this.state=Jt.TOUCH_DOLLY_PAN;break;case Rs.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(s),this.state=Jt.TOUCH_DOLLY_ROTATE;break;default:this.state=Jt.NONE}break;default:this.state=Jt.NONE}this.state!==Jt.NONE&&this.dispatchEvent(Xf)}function MA(s){switch(this._trackPointer(s),this.state){case Jt.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(s),this.update();break;case Jt.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(s),this.update();break;case Jt.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(s),this.update();break;case Jt.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(s),this.update();break;default:this.state=Jt.NONE}}function wA(s){this.enabled!==!1&&s.preventDefault()}function EA(s){s.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function TA(s){s.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const id={type:"change"},Yf={type:"start"},qf={type:"end"},og=1e-6,Vt={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4},rc=new ge,Wr=new ge,AA=new D,sc=new D,rd=new D,yo=new Gt,ag=new D,oc=new D,sd=new D,ac=new D;class CA extends Zh{constructor(e,t=null){super(e,t),this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:Di.ROTATE,MIDDLE:Di.DOLLY,RIGHT:Di.PAN},this.target=new D,this.state=Vt.NONE,this.keyState=Vt.NONE,this._lastPosition=new D,this._lastZoom=1,this._touchZoomDistanceStart=0,this._touchZoomDistanceEnd=0,this._lastAngle=0,this._eye=new D,this._movePrev=new ge,this._moveCurr=new ge,this._lastAxis=new D,this._zoomStart=new ge,this._zoomEnd=new ge,this._panStart=new ge,this._panEnd=new ge,this._pointers=[],this._pointerPositions={},this._onPointerMove=PA.bind(this),this._onPointerDown=RA.bind(this),this._onPointerUp=IA.bind(this),this._onPointerCancel=DA.bind(this),this._onContextMenu=BA.bind(this),this._onMouseWheel=kA.bind(this),this._onKeyDown=LA.bind(this),this._onKeyUp=UA.bind(this),this._onTouchStart=zA.bind(this),this._onTouchMove=GA.bind(this),this._onTouchEnd=VA.bind(this),this._onMouseDown=NA.bind(this),this._onMouseMove=OA.bind(this),this._onMouseUp=FA.bind(this),this._target0=this.target.clone(),this._position0=this.object.position.clone(),this._up0=this.object.up.clone(),this._zoom0=this.object.zoom,t!==null&&(this.connect(t),this.handleResize()),this.update()}connect(e){super.connect(e),window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}handleResize(){const e=this.domElement.getBoundingClientRect(),t=this.domElement.ownerDocument.documentElement;this.screen.left=e.left+window.pageXOffset-t.clientLeft,this.screen.top=e.top+window.pageYOffset-t.clientTop,this.screen.width=e.width,this.screen.height=e.height}update(){this._eye.subVectors(this.object.position,this.target),this.noRotate||this._rotateCamera(),this.noZoom||this._zoomCamera(),this.noPan||this._panCamera(),this.object.position.addVectors(this.target,this._eye),this.object.isPerspectiveCamera?(this._checkDistances(),this.object.lookAt(this.target),this._lastPosition.distanceToSquared(this.object.position)>og&&(this.dispatchEvent(id),this._lastPosition.copy(this.object.position))):this.object.isOrthographicCamera?(this.object.lookAt(this.target),(this._lastPosition.distanceToSquared(this.object.position)>og||this._lastZoom!==this.object.zoom)&&(this.dispatchEvent(id),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type.")}reset(){this.state=Vt.NONE,this.keyState=Vt.NONE,this.target.copy(this._target0),this.object.position.copy(this._position0),this.object.up.copy(this._up0),this.object.zoom=this._zoom0,this.object.updateProjectionMatrix(),this._eye.subVectors(this.object.position,this.target),this.object.lookAt(this.target),this.dispatchEvent(id),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom}_panCamera(){if(Wr.copy(this._panEnd).sub(this._panStart),Wr.lengthSq()){if(this.object.isOrthographicCamera){const e=(this.object.right-this.object.left)/this.object.zoom/this.domElement.clientWidth,t=(this.object.top-this.object.bottom)/this.object.zoom/this.domElement.clientWidth;Wr.x*=e,Wr.y*=t}Wr.multiplyScalar(this._eye.length()*this.panSpeed),sc.copy(this._eye).cross(this.object.up).setLength(Wr.x),sc.add(AA.copy(this.object.up).setLength(Wr.y)),this.object.position.add(sc),this.target.add(sc),this.staticMoving?this._panStart.copy(this._panEnd):this._panStart.add(Wr.subVectors(this._panEnd,this._panStart).multiplyScalar(this.dynamicDampingFactor))}}_rotateCamera(){ac.set(this._moveCurr.x-this._movePrev.x,this._moveCurr.y-this._movePrev.y,0);let e=ac.length();e?(this._eye.copy(this.object.position).sub(this.target),ag.copy(this._eye).normalize(),oc.copy(this.object.up).normalize(),sd.crossVectors(oc,ag).normalize(),oc.setLength(this._moveCurr.y-this._movePrev.y),sd.setLength(this._moveCurr.x-this._movePrev.x),ac.copy(oc.add(sd)),rd.crossVectors(ac,this._eye).normalize(),e*=this.rotateSpeed,yo.setFromAxisAngle(rd,e),this._eye.applyQuaternion(yo),this.object.up.applyQuaternion(yo),this._lastAxis.copy(rd),this._lastAngle=e):!this.staticMoving&&this._lastAngle&&(this._lastAngle*=Math.sqrt(1-this.dynamicDampingFactor),this._eye.copy(this.object.position).sub(this.target),yo.setFromAxisAngle(this._lastAxis,this._lastAngle),this._eye.applyQuaternion(yo),this.object.up.applyQuaternion(yo)),this._movePrev.copy(this._moveCurr)}_zoomCamera(){let e;this.state===Vt.TOUCH_ZOOM_PAN?(e=this._touchZoomDistanceStart/this._touchZoomDistanceEnd,this._touchZoomDistanceStart=this._touchZoomDistanceEnd,this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=or.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(e=1+(this._zoomEnd.y-this._zoomStart.y)*this.zoomSpeed,e!==1&&e>0&&(this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=or.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),this.staticMoving?this._zoomStart.copy(this._zoomEnd):this._zoomStart.y+=(this._zoomEnd.y-this._zoomStart.y)*this.dynamicDampingFactor)}_getMouseOnScreen(e,t){return rc.set((e-this.screen.left)/this.screen.width,(t-this.screen.top)/this.screen.height),rc}_getMouseOnCircle(e,t){return rc.set((e-this.screen.width*.5-this.screen.left)/(this.screen.width*.5),(this.screen.height+2*(this.screen.top-t))/this.screen.width),rc}_addPointer(e){this._pointers.push(e)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t].pointerId==e.pointerId){this._pointers.splice(t,1);return}}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new ge,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0].pointerId?this._pointers[1]:this._pointers[0];return this._pointerPositions[t.pointerId]}_checkDistances(){(!this.noZoom||!this.noPan)&&(this._eye.lengthSq()>this.maxDistance*this.maxDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.maxDistance)),this._zoomStart.copy(this._zoomEnd)),this._eye.lengthSq()<this.minDistance*this.minDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.minDistance)),this._zoomStart.copy(this._zoomEnd)))}}function RA(s){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._addPointer(s),s.pointerType==="touch"?this._onTouchStart(s):this._onMouseDown(s))}function PA(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchMove(s):this._onMouseMove(s))}function IA(s){this.enabled!==!1&&(s.pointerType==="touch"?this._onTouchEnd(s):this._onMouseUp(),this._removePointer(s),this._pointers.length===0&&(this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp)))}function DA(s){this._removePointer(s)}function UA(){this.enabled!==!1&&(this.keyState=Vt.NONE,window.addEventListener("keydown",this._onKeyDown))}function LA(s){this.enabled!==!1&&(window.removeEventListener("keydown",this._onKeyDown),this.keyState===Vt.NONE&&(s.code===this.keys[Vt.ROTATE]&&!this.noRotate?this.keyState=Vt.ROTATE:s.code===this.keys[Vt.ZOOM]&&!this.noZoom?this.keyState=Vt.ZOOM:s.code===this.keys[Vt.PAN]&&!this.noPan&&(this.keyState=Vt.PAN)))}function NA(s){let e;switch(s.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Di.DOLLY:this.state=Vt.ZOOM;break;case Di.ROTATE:this.state=Vt.ROTATE;break;case Di.PAN:this.state=Vt.PAN;break;default:this.state=Vt.NONE}const t=this.keyState!==Vt.NONE?this.keyState:this.state;t===Vt.ROTATE&&!this.noRotate?(this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY)),this._movePrev.copy(this._moveCurr)):t===Vt.ZOOM&&!this.noZoom?(this._zoomStart.copy(this._getMouseOnScreen(s.pageX,s.pageY)),this._zoomEnd.copy(this._zoomStart)):t===Vt.PAN&&!this.noPan&&(this._panStart.copy(this._getMouseOnScreen(s.pageX,s.pageY)),this._panEnd.copy(this._panStart)),this.dispatchEvent(Yf)}function OA(s){const e=this.keyState!==Vt.NONE?this.keyState:this.state;e===Vt.ROTATE&&!this.noRotate?(this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY))):e===Vt.ZOOM&&!this.noZoom?this._zoomEnd.copy(this._getMouseOnScreen(s.pageX,s.pageY)):e===Vt.PAN&&!this.noPan&&this._panEnd.copy(this._getMouseOnScreen(s.pageX,s.pageY))}function FA(){this.state=Vt.NONE,this.dispatchEvent(qf)}function kA(s){if(this.enabled!==!1&&this.noZoom!==!0){switch(s.preventDefault(),s.deltaMode){case 2:this._zoomStart.y-=s.deltaY*.025;break;case 1:this._zoomStart.y-=s.deltaY*.01;break;default:this._zoomStart.y-=s.deltaY*25e-5;break}this.dispatchEvent(Yf),this.dispatchEvent(qf)}}function BA(s){this.enabled!==!1&&s.preventDefault()}function zA(s){switch(this._trackPointer(s),this._pointers.length){case 1:this.state=Vt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(this._pointers[0].pageX,this._pointers[0].pageY)),this._movePrev.copy(this._moveCurr);break;default:this.state=Vt.TOUCH_ZOOM_PAN;const e=this._pointers[0].pageX-this._pointers[1].pageX,t=this._pointers[0].pageY-this._pointers[1].pageY;this._touchZoomDistanceEnd=this._touchZoomDistanceStart=Math.sqrt(e*e+t*t);const i=(this._pointers[0].pageX+this._pointers[1].pageX)/2,n=(this._pointers[0].pageY+this._pointers[1].pageY)/2;this._panStart.copy(this._getMouseOnScreen(i,n)),this._panEnd.copy(this._panStart);break}this.dispatchEvent(Yf)}function GA(s){switch(this._trackPointer(s),this._pointers.length){case 1:this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY));break;default:const e=this._getSecondPointerPosition(s),t=s.pageX-e.x,i=s.pageY-e.y;this._touchZoomDistanceEnd=Math.sqrt(t*t+i*i);const n=(s.pageX+e.x)/2,r=(s.pageY+e.y)/2;this._panEnd.copy(this._getMouseOnScreen(n,r));break}}function VA(s){switch(this._pointers.length){case 0:this.state=Vt.NONE;break;case 1:this.state=Vt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(s.pageX,s.pageY)),this._movePrev.copy(this._moveCurr);break;case 2:this.state=Vt.TOUCH_ZOOM_PAN;for(let e=0;e<this._pointers.length;e++)if(this._pointers[e].pointerId!==s.pointerId){const t=this._pointerPositions[this._pointers[e].pointerId];this._moveCurr.copy(this._getMouseOnCircle(t.x,t.y)),this._movePrev.copy(this._moveCurr);break}break}this.dispatchEvent(qf)}function uR(s,e){var x;Xn(e,!0);const[t,i]=Xa(),n=()=>Us(c,"$parent",t),r=()=>Us(h,"$camera",t),o=()=>Us(v,"$size",t);let a=He(e,"ref",15),l=fr(e,["$$slots","$$events","$$legacy","controls","renderTask","ref","onstart","onchange","onend"]);const c=Of(),{camera:h,renderer:u,dom:d,autoRenderTask:f,shouldRender:p,size:v,invalidate:m}=Li();a(new ig(h.current,u));const g=new Rt,y=xt(()=>e.controls??n());Xs(((x=e.renderTask)==null?void 0:x.key)??Symbol("threlte-extras-gizmo-render"),()=>{if(p()){const _=u.toneMapping;u.getViewport(g),u.toneMapping=lr,a().render(),u.setViewport(g),u.toneMapping=_}},{autoInvalidate:!1,...e.renderTask??{after:f}}),Pt(()=>{a(a().camera=r(),!0)}),gi(()=>{if(Ee(y))if(Ee(y)instanceof jv||Ee(y)instanceof CA){a(a().target=Ee(y).target,!0);const _=()=>{a().update(!1)};return Ee(y).addEventListener("change",_),()=>Ee(y).removeEventListener("change",_)}else{const _=()=>{"getTarget"in Ee(y)&&typeof Ee(y).getTarget=="function"&&(Ee(y).getTarget(a().target),a().update())},E=()=>{Ee(y).setPosition(...h.current.position.toArray())};return a().addEventListener("change",E),Ee(y).addEventListener("update",_),()=>{a().removeEventListener("change",E),Ee(y).removeEventListener("update",_)}}}),gi(()=>{const _=E=>{var w;Ee(y).enabled=!1,(w=e.onstart)==null||w.call(e,E)};return a().addEventListener("start",_),()=>a().removeEventListener("start",_)}),gi(()=>{const _=E=>{var w;m(),(w=e.onchange)==null||w.call(e,E)};return a().addEventListener("change",_),()=>a().removeEventListener("change",_)}),gi(()=>{const _=E=>{var w;Ee(y).enabled=!0,(w=e.onend)==null||w.call(e,E)};return a().addEventListener("end",_),()=>a().removeEventListener("end",_)}),Pt(()=>{d&&(a().dispose(),a(new ig(h.current,u,{container:d,placement:"bottom-left",size:86,...l})),m())}),gi(()=>{o(),a().update(),m()}),gi(()=>()=>a().dispose()),Yn(),i()}const HA={name:"HorizontalBlurShader",uniforms:{tDiffuse:{value:null},h:{value:1/512}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform float h;

		varying vec2 vUv;

		void main() {

			vec4 sum = vec4( 0.0 );

			sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;
			sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;
			sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;

			gl_FragColor = sum;

		}`},WA={name:"VerticalBlurShader",uniforms:{tDiffuse:{value:null},v:{value:1/512}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform float v;

		varying vec2 vUv;

		void main() {

			vec4 sum = vec4( 0.0 );

			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;

			gl_FragColor = sum;

		}`};var XA=Wn("<!> <!> <!>",1);function YA(s,e){Xn(e,!0);let t=He(e,"opacity",3,1),i=He(e,"width",3,1),n=He(e,"height",3,1),r=He(e,"blur",3,1),o=He(e,"far",3,10),a=He(e,"smooth",3,!0),l=He(e,"resolution",3,512),c=He(e,"frames",3,1/0),h=He(e,"scale",3,10),u=He(e,"color",3,"#000000"),d=He(e,"depthWrite",3,!1),f=He(e,"ref",15),p=fr(e,["$$slots","$$events","$$legacy","opacity","width","height","blur","far","smooth","resolution","frames","scale","color","depthWrite","ref","children"]);const{scene:v,renderer:m}=Li(),g=new ki,y=xt(()=>i()*(Array.isArray(h())?h()[0]:h()||1)),x=xt(()=>n()*(Array.isArray(h())?h()[1]:h()||1)),_=xt(()=>{const Y=new zi(l(),l());return Y.texture.generateMipmaps=!1,Y.texture.colorSpace=m.outputColorSpace,Y}),E=xt(()=>{const Y=new zi(l(),l());return Y.texture.generateMipmaps=!1,Y}),w=xt(()=>new er(Ee(y),Ee(x)).rotateX(Math.PI/2)),M=xt(()=>new Ne(Ee(w))),T=xt(()=>{const Y=new rl({depthTest:!1,depthWrite:!1});return Y.onBeforeCompile=Q=>{Q.uniforms={...Q.uniforms,uColor:{value:new Be(u()).convertSRGBToLinear()}},Q.fragmentShader=`uniform vec3 uColor;
${Q.fragmentShader}`,Q.fragmentShader=Q.fragmentShader.replace("vec4( vec3( 1.0 - fragCoordZ ), opacity );","vec4( uColor, ( 1.0 - fragCoordZ ) * 1.0 );"),Q.fragmentShader=Q.fragmentShader.replace("vec4(vec3(1.0-fragCoordZ),opacity);","vec4(uColor,(1.0-fragCoordZ)*1.0);")},Y}),S=new Si({...HA,depthTest:!1}),b=new Si({...WA,depthTest:!1}),U=xt(()=>new ts(-Ee(y)/2,Ee(y)/2,Ee(x)/2,-Ee(x)/2,0,o()));Pt(()=>Ee(U).updateProjectionMatrix());const I=xt(()=>new Ln({map:Ee(_).texture,transparent:!0,opacity:t(),depthWrite:d()})),B=Y=>{Ee(M).visible=!0,Ee(M).material=S,S.uniforms.tDiffuse.value=Ee(_).texture,S.uniforms.h.value=Y*1/256,m.setRenderTarget(Ee(E)),m.render(Ee(M),Ee(U)),Ee(M).material=b,b.uniforms.tDiffuse.value=Ee(E).texture,b.uniforms.v.value=Y*1/256,m.setRenderTarget(Ee(_)),m.render(Ee(M),Ee(U)),Ee(M).visible=!1},G=()=>{const Y=v.background;v.background=null;const Q=v.overrideMaterial;v.overrideMaterial=Ee(T);const z=m.getClearAlpha();m.setClearAlpha(0),m.setRenderTarget(Ee(_)),m.render(v,Ee(U)),v.overrideMaterial=Q,B(r()),a()&&B(r()*.4),m.setRenderTarget(null),v.background=Y,m.setClearAlpha(z)},j=()=>{G()},N=Xs(()=>{G()},{autoStart:!1});let ee=0;const W=Xs(()=>{G(),ee+=1,ee>=c()&&W.stop()},{autoStart:!1});return Pt(()=>{c()===Number.POSITIVE_INFINITY?N.start():ee<c()&&W.start()}),pr(()=>{Ee(_).dispose(),Ee(E).dispose(),Ee(w).dispose(),Ee(T).dispose(),S.dispose(),b.dispose(),Ee(I).dispose()}),bt(s,Ir({is:g},()=>p,{get ref(){return f()},set ref(Y){f(Y)},children:(Y,Q)=>{var z=yt(),J=it(z);kt(J,()=>bt.Group,($,V)=>{V($,{"rotation.x":Math.PI/2,children:(H,K)=>{var q=XA(),re=it(q);kt(re,()=>bt.Mesh,(Me,ye)=>{ye(Me,{"scale.y":-1,"rotation.x":-Math.PI/2,get material(){return Ee(I)},get geometry(){return Ee(w)}})});var be=cn(re,2);bt(be,{get is(){return Ee(U)},manual:!0});var Se=cn(be,2);Bi(Se,()=>e.children??Pr,()=>({ref:g})),nt(H,q)},$$slots:{default:!0}})}),nt(Y,z)},$$slots:{default:!0}})),Yn({refresh:j})}const qA=Number.parseInt(qa.replace("dev","")),jA=`
  varying vec3 localPosition;
  varying vec4 worldPosition;

  uniform vec3 worldCamProjPosition;
	uniform vec3 worldPlanePosition;
	uniform float fadeDistance;
	uniform bool infiniteGrid;
	uniform bool followCamera;

	uniform int coord0;
	uniform int coord1;
	uniform int coord2;

	void main() {
		localPosition = vec3(
		  position[coord0],
			position[coord1],
			position[coord2]
		);

		if (infiniteGrid) {
		  localPosition *= 1.0 + fadeDistance;
		}

		worldPosition = modelMatrix * vec4(localPosition, 1.0);
		if (followCamera) {
		  worldPosition.xyz += (worldCamProjPosition - worldPlanePosition);
      localPosition = (inverse(modelMatrix) * worldPosition).xyz;
		}

		gl_Position = projectionMatrix * viewMatrix * worldPosition;
	}
`,ZA=`
  #define PI 3.141592653589793

	varying vec3 localPosition;
	varying vec4 worldPosition;

	uniform vec3 worldCamProjPosition;
	uniform float cellSize;
	uniform float sectionSize;
	uniform vec3 cellColor;
	uniform vec3 sectionColor;
	uniform float fadeDistance;
	uniform float fadeStrength;
	uniform vec3 fadeOrigin;
	uniform float cellThickness;
	uniform float sectionThickness;
	uniform vec3 backgroundColor;
	uniform float backgroundOpacity;

	uniform bool infiniteGrid;

	uniform int coord0;
	uniform int coord1;
	uniform int coord2;

	// 0 - default; 1 - lines; 2 - circles; 3 - polar
	uniform int gridType;

  // lineGrid coord for lines
	uniform int lineGridCoord;

	// circlegrid max radius
	uniform float circleGridMaxRadius;

	// polar grid dividers
	uniform float polarCellDividers;
	uniform float polarSectionDividers;

	float getSquareGrid(float size, float thickness, vec3 localPos) {
		vec2 coord = localPos.xy / size;

		vec2 grid = abs(fract(coord - 0.5) - 0.5) / fwidth(coord);
		float line = min(grid.x, grid.y) + 1.0 - thickness;

		return 1.0 - min(line, 1.0);
	}

	float getLinesGrid(float size, float thickness, vec3 localPos) {
		float coord = localPos[lineGridCoord] / size;
		float line = abs(fract(coord - 0.5) - 0.5) / fwidth(coord) - thickness * 0.2;

		return 1.0 - min(line, 1.0);
	}

	float getCirclesGrid(float size, float thickness, vec3 localPos) {
		float coord = length(localPos.xy) / size;
		float line = abs(fract(coord - 0.5) - 0.5) / fwidth(coord) - thickness * 0.2;

		if (!infiniteGrid && circleGridMaxRadius > 0. && coord > circleGridMaxRadius + thickness * 0.05) {
		  discard;
		}

		return 1.0 - min(line, 1.0);
	}

	float getPolarGrid(float size, float thickness, float polarDividers, vec3 localPos) {
		float rad = length(localPos.xy) / size;
		vec2 coord = vec2(rad, atan(localPos.x, localPos.y) * polarDividers / PI) ;

		vec2 wrapped = vec2(coord.x, fract(coord.y / (2.0 * polarDividers)) * (2.0 * polarDividers));
		vec2 coordWidth = fwidth(coord);
		vec2 wrappedWidth = fwidth(wrapped);
		vec2 width = (coord.y < -polarDividers * 0.5 || coord.y > polarDividers * 0.5 ? wrappedWidth : coordWidth) * (1.+thickness*0.25);

		// Compute anti-aliased world-space grid lines
		vec2 grid = abs(fract(coord - 0.5) - 0.5) / width;
		float line = min(grid.x, grid.y);

if (!infiniteGrid && circleGridMaxRadius > 0.0 && rad > circleGridMaxRadius + thickness * 0.05) {
		  discard;
		}

		return 1.0 - min(line, 1.0);
	}

	void main() {
		float g1 = 0.0;
		float g2 = 0.0;

		vec3 localPos = vec3(localPosition[coord0], localPosition[coord1], localPosition[coord2]);

		if (gridType == 0) {
			g1 = getSquareGrid(cellSize, cellThickness, localPos);
			g2 = getSquareGrid(sectionSize, sectionThickness, localPos);

		} else if (gridType == 1) {
			g1 = getLinesGrid(cellSize, cellThickness, localPos);
			g2 = getLinesGrid(sectionSize, sectionThickness, localPos);

		} else if (gridType == 2) {
			g1 = getCirclesGrid(cellSize, cellThickness, localPos);
			g2 = getCirclesGrid(sectionSize, sectionThickness, localPos);

		} else if (gridType == 3) {
			g1 = getPolarGrid(cellSize, cellThickness, polarCellDividers, localPos);
			g2 = getPolarGrid(sectionSize, sectionThickness, polarSectionDividers, localPos);
		}

		float dist = distance(fadeOrigin, worldPosition.xyz);
		float d = 1.0 - min(dist / fadeDistance, 1.0);
		float fadeFactor = pow(d, fadeStrength) * 0.95;

		vec3 color = mix(cellColor, sectionColor, min(1.0, sectionThickness * g2));

		if (backgroundOpacity > 0.0) {
			float linesAlpha = clamp((g1 + g2) * fadeFactor, 0.0,1.0);
			vec3 finalColor = mix(backgroundColor, color, linesAlpha);
			float blendedAlpha = max(linesAlpha, backgroundOpacity * fadeFactor);
			gl_FragColor = vec4(finalColor, blendedAlpha);

		} else {
			gl_FragColor = vec4(color, (g1 + g2) * pow(d, fadeStrength));
			gl_FragColor.a = mix(0.75 * gl_FragColor.a, gl_FragColor.a, g2);
		}

		if (gl_FragColor.a <= 0.0) {
		  discard;
		}

		#include <tonemapping_fragment>
		#include <${qA<154?"encodings_fragment":"colorspace_fragment"}>
	}
`;var KA=Wn("<!> <!>",1);function dR(s,e){Xn(e,!0);let t=He(e,"cellColor",3,"#000000"),i=He(e,"sectionColor",3,"#0000ee"),n=He(e,"cellSize",3,1),r=He(e,"backgroundColor",3,"#dadada"),o=He(e,"backgroundOpacity",3,0),a=He(e,"sectionSize",3,10),l=He(e,"plane",3,"xz"),c=He(e,"gridSize",19,()=>[20,20]),h=He(e,"followCamera",3,!1),u=He(e,"infiniteGrid",3,!1),d=He(e,"fadeDistance",3,100),f=He(e,"fadeStrength",3,1),p=He(e,"fadeOrigin",3,void 0),v=He(e,"cellThickness",3,1),m=He(e,"sectionThickness",3,2),g=He(e,"side",3,vi),y=He(e,"type",3,"grid"),x=He(e,"axis",3,"x"),_=He(e,"maxRadius",3,0),E=He(e,"cellDividers",3,6),w=He(e,"sectionDividers",3,2),M=He(e,"ref",15),T=fr(e,["$$slots","$$events","$$legacy","cellColor","sectionColor","cellSize","backgroundColor","backgroundOpacity","sectionSize","plane","gridSize","followCamera","infiniteGrid","fadeDistance","fadeStrength","fadeOrigin","cellThickness","sectionThickness","side","type","axis","maxRadius","cellDividers","sectionDividers","ref","children"]);const S=new Ne,{invalidate:b,camera:U}=Li(),I=new sr,B=new D(0,1,0),G=new D(0,0,0),j={x:0,y:1,z:2},N={xz:"xzy",xy:"xyz",zy:"zyx"},ee={grid:0,lines:1,circular:2,polar:3},W={cellSize:{value:n()},sectionSize:{value:a()},cellColor:{value:new Be(t())},sectionColor:{value:new Be(i())},backgroundColor:{value:new Be(r())},backgroundOpacity:{value:o()},fadeDistance:{value:d()},fadeStrength:{value:f()},fadeOrigin:{value:new D},cellThickness:{value:v()},sectionThickness:{value:m()},infiniteGrid:{value:u()},followCamera:{value:h()},coord0:{value:0},coord1:{value:2},coord2:{value:1},gridType:{value:ee.grid},lineGridCoord:{value:j[x()]},circleGridMaxRadius:{value:_()},polarCellDividers:{value:E()},polarSectionDividers:{value:w()},worldCamProjPosition:{value:new D},worldPlanePosition:{value:new D}};Pt(()=>{const Y=N[l()],Q=Y.charAt(0),z=Y.charAt(1),J=Y.charAt(2);W.coord0.value=j[Q],W.coord1.value=j[z],W.coord2.value=j[J],b()}),Pt(()=>{W.cellSize.value=n(),b()}),Pt(()=>{W.sectionSize.value=a(),b()}),Pt(()=>{W.cellColor.value.set(t()),b()}),Pt(()=>{W.sectionColor.value.set(i()),b()}),Pt(()=>{W.backgroundColor.value.set(r()),b()}),Pt(()=>{W.backgroundOpacity.value=o(),b()}),Pt(()=>{W.fadeDistance.value=d(),b()}),Pt(()=>{W.fadeStrength.value=f(),b()}),Pt(()=>{p()&&(W.fadeOrigin.value=p(),b())}),Pt(()=>{W.cellThickness.value=v(),b()}),Pt(()=>{W.sectionThickness.value=m(),b()}),Pt(()=>{W.followCamera.value=h(),b()}),Pt(()=>{W.infiniteGrid.value=u(),b()}),Pt(()=>{switch(y()){case"grid":{W.gridType.value=ee.grid;break}case"lines":{W.gridType.value=ee.lines,W.lineGridCoord.value=j[x()];break}case"circular":{W.gridType.value=ee.circular,W.circleGridMaxRadius.value=_();break}case"polar":{W.gridType.value=ee.polar,W.circleGridMaxRadius.value=_(),W.polarCellDividers.value=E(),W.polarSectionDividers.value=w();break}}b()}),Xs(()=>{I.setFromNormalAndCoplanarPoint(B,G).applyMatrix4(S.matrixWorld);const Y=S.material,Q=Y.uniforms.worldCamProjPosition,z=Y.uniforms.worldPlanePosition,J=Y.uniforms.fadeOrigin,$=I.projectPoint(U.current.position,Q.value);p()||(J.value=$),z.value.set(0,0,0).applyMatrix4(S.matrixWorld)},{autoInvalidate:!1}),bt(s,Ir({is:S,frustumCulled:!1},()=>T,{get ref(){return M()},set ref(Y){M(Y)},children:(Y,Q)=>{var z=KA(),J=it(z);kt(J,()=>bt.ShaderMaterial,(K,q)=>{q(K,{fragmentShader:ZA,vertexShader:jA,uniforms:W,transparent:!0,get side(){return g()}})});var $=cn(J,2);{var V=K=>{var q=yt(),re=it(q);Bi(re,()=>e.children,()=>({ref:S})),nt(K,q)},H=K=>{var q=yt(),re=it(q);const be=xt(()=>typeof c()=="number"?[c(),c()]:c());kt(re,()=>bt.PlaneGeometry,(Se,Me)=>{Me(Se,{get args(){return Ee(be)}})}),nt(K,q)};jt($,K=>{e.children?K(V):K(H,!1)})}nt(Y,z)},$$slots:{default:!0}})),Yn()}const Ss=new jh,Qn=new D,Xr=new D,sn=new Gt,lg={X:new D(1,0,0),Y:new D(0,1,0),Z:new D(0,0,1)},od={type:"change"},cg={type:"mouseDown",mode:null},hg={type:"mouseUp",mode:null},ug={type:"objectChange"};class JA extends Zh{constructor(e,t=null){super(void 0,t);const i=new i2(this);this._root=i;const n=new r2;this._gizmo=n,i.add(n);const r=new s2;this._plane=r,i.add(r);const o=this;function a(x,_){let E=_;Object.defineProperty(o,x,{get:function(){return E!==void 0?E:_},set:function(w){E!==w&&(E=w,r[x]=w,n[x]=w,o.dispatchEvent({type:x+"-changed",value:w}),o.dispatchEvent(od))}}),o[x]=_,r[x]=_,n[x]=_}a("camera",e),a("object",void 0),a("enabled",!0),a("axis",null),a("mode","translate"),a("translationSnap",null),a("rotationSnap",null),a("scaleSnap",null),a("space","world"),a("size",1),a("dragging",!1),a("showX",!0),a("showY",!0),a("showZ",!0),a("minX",-1/0),a("maxX",1/0),a("minY",-1/0),a("maxY",1/0),a("minZ",-1/0),a("maxZ",1/0);const l=new D,c=new D,h=new Gt,u=new Gt,d=new D,f=new Gt,p=new D,v=new D,m=new D,g=0,y=new D;a("worldPosition",l),a("worldPositionStart",c),a("worldQuaternion",h),a("worldQuaternionStart",u),a("cameraPosition",d),a("cameraQuaternion",f),a("pointStart",p),a("pointEnd",v),a("rotationAxis",m),a("rotationAngle",g),a("eye",y),this._offset=new D,this._startNorm=new D,this._endNorm=new D,this._cameraScale=new D,this._parentPosition=new D,this._parentQuaternion=new Gt,this._parentQuaternionInv=new Gt,this._parentScale=new D,this._worldScaleStart=new D,this._worldQuaternionInv=new Gt,this._worldScale=new D,this._positionStart=new D,this._quaternionStart=new Gt,this._scaleStart=new D,this._getPointer=QA.bind(this),this._onPointerDown=e2.bind(this),this._onPointerHover=$A.bind(this),this._onPointerMove=t2.bind(this),this._onPointerUp=n2.bind(this),t!==null&&this.connect(t)}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="auto"}getHelper(){return this._root}pointerHover(e){if(this.object===void 0||this.dragging===!0)return;e!==null&&Ss.setFromCamera(e,this.camera);const t=ad(this._gizmo.picker[this.mode],Ss);t?this.axis=t.object.name:this.axis=null}pointerDown(e){if(!(this.object===void 0||this.dragging===!0||e!=null&&e.button!==0)&&this.axis!==null){e!==null&&Ss.setFromCamera(e,this.camera);const t=ad(this._plane,Ss,!0);t&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(t.point).sub(this.worldPositionStart)),this.dragging=!0,cg.mode=this.mode,this.dispatchEvent(cg)}}pointerMove(e){const t=this.axis,i=this.mode,n=this.object;let r=this.space;if(i==="scale"?r="local":(t==="E"||t==="XYZE"||t==="XYZ")&&(r="world"),n===void 0||t===null||this.dragging===!1||e!==null&&e.button!==-1)return;e!==null&&Ss.setFromCamera(e,this.camera);const o=ad(this._plane,Ss,!0);if(o){if(this.pointEnd.copy(o.point).sub(this.worldPositionStart),i==="translate")this._offset.copy(this.pointEnd).sub(this.pointStart),r==="local"&&t!=="XYZ"&&this._offset.applyQuaternion(this._worldQuaternionInv),t.indexOf("X")===-1&&(this._offset.x=0),t.indexOf("Y")===-1&&(this._offset.y=0),t.indexOf("Z")===-1&&(this._offset.z=0),r==="local"&&t!=="XYZ"?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),n.position.copy(this._offset).add(this._positionStart),this.translationSnap&&(r==="local"&&(n.position.applyQuaternion(sn.copy(this._quaternionStart).invert()),t.search("X")!==-1&&(n.position.x=Math.round(n.position.x/this.translationSnap)*this.translationSnap),t.search("Y")!==-1&&(n.position.y=Math.round(n.position.y/this.translationSnap)*this.translationSnap),t.search("Z")!==-1&&(n.position.z=Math.round(n.position.z/this.translationSnap)*this.translationSnap),n.position.applyQuaternion(this._quaternionStart)),r==="world"&&(n.parent&&n.position.add(Qn.setFromMatrixPosition(n.parent.matrixWorld)),t.search("X")!==-1&&(n.position.x=Math.round(n.position.x/this.translationSnap)*this.translationSnap),t.search("Y")!==-1&&(n.position.y=Math.round(n.position.y/this.translationSnap)*this.translationSnap),t.search("Z")!==-1&&(n.position.z=Math.round(n.position.z/this.translationSnap)*this.translationSnap),n.parent&&n.position.sub(Qn.setFromMatrixPosition(n.parent.matrixWorld)))),n.position.x=Math.max(this.minX,Math.min(this.maxX,n.position.x)),n.position.y=Math.max(this.minY,Math.min(this.maxY,n.position.y)),n.position.z=Math.max(this.minZ,Math.min(this.maxZ,n.position.z));else if(i==="scale"){if(t.search("XYZ")!==-1){let a=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(a*=-1),Xr.set(a,a,a)}else Qn.copy(this.pointStart),Xr.copy(this.pointEnd),Qn.applyQuaternion(this._worldQuaternionInv),Xr.applyQuaternion(this._worldQuaternionInv),Xr.divide(Qn),t.search("X")===-1&&(Xr.x=1),t.search("Y")===-1&&(Xr.y=1),t.search("Z")===-1&&(Xr.z=1);n.scale.copy(this._scaleStart).multiply(Xr),this.scaleSnap&&(t.search("X")!==-1&&(n.scale.x=Math.round(n.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),t.search("Y")!==-1&&(n.scale.y=Math.round(n.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),t.search("Z")!==-1&&(n.scale.z=Math.round(n.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if(i==="rotate"){this._offset.copy(this.pointEnd).sub(this.pointStart);const a=20/this.worldPosition.distanceTo(Qn.setFromMatrixPosition(this.camera.matrixWorld));let l=!1;t==="XYZE"?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(Qn.copy(this.rotationAxis).cross(this.eye))*a):(t==="X"||t==="Y"||t==="Z")&&(this.rotationAxis.copy(lg[t]),Qn.copy(lg[t]),r==="local"&&Qn.applyQuaternion(this.worldQuaternion),Qn.cross(this.eye),Qn.length()===0?l=!0:this.rotationAngle=this._offset.dot(Qn.normalize())*a),(t==="E"||l)&&(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),r==="local"&&t!=="E"&&t!=="XYZE"?(n.quaternion.copy(this._quaternionStart),n.quaternion.multiply(sn.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),n.quaternion.copy(sn.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),n.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(od),this.dispatchEvent(ug)}}pointerUp(e){e!==null&&e.button!==0||(this.dragging&&this.axis!==null&&(hg.mode=this.mode,this.dispatchEvent(hg)),this.dragging=!1,this.axis=null)}dispose(){this.disconnect(),this._root.dispose()}attach(e){return this.object=e,this._root.visible=!0,this}detach(){return this.object=void 0,this.axis=null,this._root.visible=!1,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(od),this.dispatchEvent(ug),this.pointStart.copy(this.pointEnd))}getRaycaster(){return Ss}getMode(){return this.mode}setMode(e){this.mode=e}setTranslationSnap(e){this.translationSnap=e}setRotationSnap(e){this.rotationSnap=e}setScaleSnap(e){this.scaleSnap=e}setSize(e){this.size=e}setSpace(e){this.space=e}}function QA(s){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:s.button};{const e=this.domElement.getBoundingClientRect();return{x:(s.clientX-e.left)/e.width*2-1,y:-(s.clientY-e.top)/e.height*2+1,button:s.button}}}function $A(s){if(this.enabled)switch(s.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(s));break}}function e2(s){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(s.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(s)),this.pointerDown(this._getPointer(s)))}function t2(s){this.enabled&&this.pointerMove(this._getPointer(s))}function n2(s){this.enabled&&(this.domElement.releasePointerCapture(s.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(s)))}function ad(s,e,t){const i=e.intersectObject(s,!0);for(let n=0;n<i.length;n++)if(i[n].object.visible||t)return i[n];return!1}const lc=new bi,en=new D(0,1,0),dg=new D(0,0,0),fg=new rt,cc=new Gt,bc=new Gt,ir=new D,pg=new rt,la=new D(1,0,0),Ts=new D(0,1,0),ca=new D(0,0,1),hc=new D,na=new D,ia=new D;class i2 extends Ut{constructor(e){super(),this.isTransformControlsRoot=!0,this.controls=e,this.visible=!1}updateMatrixWorld(e){const t=this.controls;t.object!==void 0&&(t.object.updateMatrixWorld(),t.object.parent===null?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):t.object.parent.matrixWorld.decompose(t._parentPosition,t._parentQuaternion,t._parentScale),t.object.matrixWorld.decompose(t.worldPosition,t.worldQuaternion,t._worldScale),t._parentQuaternionInv.copy(t._parentQuaternion).invert(),t._worldQuaternionInv.copy(t.worldQuaternion).invert()),t.camera.updateMatrixWorld(),t.camera.matrixWorld.decompose(t.cameraPosition,t.cameraQuaternion,t._cameraScale),t.camera.isOrthographicCamera?t.camera.getWorldDirection(t.eye).negate():t.eye.copy(t.cameraPosition).sub(t.worldPosition).normalize(),super.updateMatrixWorld(e)}dispose(){this.traverse(function(e){e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose()})}}class r2 extends Ut{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const e=new Ln({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),t=new Nn({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),i=e.clone();i.opacity=.15;const n=t.clone();n.opacity=.5;const r=e.clone();r.color.setHex(16711680);const o=e.clone();o.color.setHex(65280);const a=e.clone();a.color.setHex(255);const l=e.clone();l.color.setHex(16711680),l.opacity=.5;const c=e.clone();c.color.setHex(65280),c.opacity=.5;const h=e.clone();h.color.setHex(255),h.opacity=.5;const u=e.clone();u.opacity=.25;const d=e.clone();d.color.setHex(16776960),d.opacity=.25,e.clone().color.setHex(16776960);const p=e.clone();p.color.setHex(7895160);const v=new En(0,.04,.1,12);v.translate(0,.05,0);const m=new gn(.08,.08,.08);m.translate(0,.04,0);const g=new _t;g.setAttribute("position",new je([0,0,0,1,0,0],3));const y=new En(.0075,.0075,.5,3);y.translate(0,.25,0);function x(j,N){const ee=new wr(j,.0075,3,64,N*Math.PI*2);return ee.rotateY(Math.PI/2),ee.rotateX(Math.PI/2),ee}function _(){const j=new _t;return j.setAttribute("position",new je([0,0,0,1,1,1],3)),j}const E={X:[[new Ne(v,r),[.5,0,0],[0,0,-Math.PI/2]],[new Ne(v,r),[-.5,0,0],[0,0,Math.PI/2]],[new Ne(y,r),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new Ne(v,o),[0,.5,0]],[new Ne(v,o),[0,-.5,0],[Math.PI,0,0]],[new Ne(y,o)]],Z:[[new Ne(v,a),[0,0,.5],[Math.PI/2,0,0]],[new Ne(v,a),[0,0,-.5],[-Math.PI/2,0,0]],[new Ne(y,a),null,[Math.PI/2,0,0]]],XYZ:[[new Ne(new Tr(.1,0),u.clone()),[0,0,0]]],XY:[[new Ne(new gn(.15,.15,.01),h.clone()),[.15,.15,0]]],YZ:[[new Ne(new gn(.15,.15,.01),l.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new Ne(new gn(.15,.15,.01),c.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},w={X:[[new Ne(new En(.2,0,.6,4),i),[.3,0,0],[0,0,-Math.PI/2]],[new Ne(new En(.2,0,.6,4),i),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new Ne(new En(.2,0,.6,4),i),[0,.3,0]],[new Ne(new En(.2,0,.6,4),i),[0,-.3,0],[0,0,Math.PI]]],Z:[[new Ne(new En(.2,0,.6,4),i),[0,0,.3],[Math.PI/2,0,0]],[new Ne(new En(.2,0,.6,4),i),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new Ne(new Tr(.2,0),i)]],XY:[[new Ne(new gn(.2,.2,.01),i),[.15,.15,0]]],YZ:[[new Ne(new gn(.2,.2,.01),i),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new Ne(new gn(.2,.2,.01),i),[.15,0,.15],[-Math.PI/2,0,0]]]},M={START:[[new Ne(new Tr(.01,2),n),null,null,null,"helper"]],END:[[new Ne(new Tr(.01,2),n),null,null,null,"helper"]],DELTA:[[new Gn(_(),n),null,null,null,"helper"]],X:[[new Gn(g,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Gn(g,n.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Gn(g,n.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},T={XYZE:[[new Ne(x(.5,1),p),null,[0,Math.PI/2,0]]],X:[[new Ne(x(.5,.5),r)]],Y:[[new Ne(x(.5,.5),o),null,[0,0,-Math.PI/2]]],Z:[[new Ne(x(.5,.5),a),null,[0,Math.PI/2,0]]],E:[[new Ne(x(.75,1),d),null,[0,Math.PI/2,0]]]},S={AXIS:[[new Gn(g,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},b={XYZE:[[new Ne(new qs(.25,10,8),i)]],X:[[new Ne(new wr(.5,.1,4,24),i),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new Ne(new wr(.5,.1,4,24),i),[0,0,0],[Math.PI/2,0,0]]],Z:[[new Ne(new wr(.5,.1,4,24),i),[0,0,0],[0,0,-Math.PI/2]]],E:[[new Ne(new wr(.75,.1,2,24),i)]]},U={X:[[new Ne(m,r),[.5,0,0],[0,0,-Math.PI/2]],[new Ne(y,r),[0,0,0],[0,0,-Math.PI/2]],[new Ne(m,r),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new Ne(m,o),[0,.5,0]],[new Ne(y,o)],[new Ne(m,o),[0,-.5,0],[0,0,Math.PI]]],Z:[[new Ne(m,a),[0,0,.5],[Math.PI/2,0,0]],[new Ne(y,a),[0,0,0],[Math.PI/2,0,0]],[new Ne(m,a),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new Ne(new gn(.15,.15,.01),h),[.15,.15,0]]],YZ:[[new Ne(new gn(.15,.15,.01),l),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new Ne(new gn(.15,.15,.01),c),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new Ne(new gn(.1,.1,.1),u.clone())]]},I={X:[[new Ne(new En(.2,0,.6,4),i),[.3,0,0],[0,0,-Math.PI/2]],[new Ne(new En(.2,0,.6,4),i),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new Ne(new En(.2,0,.6,4),i),[0,.3,0]],[new Ne(new En(.2,0,.6,4),i),[0,-.3,0],[0,0,Math.PI]]],Z:[[new Ne(new En(.2,0,.6,4),i),[0,0,.3],[Math.PI/2,0,0]],[new Ne(new En(.2,0,.6,4),i),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new Ne(new gn(.2,.2,.01),i),[.15,.15,0]]],YZ:[[new Ne(new gn(.2,.2,.01),i),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new Ne(new gn(.2,.2,.01),i),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new Ne(new gn(.2,.2,.2),i),[0,0,0]]]},B={X:[[new Gn(g,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Gn(g,n.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Gn(g,n.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function G(j){const N=new Ut;for(const ee in j)for(let W=j[ee].length;W--;){const Y=j[ee][W][0].clone(),Q=j[ee][W][1],z=j[ee][W][2],J=j[ee][W][3],$=j[ee][W][4];Y.name=ee,Y.tag=$,Q&&Y.position.set(Q[0],Q[1],Q[2]),z&&Y.rotation.set(z[0],z[1],z[2]),J&&Y.scale.set(J[0],J[1],J[2]),Y.updateMatrix();const V=Y.geometry.clone();V.applyMatrix4(Y.matrix),Y.geometry=V,Y.renderOrder=1/0,Y.position.set(0,0,0),Y.rotation.set(0,0,0),Y.scale.set(1,1,1),N.add(Y)}return N}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=G(E)),this.add(this.gizmo.rotate=G(T)),this.add(this.gizmo.scale=G(U)),this.add(this.picker.translate=G(w)),this.add(this.picker.rotate=G(b)),this.add(this.picker.scale=G(I)),this.add(this.helper.translate=G(M)),this.add(this.helper.rotate=G(S)),this.add(this.helper.scale=G(B)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(e){const i=(this.mode==="scale"?"local":this.space)==="local"?this.worldQuaternion:bc;this.gizmo.translate.visible=this.mode==="translate",this.gizmo.rotate.visible=this.mode==="rotate",this.gizmo.scale.visible=this.mode==="scale",this.helper.translate.visible=this.mode==="translate",this.helper.rotate.visible=this.mode==="rotate",this.helper.scale.visible=this.mode==="scale";let n=[];n=n.concat(this.picker[this.mode].children),n=n.concat(this.gizmo[this.mode].children),n=n.concat(this.helper[this.mode].children);for(let r=0;r<n.length;r++){const o=n[r];o.visible=!0,o.rotation.set(0,0,0),o.position.copy(this.worldPosition);let a;if(this.camera.isOrthographicCamera?a=(this.camera.top-this.camera.bottom)/this.camera.zoom:a=this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),o.scale.set(1,1,1).multiplyScalar(a*this.size/4),o.tag==="helper"){o.visible=!1,o.name==="AXIS"?(o.visible=!!this.axis,this.axis==="X"&&(sn.setFromEuler(lc.set(0,0,0)),o.quaternion.copy(i).multiply(sn),Math.abs(en.copy(la).applyQuaternion(i).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="Y"&&(sn.setFromEuler(lc.set(0,0,Math.PI/2)),o.quaternion.copy(i).multiply(sn),Math.abs(en.copy(Ts).applyQuaternion(i).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="Z"&&(sn.setFromEuler(lc.set(0,Math.PI/2,0)),o.quaternion.copy(i).multiply(sn),Math.abs(en.copy(ca).applyQuaternion(i).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="XYZE"&&(sn.setFromEuler(lc.set(0,Math.PI/2,0)),en.copy(this.rotationAxis),o.quaternion.setFromRotationMatrix(fg.lookAt(dg,en,Ts)),o.quaternion.multiply(sn),o.visible=this.dragging),this.axis==="E"&&(o.visible=!1)):o.name==="START"?(o.position.copy(this.worldPositionStart),o.visible=this.dragging):o.name==="END"?(o.position.copy(this.worldPosition),o.visible=this.dragging):o.name==="DELTA"?(o.position.copy(this.worldPositionStart),o.quaternion.copy(this.worldQuaternionStart),Qn.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),Qn.applyQuaternion(this.worldQuaternionStart.clone().invert()),o.scale.copy(Qn),o.visible=this.dragging):(o.quaternion.copy(i),this.dragging?o.position.copy(this.worldPositionStart):o.position.copy(this.worldPosition),this.axis&&(o.visible=this.axis.search(o.name)!==-1));continue}o.quaternion.copy(i),this.mode==="translate"||this.mode==="scale"?(o.name==="X"&&Math.abs(en.copy(la).applyQuaternion(i).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="Y"&&Math.abs(en.copy(Ts).applyQuaternion(i).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="Z"&&Math.abs(en.copy(ca).applyQuaternion(i).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="XY"&&Math.abs(en.copy(ca).applyQuaternion(i).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="YZ"&&Math.abs(en.copy(la).applyQuaternion(i).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="XZ"&&Math.abs(en.copy(Ts).applyQuaternion(i).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1)):this.mode==="rotate"&&(cc.copy(i),en.copy(this.eye).applyQuaternion(sn.copy(i).invert()),o.name.search("E")!==-1&&o.quaternion.setFromRotationMatrix(fg.lookAt(this.eye,dg,Ts)),o.name==="X"&&(sn.setFromAxisAngle(la,Math.atan2(-en.y,en.z)),sn.multiplyQuaternions(cc,sn),o.quaternion.copy(sn)),o.name==="Y"&&(sn.setFromAxisAngle(Ts,Math.atan2(en.x,en.z)),sn.multiplyQuaternions(cc,sn),o.quaternion.copy(sn)),o.name==="Z"&&(sn.setFromAxisAngle(ca,Math.atan2(en.y,en.x)),sn.multiplyQuaternions(cc,sn),o.quaternion.copy(sn))),o.visible=o.visible&&(o.name.indexOf("X")===-1||this.showX),o.visible=o.visible&&(o.name.indexOf("Y")===-1||this.showY),o.visible=o.visible&&(o.name.indexOf("Z")===-1||this.showZ),o.visible=o.visible&&(o.name.indexOf("E")===-1||this.showX&&this.showY&&this.showZ),o.material._color=o.material._color||o.material.color.clone(),o.material._opacity=o.material._opacity||o.material.opacity,o.material.color.copy(o.material._color),o.material.opacity=o.material._opacity,this.enabled&&this.axis&&(o.name===this.axis||this.axis.split("").some(function(l){return o.name===l}))&&(o.material.color.setHex(16776960),o.material.opacity=1)}super.updateMatrixWorld(e)}}class s2 extends Ne{constructor(){super(new er(1e5,1e5,2,2),new Ln({visible:!1,wireframe:!0,side:vi,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(e){let t=this.space;switch(this.position.copy(this.worldPosition),this.mode==="scale"&&(t="local"),hc.copy(la).applyQuaternion(t==="local"?this.worldQuaternion:bc),na.copy(Ts).applyQuaternion(t==="local"?this.worldQuaternion:bc),ia.copy(ca).applyQuaternion(t==="local"?this.worldQuaternion:bc),en.copy(na),this.mode){case"translate":case"scale":switch(this.axis){case"X":en.copy(this.eye).cross(hc),ir.copy(hc).cross(en);break;case"Y":en.copy(this.eye).cross(na),ir.copy(na).cross(en);break;case"Z":en.copy(this.eye).cross(ia),ir.copy(ia).cross(en);break;case"XY":ir.copy(ia);break;case"YZ":ir.copy(hc);break;case"XZ":en.copy(ia),ir.copy(na);break;case"XYZ":case"E":ir.set(0,0,0);break}break;case"rotate":default:ir.set(0,0,0)}ir.length()===0?this.quaternion.copy(this.cameraQuaternion):(pg.lookAt(Qn.set(0,0,0),ir,en),this.quaternion.setFromRotationMatrix(pg)),super.updateMatrixWorld(e)}}const Zv=()=>zT("threlte-controls",{orbitControls:ei(void 0),trackballControls:ei(void 0)});var o2=Wn("<!> <!>",1);function a2(s,e){Xn(e,!0);const[t,i]=Xa(),n=()=>Us(h,"$camera",t);let r=He(e,"autoPauseOrbitControls",3,!0),o=He(e,"autoPauseTrackballControls",3,!0),a=He(e,"controls",15),l=He(e,"group",15),c=fr(e,["$$slots","$$events","$$legacy","autoPauseOrbitControls","autoPauseTrackballControls","object","controls","group","children"]);const{camera:h,dom:u,invalidate:d,scene:f}=Li(),{orbitControls:p,trackballControls:v}=Zv(),m=un(!1),g=ei(r()??!0);Pt(()=>g.set(r()??!0));const y=ei(o()??!0);Pt(()=>y.set(o()??!0)),$n([p,m,g],([I,B,G])=>{if(!(!I||!I.enabled&&B))return I.enabled=!(B&&G),()=>{I.enabled=!0}}),$n([v,m,y],([I,B,G])=>{if(!(!I||!I.enabled&&B))return I.enabled=!(B&&G),()=>{I.enabled=!0}});const x=new ki;let _=xt(()=>new JA(n(),u));Pt(()=>{var I;return(I=Ee(_))==null||I.attach(e.object??x),()=>{var B;return(B=Ee(_))==null?void 0:B.detach()}});const E=["enabled","axis","mode","translationSnap","rotationSnap","scaleSnap","space","size","showX","showY","showZ","visible","onmouseDown","onmouseUp","onobjectChange"];let w=jr(Cs({})),M=jr(Cs({}));Pt(()=>{Er(w,{},!0),Er(M,{},!0),Object.keys(c).forEach(I=>{Pt(()=>{E.includes(I)?Ee(w)[I]=c[I]:Ee(M)[I]=c[I]})})});const T=I=>{var B;d(),Ee(_).dragging&&!m.current?m.set(!0):!Ee(_).dragging&&m.current&&m.set(!1),(B=e.onchange)==null||B.call(e,I)};var S=o2(),b=it(S);bt(b,Ir({get is(){return Ee(_)},onchange:T},()=>Ee(w),{attach:({ref:I})=>{const B=I.getHelper();return f.add(B),()=>{f.remove(B)}},dispose:!1,oncreate:I=>()=>I.dispose(),get ref(){return a()},set ref(I){a(I)}}));var U=cn(b,2);bt(U,Ir({is:x},()=>Ee(M),{get ref(){return l()},set ref(I){l(I)},children:(I,B)=>{var G=yt(),j=it(G);{var N=ee=>{var W=yt(),Y=it(W);Bi(Y,()=>e.children,()=>({ref:x})),nt(ee,W)};jt(j,ee=>{e.children&&ee(N)})}nt(I,G)},$$slots:{default:!0}})),nt(s,S),Yn(),i()}function fR(s,e){Xn(e,!0);const[t,i]=Xa(),n=()=>Us(a,"$parent",t);let r=He(e,"ref",15),o=fr(e,["$$slots","$$events","$$legacy","ref","children"]);const a=Of(),{dom:l,invalidate:c}=Li();if(!Pi(n(),"Camera"))throw new Error("Parent missing: <OrbitControls> need to be a child of a <Camera>");const h=new jv(n(),l),{orbitControls:u}=Zv(),{start:d,stop:f}=Xs(()=>{h.update()},{autoStart:!1,autoInvalidate:!1});Pt(()=>{e.autoRotate||e.enableDamping?d():f()}),Pt(()=>{const p=v=>{var m;c(),(m=e.onchange)==null||m.call(e,v)};return u.set(h),h.addEventListener("change",p),()=>{u.set(void 0),h.removeEventListener("change",p)}}),bt(s,Ir({is:h},()=>o,{get ref(){return r()},set ref(p){r(p)},children:(p,v)=>{var m=yt(),g=it(m);Bi(g,()=>e.children??Pr,()=>({ref:h})),nt(p,m)},$$slots:{default:!0}})),Yn(),i()}new rt;new rt;new Ne;function mg(s,e){Xn(e,!0);let t=He(e,"points",19,()=>[]),i=He(e,"shape",3,"none"),n=He(e,"shapeFunction",7,()=>1),r=He(e,"ref",15),o=t().length;const{invalidate:a}=Li(),l=new Tt(new Float32Array(o*6),3),c=new Tt(new Float32Array(o*6),3),h=new Tt(new Float32Array(o*6),3),u=new Tt(new Float32Array(o*2),1),d=new Tt(new Float32Array(o*2),1),f=new Tt(new Float32Array(o*2),1),p=new Tt(new Float32Array(o*4),2),v=new Tt(new Uint16Array(o*6),1);i()==="taper"&&n(y=>1*Math.pow(4*y*(1-y),1));for(let y=0,x=0,_=0,E=0;y<o;y+=1,x+=2,_+=4,E+=6){u.setX(x,y/t().length),u.setX(x+1,y/t().length),d.setX(x,1),d.setX(x+1,-1);const w=i()==="none"?1:n()(y/(o-1));if(f.setX(x,w),f.setX(x+1,w),p.setXYZW(x,y/(o-1),0,y/(o-1),1),y<o-1){const M=y*2;v.setX(E+0,M+0),v.setX(E+1,M+1),v.setX(E+2,M+2),v.setX(E+3,M+2),v.setX(E+4,M+1),v.setX(E+5,M+3)}}const m=new _t;m.setAttribute("position",l),m.setAttribute("previous",c),m.setAttribute("next",h),m.setAttribute("counters",u),m.setAttribute("side",d),m.setAttribute("width",f),m.setAttribute("uv",p),m.setIndex(v);const g=y=>{if(y.length===0||y.length!==o)return;let x=0,_=0,E=0;const w=y[0];c.setXYZ(_,w.x,w.y,w.z),_+=1,c.setXYZ(_,w.x,w.y,w.z),_+=1;for(let T=0;T<o;T++){const S=y[T];l.setXYZ(x,S.x,S.y,S.z),x+=1,l.setXYZ(x,S.x,S.y,S.z),x+=1,T<o-1&&(c.setXYZ(_,S.x,S.y,S.z),_+=1,c.setXYZ(_,S.x,S.y,S.z),_+=1),T>0&&T+1<=o&&(h.setXYZ(E,S.x,S.y,S.z),E+=1,h.setXYZ(E,S.x,S.y,S.z),E+=1)}const M=y[o-1];h.setXYZ(E,M.x,M.y,M.z),E+=1,h.setXYZ(E,M.x,M.y,M.z),E+=1,l.needsUpdate=!0,c.needsUpdate=!0,h.needsUpdate=!0,m.computeBoundingSphere(),a()};Pt(()=>g(t())),bt(s,Ir({is:m},()=>e.props,{get ref(){return r()},set ref(y){r(y)},children:(y,x)=>{var _=yt(),E=it(_);Bi(E,()=>e.children??Pr,()=>({ref:m})),nt(y,_)},$$slots:{default:!0}})),Yn()}`${mt.logdepthbuf_pars_vertex}${mt.fog_pars_vertex}${mt.logdepthbuf_vertex}${mt.fog_vertex}`;function Kv(s,e){Xn(e,!0);const[t,i]=Xa(),n=()=>Us(h,"$camera",t);let r=He(e,"follow",3,!0),o=He(e,"ref",15),a=fr(e,["$$slots","$$events","$$legacy","follow","ref","children"]);const l=new ki,c=new ki,{camera:h,renderStage:u}=Li(),d=new Gt;let f=xt(()=>r()===!0?n():r()===!1?void 0:r());const p=BT("<Billboard>",{before:u}),{start:v,stop:m}=Xs(()=>{var g;c.updateMatrix(),c.updateWorldMatrix(!1,!1),c.getWorldQuaternion(d),(g=Ee(f))==null||g.getWorldQuaternion(l.quaternion).premultiply(d.invert())},{autoStart:!1,stage:p});Pt(()=>{r()?v():m()}),bt(s,Ir({is:c},()=>a,{get ref(){return o()},set ref(g){o(g)},children:(g,y)=>{bt(g,{is:l,children:(x,_)=>{var E=yt(),w=it(E);Bi(w,()=>e.children??Pr,()=>({ref:c})),nt(x,E)},$$slots:{default:!0}})},$$slots:{default:!0}})),Yn(),i()}`${mt.tonemapping_fragment}${mt.colorspace_fragment}`;`${mt.tonemapping_fragment}${mt.colorspace_fragment}`;const l2=`

// A stack of uint32 indices can can store the indices for
// a perfectly balanced tree with a depth up to 31. Lower stack
// depth gets higher performance.
//
// However not all trees are balanced. Best value to set this to
// is the trees max depth.
#ifndef BVH_STACK_DEPTH
#define BVH_STACK_DEPTH 60
#endif

#ifndef INFINITY
#define INFINITY 1e20
#endif

// Utilities
uvec4 uTexelFetch1D( usampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

ivec4 iTexelFetch1D( isampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

vec4 texelFetch1D( sampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

vec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {

	return
		barycoord.x * texelFetch1D( tex, faceIndices.x ) +
		barycoord.y * texelFetch1D( tex, faceIndices.y ) +
		barycoord.z * texelFetch1D( tex, faceIndices.z );

}

void ndcToCameraRay(
	vec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,
	out vec3 rayOrigin, out vec3 rayDirection
) {

	// get camera look direction and near plane for camera clipping
	vec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );
	vec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );
	float near = abs( nearVector.z / nearVector.w );

	// get the camera direction and position from camera matrices
	vec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );
	direction /= direction.w;
	direction = cameraWorld * direction - origin;

	// slide the origin along the ray until it sits at the near clip plane position
	origin.xyz += direction.xyz * near / dot( direction, lookDirection );

	rayOrigin = origin.xyz;
	rayDirection = direction.xyz;

}
`,c2=`

#ifndef TRI_INTERSECT_EPSILON
#define TRI_INTERSECT_EPSILON 1e-5
#endif

// Raycasting
bool intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax, out float dist ) {

	// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/
	// https://tavianator.com/2011/ray_box.html
	vec3 invDir = 1.0 / rayDirection;

	// find intersection distances for each plane
	vec3 tMinPlane = invDir * ( boundsMin - rayOrigin );
	vec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );

	// get the min and max distances from each intersection
	vec3 tMinHit = min( tMaxPlane, tMinPlane );
	vec3 tMaxHit = max( tMaxPlane, tMinPlane );

	// get the furthest hit distance
	vec2 t = max( tMinHit.xx, tMinHit.yz );
	float t0 = max( t.x, t.y );

	// get the minimum hit distance
	t = min( tMaxHit.xx, tMaxHit.yz );
	float t1 = min( t.x, t.y );

	// set distance to 0.0 if the ray starts inside the box
	dist = max( t0, 0.0 );

	return t1 >= dist;

}

bool intersectsTriangle(
	vec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,
	out vec3 barycoord, out vec3 norm, out float dist, out float side
) {

	// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d
	vec3 edge1 = b - a;
	vec3 edge2 = c - a;
	norm = cross( edge1, edge2 );

	float det = - dot( rayDirection, norm );
	float invdet = 1.0 / det;

	vec3 AO = rayOrigin - a;
	vec3 DAO = cross( AO, rayDirection );

	vec4 uvt;
	uvt.x = dot( edge2, DAO ) * invdet;
	uvt.y = - dot( edge1, DAO ) * invdet;
	uvt.z = dot( AO, norm ) * invdet;
	uvt.w = 1.0 - uvt.x - uvt.y;

	// set the hit information
	barycoord = uvt.wxy; // arranged in A, B, C order
	dist = uvt.z;
	side = sign( det );
	norm = side * normalize( norm );

	// add an epsilon to avoid misses between triangles
	uvt += vec4( TRI_INTERSECT_EPSILON );

	return all( greaterThanEqual( uvt, vec4( 0.0 ) ) );

}

bool intersectTriangles(
	// geometry info and triangle range
	sampler2D positionAttr, usampler2D indexAttr, uint offset, uint count,

	// ray
	vec3 rayOrigin, vec3 rayDirection,

	// outputs
	inout float minDistance, inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,
	inout float side, inout float dist
) {

	bool found = false;
	vec3 localBarycoord, localNormal;
	float localDist, localSide;
	for ( uint i = offset, l = offset + count; i < l; i ++ ) {

		uvec3 indices = uTexelFetch1D( indexAttr, i ).xyz;
		vec3 a = texelFetch1D( positionAttr, indices.x ).rgb;
		vec3 b = texelFetch1D( positionAttr, indices.y ).rgb;
		vec3 c = texelFetch1D( positionAttr, indices.z ).rgb;

		if (
			intersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )
			&& localDist < minDistance
		) {

			found = true;
			minDistance = localDist;

			faceIndices = uvec4( indices.xyz, i );
			faceNormal = localNormal;

			side = localSide;
			barycoord = localBarycoord;
			dist = localDist;

		}

	}

	return found;

}

bool intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, sampler2D bvhBounds, uint currNodeIndex, out float dist ) {

	uint cni2 = currNodeIndex * 2u;
	vec3 boundsMin = texelFetch1D( bvhBounds, cni2 ).xyz;
	vec3 boundsMax = texelFetch1D( bvhBounds, cni2 + 1u ).xyz;
	return intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax, dist );

}

// use a macro to hide the fact that we need to expand the struct into separate fields
#define	bvhIntersectFirstHit(		bvh,		rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist	)	_bvhIntersectFirstHit(		bvh.position, bvh.index, bvh.bvhBounds, bvh.bvhContents,		rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist	)

bool _bvhIntersectFirstHit(
	// bvh info
	sampler2D bvh_position, usampler2D bvh_index, sampler2D bvh_bvhBounds, usampler2D bvh_bvhContents,

	// ray
	vec3 rayOrigin, vec3 rayDirection,

	// output variables split into separate variables due to output precision
	inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,
	inout float side, inout float dist
) {

	// stack needs to be twice as long as the deepest tree we expect because
	// we push both the left and right child onto the stack every traversal
	int ptr = 0;
	uint stack[ BVH_STACK_DEPTH ];
	stack[ 0 ] = 0u;

	float triangleDistance = INFINITY;
	bool found = false;
	while ( ptr > - 1 && ptr < BVH_STACK_DEPTH ) {

		uint currNodeIndex = stack[ ptr ];
		ptr --;

		// check if we intersect the current bounds
		float boundsHitDistance;
		if (
			! intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh_bvhBounds, currNodeIndex, boundsHitDistance )
			|| boundsHitDistance > triangleDistance
		) {

			continue;

		}

		uvec2 boundsInfo = uTexelFetch1D( bvh_bvhContents, currNodeIndex ).xy;
		bool isLeaf = bool( boundsInfo.x & 0xffff0000u );

		if ( isLeaf ) {

			uint count = boundsInfo.x & 0x0000ffffu;
			uint offset = boundsInfo.y;

			found = intersectTriangles(
				bvh_position, bvh_index, offset, count,
				rayOrigin, rayDirection, triangleDistance,
				faceIndices, faceNormal, barycoord, side, dist
			) || found;

		} else {

			uint leftIndex = currNodeIndex + 1u;
			uint splitAxis = boundsInfo.x & 0x0000ffffu;
			uint rightIndex = boundsInfo.y;

			bool leftToRight = rayDirection[ splitAxis ] >= 0.0;
			uint c1 = leftToRight ? leftIndex : rightIndex;
			uint c2 = leftToRight ? rightIndex : leftIndex;

			// set c2 in the stack so we traverse it later. We need to keep track of a pointer in
			// the stack while we traverse. The second pointer added is the one that will be
			// traversed first
			ptr ++;
			stack[ ptr ] = c2;

			ptr ++;
			stack[ ptr ] = c1;

		}

	}

	return found;

}
`,h2=`
struct BVH {

	usampler2D index;
	sampler2D position;

	sampler2D bvhBounds;
	usampler2D bvhContents;

};
`,u2=h2,d2=`
	${l2}
	${c2}
`;`${u2}${d2}${mt.tonemapping_fragment}${mt.colorspace_fragment}`;function f2(){var s=Object.create(null);function e(n,r){var o=n.id,a=n.name,l=n.dependencies;l===void 0&&(l=[]);var c=n.init;c===void 0&&(c=function(){});var h=n.getTransferables;if(h===void 0&&(h=null),!s[o])try{l=l.map(function(d){return d&&d.isWorkerModule&&(e(d,function(f){if(f instanceof Error)throw f}),d=s[d.id].value),d}),c=i("<"+a+">.init",c),h&&(h=i("<"+a+">.getTransferables",h));var u=null;typeof c=="function"?u=c.apply(void 0,l):console.error("worker module init function failed to rehydrate"),s[o]={id:o,value:u,getTransferables:h},r(u)}catch(d){d&&d.noLog||console.error(d),r(d)}}function t(n,r){var o,a=n.id,l=n.args;(!s[a]||typeof s[a].value!="function")&&r(new Error("Worker module "+a+": not found or its 'init' did not return a function"));try{var c=(o=s[a]).value.apply(o,l);c&&typeof c.then=="function"?c.then(h,function(u){return r(u instanceof Error?u:new Error(""+u))}):h(c)}catch(u){r(u)}function h(u){try{var d=s[a].getTransferables&&s[a].getTransferables(u);(!d||!Array.isArray(d)||!d.length)&&(d=void 0),r(u,d)}catch(f){console.error(f),r(f)}}}function i(n,r){var o=void 0;self.troikaDefine=function(l){return o=l};var a=URL.createObjectURL(new Blob(["/** "+n.replace(/\*/g,"")+` **/

troikaDefine(
`+r+`
)`],{type:"application/javascript"}));try{importScripts(a)}catch(l){console.error(l)}return URL.revokeObjectURL(a),delete self.troikaDefine,o}self.addEventListener("message",function(n){var r=n.data,o=r.messageId,a=r.action,l=r.data;try{a==="registerModule"&&e(l,function(c){c instanceof Error?postMessage({messageId:o,success:!1,error:c.message}):postMessage({messageId:o,success:!0,result:{isCallable:typeof c=="function"}})}),a==="callModule"&&t(l,function(c,h){c instanceof Error?postMessage({messageId:o,success:!1,error:c.message}):postMessage({messageId:o,success:!0,result:c},h||void 0)})}catch(c){postMessage({messageId:o,success:!1,error:c.stack})}})}function p2(s){var e=function(){for(var t=[],i=arguments.length;i--;)t[i]=arguments[i];return e._getInitResult().then(function(n){if(typeof n=="function")return n.apply(void 0,t);throw new Error("Worker module function was called but `init` did not return a callable function")})};return e._getInitResult=function(){var t=s.dependencies,i=s.init;t=Array.isArray(t)?t.map(function(r){return r&&(r=r.onMainThread||r,r._getInitResult&&(r=r._getInitResult())),r}):[];var n=Promise.all(t).then(function(r){return i.apply(null,r)});return e._getInitResult=function(){return n},n},e}var Jv=function(){var s=!1;if(typeof window<"u"&&typeof window.document<"u")try{var e=new Worker(URL.createObjectURL(new Blob([""],{type:"application/javascript"})));e.terminate(),s=!0}catch(t){console.log("Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: ["+t.message+"]")}return Jv=function(){return s},s},m2=0,g2=0,ld=!1,wa=Object.create(null),Ea=Object.create(null),Nd=Object.create(null);function ko(s){if((!s||typeof s.init!="function")&&!ld)throw new Error("requires `options.init` function");var e=s.dependencies,t=s.init,i=s.getTransferables,n=s.workerId,r=p2(s);n==null&&(n="#default");var o="workerModule"+ ++m2,a=s.name||o,l=null;e=e&&e.map(function(h){return typeof h=="function"&&!h.workerModuleData&&(ld=!0,h=ko({workerId:n,name:"<"+a+"> function dependency: "+h.name,init:`function(){return (
`+Sc(h)+`
)}`}),ld=!1),h&&h.workerModuleData&&(h=h.workerModuleData),h});function c(){for(var h=[],u=arguments.length;u--;)h[u]=arguments[u];if(!Jv())return r.apply(void 0,h);if(!l){l=gg(n,"registerModule",c.workerModuleData);var d=function(){l=null,Ea[n].delete(d)};(Ea[n]||(Ea[n]=new Set)).add(d)}return l.then(function(f){var p=f.isCallable;if(p)return gg(n,"callModule",{id:o,args:h});throw new Error("Worker module function was called but `init` did not return a callable function")})}return c.workerModuleData={isWorkerModule:!0,id:o,name:a,dependencies:e,init:Sc(t),getTransferables:i&&Sc(i)},c.onMainThread=r,c}function v2(s){Ea[s]&&Ea[s].forEach(function(e){e()}),wa[s]&&(wa[s].terminate(),delete wa[s])}function Sc(s){var e=s.toString();return!/^function/.test(e)&&/^\w+\s*\(/.test(e)&&(e="function "+e),e}function _2(s){var e=wa[s];if(!e){var t=Sc(f2);e=wa[s]=new Worker(URL.createObjectURL(new Blob(["/** Worker Module Bootstrap: "+s.replace(/\*/g,"")+` **/

;(`+t+")()"],{type:"application/javascript"}))),e.onmessage=function(i){var n=i.data,r=n.messageId,o=Nd[r];if(!o)throw new Error("WorkerModule response with empty or unknown messageId");delete Nd[r],o(n)}}return e}function gg(s,e,t){return new Promise(function(i,n){var r=++g2;Nd[r]=function(o){o.success?i(o.result):n(new Error("Error in worker "+e+" call: "+o.error))},_2(s).postMessage({messageId:r,action:e,data:t})})}function Qv(){var s=function(e){function t(Y,Q,z,J,$,V,H,K){var q=1-H;K.x=q*q*Y+2*q*H*z+H*H*$,K.y=q*q*Q+2*q*H*J+H*H*V}function i(Y,Q,z,J,$,V,H,K,q,re){var be=1-q;re.x=be*be*be*Y+3*be*be*q*z+3*be*q*q*$+q*q*q*H,re.y=be*be*be*Q+3*be*be*q*J+3*be*q*q*V+q*q*q*K}function n(Y,Q){for(var z=/([MLQCZ])([^MLQCZ]*)/g,J,$,V,H,K;J=z.exec(Y);){var q=J[2].replace(/^\s*|\s*$/g,"").split(/[,\s]+/).map(function(re){return parseFloat(re)});switch(J[1]){case"M":H=$=q[0],K=V=q[1];break;case"L":(q[0]!==H||q[1]!==K)&&Q("L",H,K,H=q[0],K=q[1]);break;case"Q":{Q("Q",H,K,H=q[2],K=q[3],q[0],q[1]);break}case"C":{Q("C",H,K,H=q[4],K=q[5],q[0],q[1],q[2],q[3]);break}case"Z":(H!==$||K!==V)&&Q("L",H,K,$,V);break}}}function r(Y,Q,z){z===void 0&&(z=16);var J={x:0,y:0};n(Y,function($,V,H,K,q,re,be,Se,Me){switch($){case"L":Q(V,H,K,q);break;case"Q":{for(var ye=V,We=H,X=1;X<z;X++)t(V,H,re,be,K,q,X/(z-1),J),Q(ye,We,J.x,J.y),ye=J.x,We=J.y;break}case"C":{for(var Fe=V,he=H,ue=1;ue<z;ue++)i(V,H,re,be,Se,Me,K,q,ue/(z-1),J),Q(Fe,he,J.x,J.y),Fe=J.x,he=J.y;break}}})}var o="precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",a="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}",l=new WeakMap,c={premultipliedAlpha:!1,preserveDrawingBuffer:!0,antialias:!1,depth:!1};function h(Y,Q){var z=Y.getContext?Y.getContext("webgl",c):Y,J=l.get(z);if(!J){let be=function(Fe){var he=V[Fe];if(!he&&(he=V[Fe]=z.getExtension(Fe),!he))throw new Error(Fe+" not supported");return he},Se=function(Fe,he){var ue=z.createShader(he);return z.shaderSource(ue,Fe),z.compileShader(ue),ue},Me=function(Fe,he,ue,ne){if(!H[Fe]){var _e={},le={},P=z.createProgram();z.attachShader(P,Se(he,z.VERTEX_SHADER)),z.attachShader(P,Se(ue,z.FRAGMENT_SHADER)),z.linkProgram(P),H[Fe]={program:P,transaction:function(Z){z.useProgram(P),Z({setUniform:function(se,de){for(var we=[],ve=arguments.length-2;ve-- >0;)we[ve]=arguments[ve+2];var Ae=le[de]||(le[de]=z.getUniformLocation(P,de));z["uniform"+se].apply(z,[Ae].concat(we))},setAttribute:function(se,de,we,ve,Ae){var Xe=_e[se];Xe||(Xe=_e[se]={buf:z.createBuffer(),loc:z.getAttribLocation(P,se),data:null}),z.bindBuffer(z.ARRAY_BUFFER,Xe.buf),z.vertexAttribPointer(Xe.loc,de,z.FLOAT,!1,0,0),z.enableVertexAttribArray(Xe.loc),$?z.vertexAttribDivisor(Xe.loc,ve):be("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(Xe.loc,ve),Ae!==Xe.data&&(z.bufferData(z.ARRAY_BUFFER,Ae,we),Xe.data=Ae)}})}}}H[Fe].transaction(ne)},ye=function(Fe,he){q++;try{z.activeTexture(z.TEXTURE0+q);var ue=K[Fe];ue||(ue=K[Fe]=z.createTexture(),z.bindTexture(z.TEXTURE_2D,ue),z.texParameteri(z.TEXTURE_2D,z.TEXTURE_MIN_FILTER,z.NEAREST),z.texParameteri(z.TEXTURE_2D,z.TEXTURE_MAG_FILTER,z.NEAREST)),z.bindTexture(z.TEXTURE_2D,ue),he(ue,q)}finally{q--}},We=function(Fe,he,ue){var ne=z.createFramebuffer();re.push(ne),z.bindFramebuffer(z.FRAMEBUFFER,ne),z.activeTexture(z.TEXTURE0+he),z.bindTexture(z.TEXTURE_2D,Fe),z.framebufferTexture2D(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_2D,Fe,0);try{ue(ne)}finally{z.deleteFramebuffer(ne),z.bindFramebuffer(z.FRAMEBUFFER,re[--re.length-1]||null)}},X=function(){V={},H={},K={},q=-1,re.length=0};var $=typeof WebGL2RenderingContext<"u"&&z instanceof WebGL2RenderingContext,V={},H={},K={},q=-1,re=[];z.canvas.addEventListener("webglcontextlost",function(Fe){X(),Fe.preventDefault()},!1),l.set(z,J={gl:z,isWebGL2:$,getExtension:be,withProgram:Me,withTexture:ye,withTextureFramebuffer:We,handleContextLoss:X})}Q(J)}function u(Y,Q,z,J,$,V,H,K){H===void 0&&(H=15),K===void 0&&(K=null),h(Y,function(q){var re=q.gl,be=q.withProgram,Se=q.withTexture;Se("copy",function(Me,ye){re.texImage2D(re.TEXTURE_2D,0,re.RGBA,$,V,0,re.RGBA,re.UNSIGNED_BYTE,Q),be("copy",o,a,function(We){var X=We.setUniform,Fe=We.setAttribute;Fe("aUV",2,re.STATIC_DRAW,0,new Float32Array([0,0,2,0,0,2])),X("1i","image",ye),re.bindFramebuffer(re.FRAMEBUFFER,K||null),re.disable(re.BLEND),re.colorMask(H&8,H&4,H&2,H&1),re.viewport(z,J,$,V),re.scissor(z,J,$,V),re.drawArrays(re.TRIANGLES,0,3)})})})}function d(Y,Q,z){var J=Y.width,$=Y.height;h(Y,function(V){var H=V.gl,K=new Uint8Array(J*$*4);H.readPixels(0,0,J,$,H.RGBA,H.UNSIGNED_BYTE,K),Y.width=Q,Y.height=z,u(H,K,0,0,J,$)})}var f=Object.freeze({__proto__:null,withWebGLContext:h,renderImageData:u,resizeWebGLCanvasWithoutClearing:d});function p(Y,Q,z,J,$,V){V===void 0&&(V=1);var H=new Uint8Array(Y*Q),K=J[2]-J[0],q=J[3]-J[1],re=[];r(z,function(Fe,he,ue,ne){re.push({x1:Fe,y1:he,x2:ue,y2:ne,minX:Math.min(Fe,ue),minY:Math.min(he,ne),maxX:Math.max(Fe,ue),maxY:Math.max(he,ne)})}),re.sort(function(Fe,he){return Fe.maxX-he.maxX});for(var be=0;be<Y;be++)for(var Se=0;Se<Q;Se++){var Me=We(J[0]+K*(be+.5)/Y,J[1]+q*(Se+.5)/Q),ye=Math.pow(1-Math.abs(Me)/$,V)/2;Me<0&&(ye=1-ye),ye=Math.max(0,Math.min(255,Math.round(ye*255))),H[Se*Y+be]=ye}return H;function We(Fe,he){for(var ue=1/0,ne=1/0,_e=re.length;_e--;){var le=re[_e];if(le.maxX+ne<=Fe)break;if(Fe+ne>le.minX&&he-ne<le.maxY&&he+ne>le.minY){var P=g(Fe,he,le.x1,le.y1,le.x2,le.y2);P<ue&&(ue=P,ne=Math.sqrt(ue))}}return X(Fe,he)&&(ne=-ne),ne}function X(Fe,he){for(var ue=0,ne=re.length;ne--;){var _e=re[ne];if(_e.maxX<=Fe)break;var le=_e.y1>he!=_e.y2>he&&Fe<(_e.x2-_e.x1)*(he-_e.y1)/(_e.y2-_e.y1)+_e.x1;le&&(ue+=_e.y1<_e.y2?1:-1)}return ue!==0}}function v(Y,Q,z,J,$,V,H,K,q,re){V===void 0&&(V=1),K===void 0&&(K=0),q===void 0&&(q=0),re===void 0&&(re=0),m(Y,Q,z,J,$,V,H,null,K,q,re)}function m(Y,Q,z,J,$,V,H,K,q,re,be){V===void 0&&(V=1),q===void 0&&(q=0),re===void 0&&(re=0),be===void 0&&(be=0);for(var Se=p(Y,Q,z,J,$,V),Me=new Uint8Array(Se.length*4),ye=0;ye<Se.length;ye++)Me[ye*4+be]=Se[ye];u(H,Me,q,re,Y,Q,1<<3-be,K)}function g(Y,Q,z,J,$,V){var H=$-z,K=V-J,q=H*H+K*K,re=q?Math.max(0,Math.min(1,((Y-z)*H+(Q-J)*K)/q)):0,be=Y-(z+re*H),Se=Q-(J+re*K);return be*be+Se*Se}var y=Object.freeze({__proto__:null,generate:p,generateIntoCanvas:v,generateIntoFramebuffer:m}),x="precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",_="precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}",E="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}",w=new Float32Array([0,0,2,0,0,2]),M=null,T=!1,S={},b=new WeakMap;function U(Y){if(!T&&!j(Y))throw new Error("WebGL generation not supported")}function I(Y,Q,z,J,$,V,H){if(V===void 0&&(V=1),H===void 0&&(H=null),!H&&(H=M,!H)){var K=typeof OffscreenCanvas=="function"?new OffscreenCanvas(1,1):typeof document<"u"?document.createElement("canvas"):null;if(!K)throw new Error("OffscreenCanvas or DOM canvas not supported");H=M=K.getContext("webgl",{depth:!1})}U(H);var q=new Uint8Array(Y*Q*4);h(H,function(Me){var ye=Me.gl,We=Me.withTexture,X=Me.withTextureFramebuffer;We("readable",function(Fe,he){ye.texImage2D(ye.TEXTURE_2D,0,ye.RGBA,Y,Q,0,ye.RGBA,ye.UNSIGNED_BYTE,null),X(Fe,he,function(ue){G(Y,Q,z,J,$,V,ye,ue,0,0,0),ye.readPixels(0,0,Y,Q,ye.RGBA,ye.UNSIGNED_BYTE,q)})})});for(var re=new Uint8Array(Y*Q),be=0,Se=0;be<q.length;be+=4)re[Se++]=q[be];return re}function B(Y,Q,z,J,$,V,H,K,q,re){V===void 0&&(V=1),K===void 0&&(K=0),q===void 0&&(q=0),re===void 0&&(re=0),G(Y,Q,z,J,$,V,H,null,K,q,re)}function G(Y,Q,z,J,$,V,H,K,q,re,be){V===void 0&&(V=1),q===void 0&&(q=0),re===void 0&&(re=0),be===void 0&&(be=0),U(H);var Se=[];r(z,function(Me,ye,We,X){Se.push(Me,ye,We,X)}),Se=new Float32Array(Se),h(H,function(Me){var ye=Me.gl,We=Me.isWebGL2,X=Me.getExtension,Fe=Me.withProgram,he=Me.withTexture,ue=Me.withTextureFramebuffer,ne=Me.handleContextLoss;if(he("rawDistances",function(_e,le){(Y!==_e._lastWidth||Q!==_e._lastHeight)&&ye.texImage2D(ye.TEXTURE_2D,0,ye.RGBA,_e._lastWidth=Y,_e._lastHeight=Q,0,ye.RGBA,ye.UNSIGNED_BYTE,null),Fe("main",x,_,function(P){var A=P.setAttribute,Z=P.setUniform,ae=!We&&X("ANGLE_instanced_arrays"),se=!We&&X("EXT_blend_minmax");A("aUV",2,ye.STATIC_DRAW,0,w),A("aLineSegment",4,ye.DYNAMIC_DRAW,1,Se),Z.apply(void 0,["4f","uGlyphBounds"].concat(J)),Z("1f","uMaxDistance",$),Z("1f","uExponent",V),ue(_e,le,function(de){ye.enable(ye.BLEND),ye.colorMask(!0,!0,!0,!0),ye.viewport(0,0,Y,Q),ye.scissor(0,0,Y,Q),ye.blendFunc(ye.ONE,ye.ONE),ye.blendEquationSeparate(ye.FUNC_ADD,We?ye.MAX:se.MAX_EXT),ye.clear(ye.COLOR_BUFFER_BIT),We?ye.drawArraysInstanced(ye.TRIANGLES,0,3,Se.length/4):ae.drawArraysInstancedANGLE(ye.TRIANGLES,0,3,Se.length/4)})}),Fe("post",o,E,function(P){P.setAttribute("aUV",2,ye.STATIC_DRAW,0,w),P.setUniform("1i","tex",le),ye.bindFramebuffer(ye.FRAMEBUFFER,K),ye.disable(ye.BLEND),ye.colorMask(be===0,be===1,be===2,be===3),ye.viewport(q,re,Y,Q),ye.scissor(q,re,Y,Q),ye.drawArrays(ye.TRIANGLES,0,3)})}),ye.isContextLost())throw ne(),new Error("webgl context lost")})}function j(Y){var Q=!Y||Y===M?S:Y.canvas||Y,z=b.get(Q);if(z===void 0){T=!0;var J=null;try{var $=[97,106,97,61,99,137,118,80,80,118,137,99,61,97,106,97],V=I(4,4,"M8,8L16,8L24,24L16,24Z",[0,0,32,32],24,1,Y);z=V&&$.length===V.length&&V.every(function(H,K){return H===$[K]}),z||(J="bad trial run results",console.info($,V))}catch(H){z=!1,J=H.message}J&&console.warn("WebGL SDF generation not supported:",J),T=!1,b.set(Q,z)}return z}var N=Object.freeze({__proto__:null,generate:I,generateIntoCanvas:B,generateIntoFramebuffer:G,isSupported:j});function ee(Y,Q,z,J,$,V){$===void 0&&($=Math.max(J[2]-J[0],J[3]-J[1])/2),V===void 0&&(V=1);try{return I.apply(N,arguments)}catch(H){return console.info("WebGL SDF generation failed, falling back to JS",H),p.apply(y,arguments)}}function W(Y,Q,z,J,$,V,H,K,q,re){$===void 0&&($=Math.max(J[2]-J[0],J[3]-J[1])/2),V===void 0&&(V=1),K===void 0&&(K=0),q===void 0&&(q=0),re===void 0&&(re=0);try{return B.apply(N,arguments)}catch(be){return console.info("WebGL SDF generation failed, falling back to JS",be),v.apply(y,arguments)}}return e.forEachPathCommand=n,e.generate=ee,e.generateIntoCanvas=W,e.javascript=y,e.pathToLineSegments=r,e.webgl=N,e.webglUtils=f,Object.defineProperty(e,"__esModule",{value:!0}),e}({});return s}function y2(){var s=function(e){var t={R:"13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73",EN:"1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9",ES:"17,2,6dp+1,f+1,av,16vr,mx+1,4o,2",ET:"z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj",AN:"16o+5,2j+9,2+1,35,ed,1ff2+9,87+u",CS:"18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b",B:"a,3,f+2,2v,690",S:"9,2,k",WS:"c,k,4f4,1vk+a,u,1j,335",ON:"x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i",BN:"0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1",NSM:"lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n",AL:"16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d",LRO:"6ct",RLO:"6cu",LRE:"6cq",RLE:"6cr",PDF:"6cs",LRI:"6ee",RLI:"6ef",FSI:"6eg",PDI:"6eh"},i={},n={};i.L=1,n[1]="L",Object.keys(t).forEach(function(ne,_e){i[ne]=1<<_e+1,n[i[ne]]=ne}),Object.freeze(i);var r=i.LRI|i.RLI|i.FSI,o=i.L|i.R|i.AL,a=i.B|i.S|i.WS|i.ON|i.FSI|i.LRI|i.RLI|i.PDI,l=i.BN|i.RLE|i.LRE|i.RLO|i.LRO|i.PDF,c=i.S|i.WS|i.B|r|i.PDI|l,h=null;function u(){if(!h){h=new Map;var ne=function(le){if(t.hasOwnProperty(le)){var P=0;t[le].split(",").forEach(function(A){var Z=A.split("+"),ae=Z[0],se=Z[1];ae=parseInt(ae,36),se=se?parseInt(se,36):0,h.set(P+=ae,i[le]);for(var de=0;de<se;de++)h.set(++P,i[le])})}};for(var _e in t)ne(_e)}}function d(ne){return u(),h.get(ne.codePointAt(0))||i.L}function f(ne){return n[d(ne)]}var p={pairs:"14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1",canonical:"6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye"};function v(ne,_e){var le=36,P=0,A=new Map,Z=_e&&new Map,ae;return ne.split(",").forEach(function se(de){if(de.indexOf("+")!==-1)for(var we=+de;we--;)se(ae);else{ae=de;var ve=de.split(">"),Ae=ve[0],Xe=ve[1];Ae=String.fromCodePoint(P+=parseInt(Ae,le)),Xe=String.fromCodePoint(P+=parseInt(Xe,le)),A.set(Ae,Xe),_e&&Z.set(Xe,Ae)}}),{map:A,reverseMap:Z}}var m,g,y;function x(){if(!m){var ne=v(p.pairs,!0),_e=ne.map,le=ne.reverseMap;m=_e,g=le,y=v(p.canonical,!1).map}}function _(ne){return x(),m.get(ne)||null}function E(ne){return x(),g.get(ne)||null}function w(ne){return x(),y.get(ne)||null}var M=i.L,T=i.R,S=i.EN,b=i.ES,U=i.ET,I=i.AN,B=i.CS,G=i.B,j=i.S,N=i.ON,ee=i.BN,W=i.NSM,Y=i.AL,Q=i.LRO,z=i.RLO,J=i.LRE,$=i.RLE,V=i.PDF,H=i.LRI,K=i.RLI,q=i.FSI,re=i.PDI;function be(ne,_e){for(var le=125,P=new Uint32Array(ne.length),A=0;A<ne.length;A++)P[A]=d(ne[A]);var Z=new Map;function ae(ui,Wi){var di=P[ui];P[ui]=Wi,Z.set(di,Z.get(di)-1),di&a&&Z.set(a,Z.get(a)-1),Z.set(Wi,(Z.get(Wi)||0)+1),Wi&a&&Z.set(a,(Z.get(a)||0)+1)}for(var se=new Uint8Array(ne.length),de=new Map,we=[],ve=null,Ae=0;Ae<ne.length;Ae++)ve||we.push(ve={start:Ae,end:ne.length-1,level:_e==="rtl"?1:_e==="ltr"?0:$f(Ae,!1)}),P[Ae]&G&&(ve.end=Ae,ve=null);for(var Xe=$|J|z|Q|r|re|V|G,Re=function(ui){return ui+(ui&1?1:2)},Oe=function(ui){return ui+(ui&1?2:1)},ke=0;ke<we.length;ke++){ve=we[ke];var ze=[{_level:ve.level,_override:0,_isolate:0}],Te=void 0,ht=0,Qe=0,St=0;Z.clear();for(var te=ve.start;te<=ve.end;te++){var Ce=P[te];if(Te=ze[ze.length-1],Z.set(Ce,(Z.get(Ce)||0)+1),Ce&a&&Z.set(a,(Z.get(a)||0)+1),Ce&Xe)if(Ce&($|J)){se[te]=Te._level;var fe=(Ce===$?Oe:Re)(Te._level);fe<=le&&!ht&&!Qe?ze.push({_level:fe,_override:0,_isolate:0}):ht||Qe++}else if(Ce&(z|Q)){se[te]=Te._level;var Pe=(Ce===z?Oe:Re)(Te._level);Pe<=le&&!ht&&!Qe?ze.push({_level:Pe,_override:Ce&z?T:M,_isolate:0}):ht||Qe++}else if(Ce&r){Ce&q&&(Ce=$f(te+1,!0)===1?K:H),se[te]=Te._level,Te._override&&ae(te,Te._override);var Ue=(Ce===K?Oe:Re)(Te._level);Ue<=le&&ht===0&&Qe===0?(St++,ze.push({_level:Ue,_override:0,_isolate:1,_isolInitIndex:te})):ht++}else if(Ce&re){if(ht>0)ht--;else if(St>0){for(Qe=0;!ze[ze.length-1]._isolate;)ze.pop();var Ie=ze[ze.length-1]._isolInitIndex;Ie!=null&&(de.set(Ie,te),de.set(te,Ie)),ze.pop(),St--}Te=ze[ze.length-1],se[te]=Te._level,Te._override&&ae(te,Te._override)}else Ce&V?(ht===0&&(Qe>0?Qe--:!Te._isolate&&ze.length>1&&(ze.pop(),Te=ze[ze.length-1])),se[te]=Te._level):Ce&G&&(se[te]=ve.level);else se[te]=Te._level,Te._override&&Ce!==ee&&ae(te,Te._override)}for(var st=[],vt=null,lt=ve.start;lt<=ve.end;lt++){var tt=P[lt];if(!(tt&l)){var Ht=se[lt],Zt=tt&r,nn=tt===re;vt&&Ht===vt._level?(vt._end=lt,vt._endsWithIsolInit=Zt):st.push(vt={_start:lt,_end:lt,_level:Ht,_startsWithPDI:nn,_endsWithIsolInit:Zt})}}for(var qn=[],Pn=0;Pn<st.length;Pn++){var ri=st[Pn];if(!ri._startsWithPDI||ri._startsWithPDI&&!de.has(ri._start)){for(var wi=[vt=ri],Ei=void 0;vt&&vt._endsWithIsolInit&&(Ei=de.get(vt._end))!=null;)for(var jn=Pn+1;jn<st.length;jn++)if(st[jn]._start===Ei){wi.push(vt=st[jn]);break}for(var vn=[],hi=0;hi<wi.length;hi++)for(var ns=wi[hi],Lr=ns._start;Lr<=ns._end;Lr++)vn.push(Lr);for(var Bo=se[vn[0]],Js=ve.level,Nr=vn[0]-1;Nr>=0;Nr--)if(!(P[Nr]&l)){Js=se[Nr];break}var is=vn[vn.length-1],zo=se[is],Qs=ve.level;if(!(P[is]&r)){for(var O=is+1;O<=ve.end;O++)if(!(P[O]&l)){Qs=se[O];break}}qn.push({_seqIndices:vn,_sosType:Math.max(Js,Bo)%2?T:M,_eosType:Math.max(Qs,zo)%2?T:M})}}for(var oe=0;oe<qn.length;oe++){var pe=qn[oe],ie=pe._seqIndices,ce=pe._sosType,Le=pe._eosType,Ve=se[ie[0]]&1?T:M;if(Z.get(W))for(var Ze=0;Ze<ie.length;Ze++){var Je=ie[Ze];if(P[Je]&W){for(var gt=ce,ft=Ze-1;ft>=0;ft--)if(!(P[ie[ft]]&l)){gt=P[ie[ft]];break}ae(Je,gt&(r|re)?N:gt)}}if(Z.get(S))for(var ct=0;ct<ie.length;ct++){var Et=ie[ct];if(P[Et]&S)for(var Nt=ct-1;Nt>=-1;Nt--){var tn=Nt===-1?ce:P[ie[Nt]];if(tn&o){tn===Y&&ae(Et,I);break}}}if(Z.get(Y))for(var Kt=0;Kt<ie.length;Kt++){var Lt=ie[Kt];P[Lt]&Y&&ae(Lt,T)}if(Z.get(b)||Z.get(B))for(var ut=1;ut<ie.length-1;ut++){var an=ie[ut];if(P[an]&(b|B)){for(var It=0,In=0,Wt=ut-1;Wt>=0&&(It=P[ie[Wt]],!!(It&l));Wt--);for(var _n=ut+1;_n<ie.length&&(In=P[ie[_n]],!!(In&l));_n++);It===In&&(P[an]===b?It===S:It&(S|I))&&ae(an,It)}}if(Z.get(S))for(var Dn=0;Dn<ie.length;Dn++){var Yt=ie[Dn];if(P[Yt]&S){for(var Mn=Dn-1;Mn>=0&&P[ie[Mn]]&(U|l);Mn--)ae(ie[Mn],S);for(Dn++;Dn<ie.length&&P[ie[Dn]]&(U|l|S);Dn++)P[ie[Dn]]!==S&&ae(ie[Dn],S)}}if(Z.get(U)||Z.get(b)||Z.get(B))for(var pn=0;pn<ie.length;pn++){var ln=ie[pn];if(P[ln]&(U|b|B)){ae(ln,N);for(var rn=pn-1;rn>=0&&P[ie[rn]]&l;rn--)ae(ie[rn],N);for(var Vi=pn+1;Vi<ie.length&&P[ie[Vi]]&l;Vi++)ae(ie[Vi],N)}}if(Z.get(S))for(var Ti=0,pt=ce;Ti<ie.length;Ti++){var rs=ie[Ti],R=P[rs];R&S?pt===M&&ae(rs,M):R&o&&(pt=R)}if(Z.get(a)){var C=T|S|I,F=C|M,L=[];{for(var k=[],me=0;me<ie.length;me++)if(P[ie[me]]&a){var xe=ne[ie[me]],Ke=void 0;if(_(xe)!==null)if(k.length<63)k.push({char:xe,seqIndex:me});else break;else if((Ke=E(xe))!==null)for(var Ge=k.length-1;Ge>=0;Ge--){var qe=k[Ge].char;if(qe===Ke||qe===E(w(xe))||_(w(qe))===xe){L.push([k[Ge].seqIndex,me]),k.length=Ge;break}}}L.sort(function(ui,Wi){return ui[0]-Wi[0]})}for(var at=0;at<L.length;at++){for(var De=L[at],ot=De[0],$e=De[1],dt=!1,et=0,Qt=ot+1;Qt<$e;Qt++){var zt=ie[Qt];if(P[zt]&F){dt=!0;var Ft=P[zt]&C?T:M;if(Ft===Ve){et=Ft;break}}}if(dt&&!et){et=ce;for(var Ot=ot-1;Ot>=0;Ot--){var Ni=ie[Ot];if(P[Ni]&F){var On=P[Ni]&C?T:M;On!==Ve?et=On:et=Ve;break}}}if(et){if(P[ie[ot]]=P[ie[$e]]=et,et!==Ve){for(var Oi=ot+1;Oi<ie.length;Oi++)if(!(P[ie[Oi]]&l)){d(ne[ie[Oi]])&W&&(P[ie[Oi]]=et);break}}if(et!==Ve){for(var ss=$e+1;ss<ie.length;ss++)if(!(P[ie[ss]]&l)){d(ne[ie[ss]])&W&&(P[ie[ss]]=et);break}}}}for(var Hi=0;Hi<ie.length;Hi++)if(P[ie[Hi]]&a){for(var Jf=Hi,iu=Hi,ru=ce,Go=Hi-1;Go>=0;Go--)if(P[ie[Go]]&l)Jf=Go;else{ru=P[ie[Go]]&C?T:M;break}for(var Qf=Le,Vo=Hi+1;Vo<ie.length;Vo++)if(P[ie[Vo]]&(a|l))iu=Vo;else{Qf=P[ie[Vo]]&C?T:M;break}for(var su=Jf;su<=iu;su++)P[ie[su]]=ru===Qf?ru:Ve;Hi=iu}}}for(var Ai=ve.start;Ai<=ve.end;Ai++){var y_=se[Ai],ol=P[Ai];if(y_&1?ol&(M|S|I)&&se[Ai]++:ol&T?se[Ai]++:ol&(I|S)&&(se[Ai]+=2),ol&l&&(se[Ai]=Ai===0?ve.level:se[Ai-1]),Ai===ve.end||d(ne[Ai])&(j|G))for(var al=Ai;al>=0&&d(ne[al])&c;al--)se[al]=ve.level}}return{levels:se,paragraphs:we};function $f(ui,Wi){for(var di=ui;di<ne.length;di++){var Or=P[di];if(Or&(T|Y))return 1;if(Or&(G|M)||Wi&&Or===re)return 0;if(Or&r){var ep=x_(di);di=ep===-1?ne.length:ep}}return 0}function x_(ui){for(var Wi=1,di=ui+1;di<ne.length;di++){var Or=P[di];if(Or&G)break;if(Or&re){if(--Wi===0)return di}else Or&r&&Wi++}return-1}}var Se="14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1",Me;function ye(){if(!Me){var ne=v(Se,!0),_e=ne.map,le=ne.reverseMap;le.forEach(function(P,A){_e.set(A,P)}),Me=_e}}function We(ne){return ye(),Me.get(ne)||null}function X(ne,_e,le,P){var A=ne.length;le=Math.max(0,le==null?0:+le),P=Math.min(A-1,P==null?A-1:+P);for(var Z=new Map,ae=le;ae<=P;ae++)if(_e[ae]&1){var se=We(ne[ae]);se!==null&&Z.set(ae,se)}return Z}function Fe(ne,_e,le,P){var A=ne.length;le=Math.max(0,le==null?0:+le),P=Math.min(A-1,P==null?A-1:+P);var Z=[];return _e.paragraphs.forEach(function(ae){var se=Math.max(le,ae.start),de=Math.min(P,ae.end);if(se<de){for(var we=_e.levels.slice(se,de+1),ve=de;ve>=se&&d(ne[ve])&c;ve--)we[ve]=ae.level;for(var Ae=ae.level,Xe=1/0,Re=0;Re<we.length;Re++){var Oe=we[Re];Oe>Ae&&(Ae=Oe),Oe<Xe&&(Xe=Oe|1)}for(var ke=Ae;ke>=Xe;ke--)for(var ze=0;ze<we.length;ze++)if(we[ze]>=ke){for(var Te=ze;ze+1<we.length&&we[ze+1]>=ke;)ze++;ze>Te&&Z.push([Te+se,ze+se])}}}),Z}function he(ne,_e,le,P){var A=ue(ne,_e,le,P),Z=[].concat(ne);return A.forEach(function(ae,se){Z[se]=(_e.levels[ae]&1?We(ne[ae]):null)||ne[ae]}),Z.join("")}function ue(ne,_e,le,P){for(var A=Fe(ne,_e,le,P),Z=[],ae=0;ae<ne.length;ae++)Z[ae]=ae;return A.forEach(function(se){for(var de=se[0],we=se[1],ve=Z.slice(de,we+1),Ae=ve.length;Ae--;)Z[we-Ae]=ve[Ae]}),Z}return e.closingToOpeningBracket=E,e.getBidiCharType=d,e.getBidiCharTypeName=f,e.getCanonicalBracket=w,e.getEmbeddingLevels=be,e.getMirroredCharacter=We,e.getMirroredCharactersMap=X,e.getReorderSegments=Fe,e.getReorderedIndices=ue,e.getReorderedString=he,e.openingToClosingBracket=_,Object.defineProperty(e,"__esModule",{value:!0}),e}({});return s}const $v=/\bvoid\s+main\s*\(\s*\)\s*{/g;function Od(s){const e=/^[ \t]*#include +<([\w\d./]+)>/gm;function t(i,n){let r=mt[n];return r?Od(r):i}return s.replace(e,t)}const Bn=[];for(let s=0;s<256;s++)Bn[s]=(s<16?"0":"")+s.toString(16);function x2(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Bn[s&255]+Bn[s>>8&255]+Bn[s>>16&255]+Bn[s>>24&255]+"-"+Bn[e&255]+Bn[e>>8&255]+"-"+Bn[e>>16&15|64]+Bn[e>>24&255]+"-"+Bn[t&63|128]+Bn[t>>8&255]+"-"+Bn[t>>16&255]+Bn[t>>24&255]+Bn[i&255]+Bn[i>>8&255]+Bn[i>>16&255]+Bn[i>>24&255]).toUpperCase()}const Ms=Object.assign||function(){let s=arguments[0];for(let e=1,t=arguments.length;e<t;e++){let i=arguments[e];if(i)for(let n in i)Object.prototype.hasOwnProperty.call(i,n)&&(s[n]=i[n])}return s},b2=Date.now(),vg=new WeakMap,_g=new Map;let S2=1e10;function Fd(s,e){const t=T2(e);let i=vg.get(s);if(i||vg.set(s,i=Object.create(null)),i[t])return new i[t];const n=`_onBeforeCompile${t}`,r=function(c,h){s.onBeforeCompile.call(this,c,h);const u=this.customProgramCacheKey()+"|"+c.vertexShader+"|"+c.fragmentShader;let d=_g[u];if(!d){const f=M2(this,c,e,t);d=_g[u]=f}c.vertexShader=d.vertexShader,c.fragmentShader=d.fragmentShader,Ms(c.uniforms,this.uniforms),e.timeUniform&&(c.uniforms[e.timeUniform]={get value(){return Date.now()-b2}}),this[n]&&this[n](c)},o=function(){return a(e.chained?s:s.clone())},a=function(c){const h=Object.create(c,l);return Object.defineProperty(h,"baseMaterial",{value:s}),Object.defineProperty(h,"id",{value:S2++}),h.uuid=x2(),h.uniforms=Ms({},c.uniforms,e.uniforms),h.defines=Ms({},c.defines,e.defines),h.defines[`TROIKA_DERIVED_MATERIAL_${t}`]="",h.extensions=Ms({},c.extensions,e.extensions),h._listeners=void 0,h},l={constructor:{value:o},isDerivedMaterial:{value:!0},type:{get:()=>s.type,set:c=>{s.type=c}},isDerivedFrom:{writable:!0,configurable:!0,value:function(c){const h=this.baseMaterial;return c===h||h.isDerivedMaterial&&h.isDerivedFrom(c)||!1}},customProgramCacheKey:{writable:!0,configurable:!0,value:function(){return s.customProgramCacheKey()+"|"+t}},onBeforeCompile:{get(){return r},set(c){this[n]=c}},copy:{writable:!0,configurable:!0,value:function(c){return s.copy.call(this,c),!s.isShaderMaterial&&!s.isDerivedMaterial&&(Ms(this.extensions,c.extensions),Ms(this.defines,c.defines),Ms(this.uniforms,Ja.clone(c.uniforms))),this}},clone:{writable:!0,configurable:!0,value:function(){const c=new s.constructor;return a(c).copy(this)}},getDepthMaterial:{writable:!0,configurable:!0,value:function(){let c=this._depthMaterial;return c||(c=this._depthMaterial=Fd(s.isDerivedMaterial?s.getDepthMaterial():new rl({depthPacking:nf}),e),c.defines.IS_DEPTH_MATERIAL="",c.uniforms=this.uniforms),c}},getDistanceMaterial:{writable:!0,configurable:!0,value:function(){let c=this._distanceMaterial;return c||(c=this._distanceMaterial=Fd(s.isDerivedMaterial?s.getDistanceMaterial():new Xh,e),c.defines.IS_DISTANCE_MATERIAL="",c.uniforms=this.uniforms),c}},dispose:{writable:!0,configurable:!0,value(){const{_depthMaterial:c,_distanceMaterial:h}=this;c&&c.dispose(),h&&h.dispose(),s.dispose.call(this)}}};return i[t]=o,new o}function M2(s,{vertexShader:e,fragmentShader:t},i,n){let{vertexDefs:r,vertexMainIntro:o,vertexMainOutro:a,vertexTransform:l,fragmentDefs:c,fragmentMainIntro:h,fragmentMainOutro:u,fragmentColorTransform:d,customRewriter:f,timeUniform:p}=i;if(r=r||"",o=o||"",a=a||"",c=c||"",h=h||"",u=u||"",(l||f)&&(e=Od(e)),(d||f)&&(t=t.replace(/^[ \t]*#include <((?:tonemapping|encodings|colorspace|fog|premultiplied_alpha|dithering)_fragment)>/gm,`
//!BEGIN_POST_CHUNK $1
$&
//!END_POST_CHUNK
`),t=Od(t)),f){let v=f({vertexShader:e,fragmentShader:t});e=v.vertexShader,t=v.fragmentShader}if(d){let v=[];t=t.replace(/^\/\/!BEGIN_POST_CHUNK[^]+?^\/\/!END_POST_CHUNK/gm,m=>(v.push(m),"")),u=`${d}
${v.join(`
`)}
${u}`}if(p){const v=`
uniform float ${p};
`;r=v+r,c=v+c}return l&&(e=`vec3 troika_position_${n};
vec3 troika_normal_${n};
vec2 troika_uv_${n};
${e}
`,r=`${r}
void troikaVertexTransform${n}(inout vec3 position, inout vec3 normal, inout vec2 uv) {
  ${l}
}
`,o=`
troika_position_${n} = vec3(position);
troika_normal_${n} = vec3(normal);
troika_uv_${n} = vec2(uv);
troikaVertexTransform${n}(troika_position_${n}, troika_normal_${n}, troika_uv_${n});
${o}
`,e=e.replace(/\b(position|normal|uv)\b/g,(v,m,g,y)=>/\battribute\s+vec[23]\s+$/.test(y.substr(0,g))?m:`troika_${m}_${n}`),s.map&&s.map.channel>0||(e=e.replace(/\bMAP_UV\b/g,`troika_uv_${n}`))),e=yg(e,n,r,o,a),t=yg(t,n,c,h,u),{vertexShader:e,fragmentShader:t}}function yg(s,e,t,i,n){return(i||n||t)&&(s=s.replace($v,`
${t}
void troikaOrigMain${e}() {`),s+=`
void main() {
  ${i}
  troikaOrigMain${e}();
  ${n}
}`),s}function w2(s,e){return s==="uniforms"?void 0:typeof e=="function"?e.toString():e}let E2=0;const xg=new Map;function T2(s){const e=JSON.stringify(s,w2);let t=xg.get(e);return t==null&&xg.set(e,t=++E2),t}/*!
Custom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.
Original MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE
*/function A2(){return typeof window>"u"&&(self.window=self),function(s){var e={parse:function(n){var r=e._bin,o=new Uint8Array(n);if(r.readASCII(o,0,4)=="ttcf"){var a=4;r.readUshort(o,a),a+=2,r.readUshort(o,a),a+=2;var l=r.readUint(o,a);a+=4;for(var c=[],h=0;h<l;h++){var u=r.readUint(o,a);a+=4,c.push(e._readFont(o,u))}return c}return[e._readFont(o,0)]},_readFont:function(n,r){var o=e._bin,a=r;o.readFixed(n,r),r+=4;var l=o.readUshort(n,r);r+=2,o.readUshort(n,r),r+=2,o.readUshort(n,r),r+=2,o.readUshort(n,r),r+=2;for(var c=["cmap","head","hhea","maxp","hmtx","name","OS/2","post","loca","glyf","kern","CFF ","GDEF","GPOS","GSUB","SVG "],h={_data:n,_offset:a},u={},d=0;d<l;d++){var f=o.readASCII(n,r,4);r+=4,o.readUint(n,r),r+=4;var p=o.readUint(n,r);r+=4;var v=o.readUint(n,r);r+=4,u[f]={offset:p,length:v}}for(d=0;d<c.length;d++){var m=c[d];u[m]&&(h[m.trim()]=e[m.trim()].parse(n,u[m].offset,u[m].length,h))}return h},_tabOffset:function(n,r,o){for(var a=e._bin,l=a.readUshort(n,o+4),c=o+12,h=0;h<l;h++){var u=a.readASCII(n,c,4);c+=4,a.readUint(n,c),c+=4;var d=a.readUint(n,c);if(c+=4,a.readUint(n,c),c+=4,u==r)return d}return 0}};e._bin={readFixed:function(n,r){return(n[r]<<8|n[r+1])+(n[r+2]<<8|n[r+3])/65540},readF2dot14:function(n,r){return e._bin.readShort(n,r)/16384},readInt:function(n,r){return e._bin._view(n).getInt32(r)},readInt8:function(n,r){return e._bin._view(n).getInt8(r)},readShort:function(n,r){return e._bin._view(n).getInt16(r)},readUshort:function(n,r){return e._bin._view(n).getUint16(r)},readUshorts:function(n,r,o){for(var a=[],l=0;l<o;l++)a.push(e._bin.readUshort(n,r+2*l));return a},readUint:function(n,r){return e._bin._view(n).getUint32(r)},readUint64:function(n,r){return 4294967296*e._bin.readUint(n,r)+e._bin.readUint(n,r+4)},readASCII:function(n,r,o){for(var a="",l=0;l<o;l++)a+=String.fromCharCode(n[r+l]);return a},readUnicode:function(n,r,o){for(var a="",l=0;l<o;l++){var c=n[r++]<<8|n[r++];a+=String.fromCharCode(c)}return a},_tdec:typeof window<"u"&&window.TextDecoder?new window.TextDecoder:null,readUTF8:function(n,r,o){var a=e._bin._tdec;return a&&r==0&&o==n.length?a.decode(n):e._bin.readASCII(n,r,o)},readBytes:function(n,r,o){for(var a=[],l=0;l<o;l++)a.push(n[r+l]);return a},readASCIIArray:function(n,r,o){for(var a=[],l=0;l<o;l++)a.push(String.fromCharCode(n[r+l]));return a},_view:function(n){return n._dataView||(n._dataView=n.buffer?new DataView(n.buffer,n.byteOffset,n.byteLength):new DataView(new Uint8Array(n).buffer))}},e._lctf={},e._lctf.parse=function(n,r,o,a,l){var c=e._bin,h={},u=r;c.readFixed(n,r),r+=4;var d=c.readUshort(n,r);r+=2;var f=c.readUshort(n,r);r+=2;var p=c.readUshort(n,r);return r+=2,h.scriptList=e._lctf.readScriptList(n,u+d),h.featureList=e._lctf.readFeatureList(n,u+f),h.lookupList=e._lctf.readLookupList(n,u+p,l),h},e._lctf.readLookupList=function(n,r,o){var a=e._bin,l=r,c=[],h=a.readUshort(n,r);r+=2;for(var u=0;u<h;u++){var d=a.readUshort(n,r);r+=2;var f=e._lctf.readLookupTable(n,l+d,o);c.push(f)}return c},e._lctf.readLookupTable=function(n,r,o){var a=e._bin,l=r,c={tabs:[]};c.ltype=a.readUshort(n,r),r+=2,c.flag=a.readUshort(n,r),r+=2;var h=a.readUshort(n,r);r+=2;for(var u=c.ltype,d=0;d<h;d++){var f=a.readUshort(n,r);r+=2;var p=o(n,u,l+f,c);c.tabs.push(p)}return c},e._lctf.numOfOnes=function(n){for(var r=0,o=0;o<32;o++)(n>>>o&1)!=0&&r++;return r},e._lctf.readClassDef=function(n,r){var o=e._bin,a=[],l=o.readUshort(n,r);if(r+=2,l==1){var c=o.readUshort(n,r);r+=2;var h=o.readUshort(n,r);r+=2;for(var u=0;u<h;u++)a.push(c+u),a.push(c+u),a.push(o.readUshort(n,r)),r+=2}if(l==2){var d=o.readUshort(n,r);for(r+=2,u=0;u<d;u++)a.push(o.readUshort(n,r)),r+=2,a.push(o.readUshort(n,r)),r+=2,a.push(o.readUshort(n,r)),r+=2}return a},e._lctf.getInterval=function(n,r){for(var o=0;o<n.length;o+=3){var a=n[o],l=n[o+1];if(n[o+2],a<=r&&r<=l)return o}return-1},e._lctf.readCoverage=function(n,r){var o=e._bin,a={};a.fmt=o.readUshort(n,r),r+=2;var l=o.readUshort(n,r);return r+=2,a.fmt==1&&(a.tab=o.readUshorts(n,r,l)),a.fmt==2&&(a.tab=o.readUshorts(n,r,3*l)),a},e._lctf.coverageIndex=function(n,r){var o=n.tab;if(n.fmt==1)return o.indexOf(r);if(n.fmt==2){var a=e._lctf.getInterval(o,r);if(a!=-1)return o[a+2]+(r-o[a])}return-1},e._lctf.readFeatureList=function(n,r){var o=e._bin,a=r,l=[],c=o.readUshort(n,r);r+=2;for(var h=0;h<c;h++){var u=o.readASCII(n,r,4);r+=4;var d=o.readUshort(n,r);r+=2;var f=e._lctf.readFeatureTable(n,a+d);f.tag=u.trim(),l.push(f)}return l},e._lctf.readFeatureTable=function(n,r){var o=e._bin,a=r,l={},c=o.readUshort(n,r);r+=2,c>0&&(l.featureParams=a+c);var h=o.readUshort(n,r);r+=2,l.tab=[];for(var u=0;u<h;u++)l.tab.push(o.readUshort(n,r+2*u));return l},e._lctf.readScriptList=function(n,r){var o=e._bin,a=r,l={},c=o.readUshort(n,r);r+=2;for(var h=0;h<c;h++){var u=o.readASCII(n,r,4);r+=4;var d=o.readUshort(n,r);r+=2,l[u.trim()]=e._lctf.readScriptTable(n,a+d)}return l},e._lctf.readScriptTable=function(n,r){var o=e._bin,a=r,l={},c=o.readUshort(n,r);r+=2,c>0&&(l.default=e._lctf.readLangSysTable(n,a+c));var h=o.readUshort(n,r);r+=2;for(var u=0;u<h;u++){var d=o.readASCII(n,r,4);r+=4;var f=o.readUshort(n,r);r+=2,l[d.trim()]=e._lctf.readLangSysTable(n,a+f)}return l},e._lctf.readLangSysTable=function(n,r){var o=e._bin,a={};o.readUshort(n,r),r+=2,a.reqFeature=o.readUshort(n,r),r+=2;var l=o.readUshort(n,r);return r+=2,a.features=o.readUshorts(n,r,l),a},e.CFF={},e.CFF.parse=function(n,r,o){var a=e._bin;(n=new Uint8Array(n.buffer,r,o))[r=0],n[++r],n[++r],n[++r],r++;var l=[];r=e.CFF.readIndex(n,r,l);for(var c=[],h=0;h<l.length-1;h++)c.push(a.readASCII(n,r+l[h],l[h+1]-l[h]));r+=l[l.length-1];var u=[];r=e.CFF.readIndex(n,r,u);var d=[];for(h=0;h<u.length-1;h++)d.push(e.CFF.readDict(n,r+u[h],r+u[h+1]));r+=u[u.length-1];var f=d[0],p=[];r=e.CFF.readIndex(n,r,p);var v=[];for(h=0;h<p.length-1;h++)v.push(a.readASCII(n,r+p[h],p[h+1]-p[h]));if(r+=p[p.length-1],e.CFF.readSubrs(n,r,f),f.CharStrings){r=f.CharStrings,p=[],r=e.CFF.readIndex(n,r,p);var m=[];for(h=0;h<p.length-1;h++)m.push(a.readBytes(n,r+p[h],p[h+1]-p[h]));f.CharStrings=m}if(f.ROS){r=f.FDArray;var g=[];for(r=e.CFF.readIndex(n,r,g),f.FDArray=[],h=0;h<g.length-1;h++){var y=e.CFF.readDict(n,r+g[h],r+g[h+1]);e.CFF._readFDict(n,y,v),f.FDArray.push(y)}r+=g[g.length-1],r=f.FDSelect,f.FDSelect=[];var x=n[r];if(r++,x!=3)throw x;var _=a.readUshort(n,r);for(r+=2,h=0;h<_+1;h++)f.FDSelect.push(a.readUshort(n,r),n[r+2]),r+=3}return f.Encoding&&(f.Encoding=e.CFF.readEncoding(n,f.Encoding,f.CharStrings.length)),f.charset&&(f.charset=e.CFF.readCharset(n,f.charset,f.CharStrings.length)),e.CFF._readFDict(n,f,v),f},e.CFF._readFDict=function(n,r,o){var a;for(var l in r.Private&&(a=r.Private[1],r.Private=e.CFF.readDict(n,a,a+r.Private[0]),r.Private.Subrs&&e.CFF.readSubrs(n,a+r.Private.Subrs,r.Private)),r)["FamilyName","FontName","FullName","Notice","version","Copyright"].indexOf(l)!=-1&&(r[l]=o[r[l]-426+35])},e.CFF.readSubrs=function(n,r,o){var a=e._bin,l=[];r=e.CFF.readIndex(n,r,l);var c,h=l.length;c=h<1240?107:h<33900?1131:32768,o.Bias=c,o.Subrs=[];for(var u=0;u<l.length-1;u++)o.Subrs.push(a.readBytes(n,r+l[u],l[u+1]-l[u]))},e.CFF.tableSE=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,0,111,112,113,114,0,115,116,117,118,119,120,121,122,0,123,0,124,125,126,127,128,129,130,131,0,132,133,0,134,135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,139,0,0,0,0,140,141,142,143,0,0,0,0,0,144,0,0,0,145,0,0,146,147,148,149,0,0,0,0],e.CFF.glyphByUnicode=function(n,r){for(var o=0;o<n.charset.length;o++)if(n.charset[o]==r)return o;return-1},e.CFF.glyphBySE=function(n,r){return r<0||r>255?-1:e.CFF.glyphByUnicode(n,e.CFF.tableSE[r])},e.CFF.readEncoding=function(n,r,o){e._bin;var a=[".notdef"],l=n[r];if(r++,l!=0)throw"error: unknown encoding format: "+l;var c=n[r];r++;for(var h=0;h<c;h++)a.push(n[r+h]);return a},e.CFF.readCharset=function(n,r,o){var a=e._bin,l=[".notdef"],c=n[r];if(r++,c==0)for(var h=0;h<o;h++){var u=a.readUshort(n,r);r+=2,l.push(u)}else{if(c!=1&&c!=2)throw"error: format: "+c;for(;l.length<o;){u=a.readUshort(n,r),r+=2;var d=0;for(c==1?(d=n[r],r++):(d=a.readUshort(n,r),r+=2),h=0;h<=d;h++)l.push(u),u++}}return l},e.CFF.readIndex=function(n,r,o){var a=e._bin,l=a.readUshort(n,r)+1,c=n[r+=2];if(r++,c==1)for(var h=0;h<l;h++)o.push(n[r+h]);else if(c==2)for(h=0;h<l;h++)o.push(a.readUshort(n,r+2*h));else if(c==3)for(h=0;h<l;h++)o.push(16777215&a.readUint(n,r+3*h-1));else if(l!=1)throw"unsupported offset size: "+c+", count: "+l;return(r+=l*c)-1},e.CFF.getCharString=function(n,r,o){var a=e._bin,l=n[r],c=n[r+1];n[r+2],n[r+3],n[r+4];var h=1,u=null,d=null;l<=20&&(u=l,h=1),l==12&&(u=100*l+c,h=2),21<=l&&l<=27&&(u=l,h=1),l==28&&(d=a.readShort(n,r+1),h=3),29<=l&&l<=31&&(u=l,h=1),32<=l&&l<=246&&(d=l-139,h=1),247<=l&&l<=250&&(d=256*(l-247)+c+108,h=2),251<=l&&l<=254&&(d=256*-(l-251)-c-108,h=2),l==255&&(d=a.readInt(n,r+1)/65535,h=5),o.val=d??"o"+u,o.size=h},e.CFF.readCharString=function(n,r,o){for(var a=r+o,l=e._bin,c=[];r<a;){var h=n[r],u=n[r+1];n[r+2],n[r+3],n[r+4];var d=1,f=null,p=null;h<=20&&(f=h,d=1),h==12&&(f=100*h+u,d=2),h!=19&&h!=20||(f=h,d=2),21<=h&&h<=27&&(f=h,d=1),h==28&&(p=l.readShort(n,r+1),d=3),29<=h&&h<=31&&(f=h,d=1),32<=h&&h<=246&&(p=h-139,d=1),247<=h&&h<=250&&(p=256*(h-247)+u+108,d=2),251<=h&&h<=254&&(p=256*-(h-251)-u-108,d=2),h==255&&(p=l.readInt(n,r+1)/65535,d=5),c.push(p??"o"+f),r+=d}return c},e.CFF.readDict=function(n,r,o){for(var a=e._bin,l={},c=[];r<o;){var h=n[r],u=n[r+1];n[r+2],n[r+3],n[r+4];var d=1,f=null,p=null;if(h==28&&(p=a.readShort(n,r+1),d=3),h==29&&(p=a.readInt(n,r+1),d=5),32<=h&&h<=246&&(p=h-139,d=1),247<=h&&h<=250&&(p=256*(h-247)+u+108,d=2),251<=h&&h<=254&&(p=256*-(h-251)-u-108,d=2),h==255)throw p=a.readInt(n,r+1)/65535,d=5,"unknown number";if(h==30){var v=[];for(d=1;;){var m=n[r+d];d++;var g=m>>4,y=15&m;if(g!=15&&v.push(g),y!=15&&v.push(y),y==15)break}for(var x="",_=[0,1,2,3,4,5,6,7,8,9,".","e","e-","reserved","-","endOfNumber"],E=0;E<v.length;E++)x+=_[v[E]];p=parseFloat(x)}h<=21&&(f=["version","Notice","FullName","FamilyName","Weight","FontBBox","BlueValues","OtherBlues","FamilyBlues","FamilyOtherBlues","StdHW","StdVW","escape","UniqueID","XUID","charset","Encoding","CharStrings","Private","Subrs","defaultWidthX","nominalWidthX"][h],d=1,h==12&&(f=["Copyright","isFixedPitch","ItalicAngle","UnderlinePosition","UnderlineThickness","PaintType","CharstringType","FontMatrix","StrokeWidth","BlueScale","BlueShift","BlueFuzz","StemSnapH","StemSnapV","ForceBold",0,0,"LanguageGroup","ExpansionFactor","initialRandomSeed","SyntheticBase","PostScript","BaseFontName","BaseFontBlend",0,0,0,0,0,0,"ROS","CIDFontVersion","CIDFontRevision","CIDFontType","CIDCount","UIDBase","FDArray","FDSelect","FontName"][u],d=2)),f!=null?(l[f]=c.length==1?c[0]:c,c=[]):c.push(p),r+=d}return l},e.cmap={},e.cmap.parse=function(n,r,o){n=new Uint8Array(n.buffer,r,o),r=0;var a=e._bin,l={};a.readUshort(n,r),r+=2;var c=a.readUshort(n,r);r+=2;var h=[];l.tables=[];for(var u=0;u<c;u++){var d=a.readUshort(n,r);r+=2;var f=a.readUshort(n,r);r+=2;var p=a.readUint(n,r);r+=4;var v="p"+d+"e"+f,m=h.indexOf(p);if(m==-1){var g;m=l.tables.length,h.push(p);var y=a.readUshort(n,p);y==0?g=e.cmap.parse0(n,p):y==4?g=e.cmap.parse4(n,p):y==6?g=e.cmap.parse6(n,p):y==12?g=e.cmap.parse12(n,p):console.debug("unknown format: "+y,d,f,p),l.tables.push(g)}if(l[v]!=null)throw"multiple tables for one platform+encoding";l[v]=m}return l},e.cmap.parse0=function(n,r){var o=e._bin,a={};a.format=o.readUshort(n,r),r+=2;var l=o.readUshort(n,r);r+=2,o.readUshort(n,r),r+=2,a.map=[];for(var c=0;c<l-6;c++)a.map.push(n[r+c]);return a},e.cmap.parse4=function(n,r){var o=e._bin,a=r,l={};l.format=o.readUshort(n,r),r+=2;var c=o.readUshort(n,r);r+=2,o.readUshort(n,r),r+=2;var h=o.readUshort(n,r);r+=2;var u=h/2;l.searchRange=o.readUshort(n,r),r+=2,l.entrySelector=o.readUshort(n,r),r+=2,l.rangeShift=o.readUshort(n,r),r+=2,l.endCount=o.readUshorts(n,r,u),r+=2*u,r+=2,l.startCount=o.readUshorts(n,r,u),r+=2*u,l.idDelta=[];for(var d=0;d<u;d++)l.idDelta.push(o.readShort(n,r)),r+=2;for(l.idRangeOffset=o.readUshorts(n,r,u),r+=2*u,l.glyphIdArray=[];r<a+c;)l.glyphIdArray.push(o.readUshort(n,r)),r+=2;return l},e.cmap.parse6=function(n,r){var o=e._bin,a={};a.format=o.readUshort(n,r),r+=2,o.readUshort(n,r),r+=2,o.readUshort(n,r),r+=2,a.firstCode=o.readUshort(n,r),r+=2;var l=o.readUshort(n,r);r+=2,a.glyphIdArray=[];for(var c=0;c<l;c++)a.glyphIdArray.push(o.readUshort(n,r)),r+=2;return a},e.cmap.parse12=function(n,r){var o=e._bin,a={};a.format=o.readUshort(n,r),r+=2,r+=2,o.readUint(n,r),r+=4,o.readUint(n,r),r+=4;var l=o.readUint(n,r);r+=4,a.groups=[];for(var c=0;c<l;c++){var h=r+12*c,u=o.readUint(n,h+0),d=o.readUint(n,h+4),f=o.readUint(n,h+8);a.groups.push([u,d,f])}return a},e.glyf={},e.glyf.parse=function(n,r,o,a){for(var l=[],c=0;c<a.maxp.numGlyphs;c++)l.push(null);return l},e.glyf._parseGlyf=function(n,r){var o=e._bin,a=n._data,l=e._tabOffset(a,"glyf",n._offset)+n.loca[r];if(n.loca[r]==n.loca[r+1])return null;var c={};if(c.noc=o.readShort(a,l),l+=2,c.xMin=o.readShort(a,l),l+=2,c.yMin=o.readShort(a,l),l+=2,c.xMax=o.readShort(a,l),l+=2,c.yMax=o.readShort(a,l),l+=2,c.xMin>=c.xMax||c.yMin>=c.yMax)return null;if(c.noc>0){c.endPts=[];for(var h=0;h<c.noc;h++)c.endPts.push(o.readUshort(a,l)),l+=2;var u=o.readUshort(a,l);if(l+=2,a.length-l<u)return null;c.instructions=o.readBytes(a,l,u),l+=u;var d=c.endPts[c.noc-1]+1;for(c.flags=[],h=0;h<d;h++){var f=a[l];if(l++,c.flags.push(f),(8&f)!=0){var p=a[l];l++;for(var v=0;v<p;v++)c.flags.push(f),h++}}for(c.xs=[],h=0;h<d;h++){var m=(2&c.flags[h])!=0,g=(16&c.flags[h])!=0;m?(c.xs.push(g?a[l]:-a[l]),l++):g?c.xs.push(0):(c.xs.push(o.readShort(a,l)),l+=2)}for(c.ys=[],h=0;h<d;h++)m=(4&c.flags[h])!=0,g=(32&c.flags[h])!=0,m?(c.ys.push(g?a[l]:-a[l]),l++):g?c.ys.push(0):(c.ys.push(o.readShort(a,l)),l+=2);var y=0,x=0;for(h=0;h<d;h++)y+=c.xs[h],x+=c.ys[h],c.xs[h]=y,c.ys[h]=x}else{var _;c.parts=[];do{_=o.readUshort(a,l),l+=2;var E={m:{a:1,b:0,c:0,d:1,tx:0,ty:0},p1:-1,p2:-1};if(c.parts.push(E),E.glyphIndex=o.readUshort(a,l),l+=2,1&_){var w=o.readShort(a,l);l+=2;var M=o.readShort(a,l);l+=2}else w=o.readInt8(a,l),l++,M=o.readInt8(a,l),l++;2&_?(E.m.tx=w,E.m.ty=M):(E.p1=w,E.p2=M),8&_?(E.m.a=E.m.d=o.readF2dot14(a,l),l+=2):64&_?(E.m.a=o.readF2dot14(a,l),l+=2,E.m.d=o.readF2dot14(a,l),l+=2):128&_&&(E.m.a=o.readF2dot14(a,l),l+=2,E.m.b=o.readF2dot14(a,l),l+=2,E.m.c=o.readF2dot14(a,l),l+=2,E.m.d=o.readF2dot14(a,l),l+=2)}while(32&_);if(256&_){var T=o.readUshort(a,l);for(l+=2,c.instr=[],h=0;h<T;h++)c.instr.push(a[l]),l++}}return c},e.GDEF={},e.GDEF.parse=function(n,r,o,a){var l=r;r+=4;var c=e._bin.readUshort(n,r);return{glyphClassDef:c===0?null:e._lctf.readClassDef(n,l+c)}},e.GPOS={},e.GPOS.parse=function(n,r,o,a){return e._lctf.parse(n,r,o,a,e.GPOS.subt)},e.GPOS.subt=function(n,r,o,a){var l=e._bin,c=o,h={};if(h.fmt=l.readUshort(n,o),o+=2,r==1||r==2||r==3||r==7||r==8&&h.fmt<=2){var u=l.readUshort(n,o);o+=2,h.coverage=e._lctf.readCoverage(n,u+c)}if(r==1&&h.fmt==1){var d=l.readUshort(n,o);o+=2,d!=0&&(h.pos=e.GPOS.readValueRecord(n,o,d))}else if(r==2&&h.fmt>=1&&h.fmt<=2){d=l.readUshort(n,o),o+=2;var f=l.readUshort(n,o);o+=2;var p=e._lctf.numOfOnes(d),v=e._lctf.numOfOnes(f);if(h.fmt==1){h.pairsets=[];var m=l.readUshort(n,o);o+=2;for(var g=0;g<m;g++){var y=c+l.readUshort(n,o);o+=2;var x=l.readUshort(n,y);y+=2;for(var _=[],E=0;E<x;E++){var w=l.readUshort(n,y);y+=2,d!=0&&(I=e.GPOS.readValueRecord(n,y,d),y+=2*p),f!=0&&(B=e.GPOS.readValueRecord(n,y,f),y+=2*v),_.push({gid2:w,val1:I,val2:B})}h.pairsets.push(_)}}if(h.fmt==2){var M=l.readUshort(n,o);o+=2;var T=l.readUshort(n,o);o+=2;var S=l.readUshort(n,o);o+=2;var b=l.readUshort(n,o);for(o+=2,h.classDef1=e._lctf.readClassDef(n,c+M),h.classDef2=e._lctf.readClassDef(n,c+T),h.matrix=[],g=0;g<S;g++){var U=[];for(E=0;E<b;E++){var I=null,B=null;d!=0&&(I=e.GPOS.readValueRecord(n,o,d),o+=2*p),f!=0&&(B=e.GPOS.readValueRecord(n,o,f),o+=2*v),U.push({val1:I,val2:B})}h.matrix.push(U)}}}else if(r==4&&h.fmt==1)h.markCoverage=e._lctf.readCoverage(n,l.readUshort(n,o)+c),h.baseCoverage=e._lctf.readCoverage(n,l.readUshort(n,o+2)+c),h.markClassCount=l.readUshort(n,o+4),h.markArray=e.GPOS.readMarkArray(n,l.readUshort(n,o+6)+c),h.baseArray=e.GPOS.readBaseArray(n,l.readUshort(n,o+8)+c,h.markClassCount);else if(r==6&&h.fmt==1)h.mark1Coverage=e._lctf.readCoverage(n,l.readUshort(n,o)+c),h.mark2Coverage=e._lctf.readCoverage(n,l.readUshort(n,o+2)+c),h.markClassCount=l.readUshort(n,o+4),h.mark1Array=e.GPOS.readMarkArray(n,l.readUshort(n,o+6)+c),h.mark2Array=e.GPOS.readBaseArray(n,l.readUshort(n,o+8)+c,h.markClassCount);else{if(r==9&&h.fmt==1){var G=l.readUshort(n,o);o+=2;var j=l.readUint(n,o);if(o+=4,a.ltype==9)a.ltype=G;else if(a.ltype!=G)throw"invalid extension substitution";return e.GPOS.subt(n,a.ltype,c+j)}console.debug("unsupported GPOS table LookupType",r,"format",h.fmt)}return h},e.GPOS.readValueRecord=function(n,r,o){var a=e._bin,l=[];return l.push(1&o?a.readShort(n,r):0),r+=1&o?2:0,l.push(2&o?a.readShort(n,r):0),r+=2&o?2:0,l.push(4&o?a.readShort(n,r):0),r+=4&o?2:0,l.push(8&o?a.readShort(n,r):0),r+=8&o?2:0,l},e.GPOS.readBaseArray=function(n,r,o){var a=e._bin,l=[],c=r,h=a.readUshort(n,r);r+=2;for(var u=0;u<h;u++){for(var d=[],f=0;f<o;f++)d.push(e.GPOS.readAnchorRecord(n,c+a.readUshort(n,r))),r+=2;l.push(d)}return l},e.GPOS.readMarkArray=function(n,r){var o=e._bin,a=[],l=r,c=o.readUshort(n,r);r+=2;for(var h=0;h<c;h++){var u=e.GPOS.readAnchorRecord(n,o.readUshort(n,r+2)+l);u.markClass=o.readUshort(n,r),a.push(u),r+=4}return a},e.GPOS.readAnchorRecord=function(n,r){var o=e._bin,a={};return a.fmt=o.readUshort(n,r),a.x=o.readShort(n,r+2),a.y=o.readShort(n,r+4),a},e.GSUB={},e.GSUB.parse=function(n,r,o,a){return e._lctf.parse(n,r,o,a,e.GSUB.subt)},e.GSUB.subt=function(n,r,o,a){var l=e._bin,c=o,h={};if(h.fmt=l.readUshort(n,o),o+=2,r!=1&&r!=2&&r!=4&&r!=5&&r!=6)return null;if(r==1||r==2||r==4||r==5&&h.fmt<=2||r==6&&h.fmt<=2){var u=l.readUshort(n,o);o+=2,h.coverage=e._lctf.readCoverage(n,c+u)}if(r==1&&h.fmt>=1&&h.fmt<=2){if(h.fmt==1)h.delta=l.readShort(n,o),o+=2;else if(h.fmt==2){var d=l.readUshort(n,o);o+=2,h.newg=l.readUshorts(n,o,d),o+=2*h.newg.length}}else if(r==2&&h.fmt==1){d=l.readUshort(n,o),o+=2,h.seqs=[];for(var f=0;f<d;f++){var p=l.readUshort(n,o)+c;o+=2;var v=l.readUshort(n,p);h.seqs.push(l.readUshorts(n,p+2,v))}}else if(r==4)for(h.vals=[],d=l.readUshort(n,o),o+=2,f=0;f<d;f++){var m=l.readUshort(n,o);o+=2,h.vals.push(e.GSUB.readLigatureSet(n,c+m))}else if(r==5&&h.fmt==2){if(h.fmt==2){var g=l.readUshort(n,o);o+=2,h.cDef=e._lctf.readClassDef(n,c+g),h.scset=[];var y=l.readUshort(n,o);for(o+=2,f=0;f<y;f++){var x=l.readUshort(n,o);o+=2,h.scset.push(x==0?null:e.GSUB.readSubClassSet(n,c+x))}}}else if(r==6&&h.fmt==3){if(h.fmt==3){for(f=0;f<3;f++){d=l.readUshort(n,o),o+=2;for(var _=[],E=0;E<d;E++)_.push(e._lctf.readCoverage(n,c+l.readUshort(n,o+2*E)));o+=2*d,f==0&&(h.backCvg=_),f==1&&(h.inptCvg=_),f==2&&(h.ahedCvg=_)}d=l.readUshort(n,o),o+=2,h.lookupRec=e.GSUB.readSubstLookupRecords(n,o,d)}}else{if(r==7&&h.fmt==1){var w=l.readUshort(n,o);o+=2;var M=l.readUint(n,o);if(o+=4,a.ltype==9)a.ltype=w;else if(a.ltype!=w)throw"invalid extension substitution";return e.GSUB.subt(n,a.ltype,c+M)}console.debug("unsupported GSUB table LookupType",r,"format",h.fmt)}return h},e.GSUB.readSubClassSet=function(n,r){var o=e._bin.readUshort,a=r,l=[],c=o(n,r);r+=2;for(var h=0;h<c;h++){var u=o(n,r);r+=2,l.push(e.GSUB.readSubClassRule(n,a+u))}return l},e.GSUB.readSubClassRule=function(n,r){var o=e._bin.readUshort,a={},l=o(n,r),c=o(n,r+=2);r+=2,a.input=[];for(var h=0;h<l-1;h++)a.input.push(o(n,r)),r+=2;return a.substLookupRecords=e.GSUB.readSubstLookupRecords(n,r,c),a},e.GSUB.readSubstLookupRecords=function(n,r,o){for(var a=e._bin.readUshort,l=[],c=0;c<o;c++)l.push(a(n,r),a(n,r+2)),r+=4;return l},e.GSUB.readChainSubClassSet=function(n,r){var o=e._bin,a=r,l=[],c=o.readUshort(n,r);r+=2;for(var h=0;h<c;h++){var u=o.readUshort(n,r);r+=2,l.push(e.GSUB.readChainSubClassRule(n,a+u))}return l},e.GSUB.readChainSubClassRule=function(n,r){for(var o=e._bin,a={},l=["backtrack","input","lookahead"],c=0;c<l.length;c++){var h=o.readUshort(n,r);r+=2,c==1&&h--,a[l[c]]=o.readUshorts(n,r,h),r+=2*a[l[c]].length}return h=o.readUshort(n,r),r+=2,a.subst=o.readUshorts(n,r,2*h),r+=2*a.subst.length,a},e.GSUB.readLigatureSet=function(n,r){var o=e._bin,a=r,l=[],c=o.readUshort(n,r);r+=2;for(var h=0;h<c;h++){var u=o.readUshort(n,r);r+=2,l.push(e.GSUB.readLigature(n,a+u))}return l},e.GSUB.readLigature=function(n,r){var o=e._bin,a={chain:[]};a.nglyph=o.readUshort(n,r),r+=2;var l=o.readUshort(n,r);r+=2;for(var c=0;c<l-1;c++)a.chain.push(o.readUshort(n,r)),r+=2;return a},e.head={},e.head.parse=function(n,r,o){var a=e._bin,l={};return a.readFixed(n,r),r+=4,l.fontRevision=a.readFixed(n,r),r+=4,a.readUint(n,r),r+=4,a.readUint(n,r),r+=4,l.flags=a.readUshort(n,r),r+=2,l.unitsPerEm=a.readUshort(n,r),r+=2,l.created=a.readUint64(n,r),r+=8,l.modified=a.readUint64(n,r),r+=8,l.xMin=a.readShort(n,r),r+=2,l.yMin=a.readShort(n,r),r+=2,l.xMax=a.readShort(n,r),r+=2,l.yMax=a.readShort(n,r),r+=2,l.macStyle=a.readUshort(n,r),r+=2,l.lowestRecPPEM=a.readUshort(n,r),r+=2,l.fontDirectionHint=a.readShort(n,r),r+=2,l.indexToLocFormat=a.readShort(n,r),r+=2,l.glyphDataFormat=a.readShort(n,r),r+=2,l},e.hhea={},e.hhea.parse=function(n,r,o){var a=e._bin,l={};return a.readFixed(n,r),r+=4,l.ascender=a.readShort(n,r),r+=2,l.descender=a.readShort(n,r),r+=2,l.lineGap=a.readShort(n,r),r+=2,l.advanceWidthMax=a.readUshort(n,r),r+=2,l.minLeftSideBearing=a.readShort(n,r),r+=2,l.minRightSideBearing=a.readShort(n,r),r+=2,l.xMaxExtent=a.readShort(n,r),r+=2,l.caretSlopeRise=a.readShort(n,r),r+=2,l.caretSlopeRun=a.readShort(n,r),r+=2,l.caretOffset=a.readShort(n,r),r+=2,r+=8,l.metricDataFormat=a.readShort(n,r),r+=2,l.numberOfHMetrics=a.readUshort(n,r),r+=2,l},e.hmtx={},e.hmtx.parse=function(n,r,o,a){for(var l=e._bin,c={aWidth:[],lsBearing:[]},h=0,u=0,d=0;d<a.maxp.numGlyphs;d++)d<a.hhea.numberOfHMetrics&&(h=l.readUshort(n,r),r+=2,u=l.readShort(n,r),r+=2),c.aWidth.push(h),c.lsBearing.push(u);return c},e.kern={},e.kern.parse=function(n,r,o,a){var l=e._bin,c=l.readUshort(n,r);if(r+=2,c==1)return e.kern.parseV1(n,r-2,o,a);var h=l.readUshort(n,r);r+=2;for(var u={glyph1:[],rval:[]},d=0;d<h;d++){r+=2,o=l.readUshort(n,r),r+=2;var f=l.readUshort(n,r);r+=2;var p=f>>>8;if((p&=15)!=0)throw"unknown kern table format: "+p;r=e.kern.readFormat0(n,r,u)}return u},e.kern.parseV1=function(n,r,o,a){var l=e._bin;l.readFixed(n,r),r+=4;var c=l.readUint(n,r);r+=4;for(var h={glyph1:[],rval:[]},u=0;u<c;u++){l.readUint(n,r),r+=4;var d=l.readUshort(n,r);r+=2,l.readUshort(n,r),r+=2;var f=d>>>8;if((f&=15)!=0)throw"unknown kern table format: "+f;r=e.kern.readFormat0(n,r,h)}return h},e.kern.readFormat0=function(n,r,o){var a=e._bin,l=-1,c=a.readUshort(n,r);r+=2,a.readUshort(n,r),r+=2,a.readUshort(n,r),r+=2,a.readUshort(n,r),r+=2;for(var h=0;h<c;h++){var u=a.readUshort(n,r);r+=2;var d=a.readUshort(n,r);r+=2;var f=a.readShort(n,r);r+=2,u!=l&&(o.glyph1.push(u),o.rval.push({glyph2:[],vals:[]}));var p=o.rval[o.rval.length-1];p.glyph2.push(d),p.vals.push(f),l=u}return r},e.loca={},e.loca.parse=function(n,r,o,a){var l=e._bin,c=[],h=a.head.indexToLocFormat,u=a.maxp.numGlyphs+1;if(h==0)for(var d=0;d<u;d++)c.push(l.readUshort(n,r+(d<<1))<<1);if(h==1)for(d=0;d<u;d++)c.push(l.readUint(n,r+(d<<2)));return c},e.maxp={},e.maxp.parse=function(n,r,o){var a=e._bin,l={},c=a.readUint(n,r);return r+=4,l.numGlyphs=a.readUshort(n,r),r+=2,c==65536&&(l.maxPoints=a.readUshort(n,r),r+=2,l.maxContours=a.readUshort(n,r),r+=2,l.maxCompositePoints=a.readUshort(n,r),r+=2,l.maxCompositeContours=a.readUshort(n,r),r+=2,l.maxZones=a.readUshort(n,r),r+=2,l.maxTwilightPoints=a.readUshort(n,r),r+=2,l.maxStorage=a.readUshort(n,r),r+=2,l.maxFunctionDefs=a.readUshort(n,r),r+=2,l.maxInstructionDefs=a.readUshort(n,r),r+=2,l.maxStackElements=a.readUshort(n,r),r+=2,l.maxSizeOfInstructions=a.readUshort(n,r),r+=2,l.maxComponentElements=a.readUshort(n,r),r+=2,l.maxComponentDepth=a.readUshort(n,r),r+=2),l},e.name={},e.name.parse=function(n,r,o){var a=e._bin,l={};a.readUshort(n,r),r+=2;var c=a.readUshort(n,r);r+=2,a.readUshort(n,r);for(var h,u=["copyright","fontFamily","fontSubfamily","ID","fullName","version","postScriptName","trademark","manufacturer","designer","description","urlVendor","urlDesigner","licence","licenceURL","---","typoFamilyName","typoSubfamilyName","compatibleFull","sampleText","postScriptCID","wwsFamilyName","wwsSubfamilyName","lightPalette","darkPalette"],d=r+=2,f=0;f<c;f++){var p=a.readUshort(n,r);r+=2;var v=a.readUshort(n,r);r+=2;var m=a.readUshort(n,r);r+=2;var g=a.readUshort(n,r);r+=2;var y=a.readUshort(n,r);r+=2;var x=a.readUshort(n,r);r+=2;var _,E=u[g],w=d+12*c+x;if(p==0)_=a.readUnicode(n,w,y/2);else if(p==3&&v==0)_=a.readUnicode(n,w,y/2);else if(v==0)_=a.readASCII(n,w,y);else if(v==1)_=a.readUnicode(n,w,y/2);else if(v==3)_=a.readUnicode(n,w,y/2);else{if(p!=1)throw"unknown encoding "+v+", platformID: "+p;_=a.readASCII(n,w,y),console.debug("reading unknown MAC encoding "+v+" as ASCII")}var M="p"+p+","+m.toString(16);l[M]==null&&(l[M]={}),l[M][E!==void 0?E:g]=_,l[M]._lang=m}for(var T in l)if(l[T].postScriptName!=null&&l[T]._lang==1033)return l[T];for(var T in l)if(l[T].postScriptName!=null&&l[T]._lang==0)return l[T];for(var T in l)if(l[T].postScriptName!=null&&l[T]._lang==3084)return l[T];for(var T in l)if(l[T].postScriptName!=null)return l[T];for(var T in l){h=T;break}return console.debug("returning name table with languageID "+l[h]._lang),l[h]},e["OS/2"]={},e["OS/2"].parse=function(n,r,o){var a=e._bin.readUshort(n,r);r+=2;var l={};if(a==0)e["OS/2"].version0(n,r,l);else if(a==1)e["OS/2"].version1(n,r,l);else if(a==2||a==3||a==4)e["OS/2"].version2(n,r,l);else{if(a!=5)throw"unknown OS/2 table version: "+a;e["OS/2"].version5(n,r,l)}return l},e["OS/2"].version0=function(n,r,o){var a=e._bin;return o.xAvgCharWidth=a.readShort(n,r),r+=2,o.usWeightClass=a.readUshort(n,r),r+=2,o.usWidthClass=a.readUshort(n,r),r+=2,o.fsType=a.readUshort(n,r),r+=2,o.ySubscriptXSize=a.readShort(n,r),r+=2,o.ySubscriptYSize=a.readShort(n,r),r+=2,o.ySubscriptXOffset=a.readShort(n,r),r+=2,o.ySubscriptYOffset=a.readShort(n,r),r+=2,o.ySuperscriptXSize=a.readShort(n,r),r+=2,o.ySuperscriptYSize=a.readShort(n,r),r+=2,o.ySuperscriptXOffset=a.readShort(n,r),r+=2,o.ySuperscriptYOffset=a.readShort(n,r),r+=2,o.yStrikeoutSize=a.readShort(n,r),r+=2,o.yStrikeoutPosition=a.readShort(n,r),r+=2,o.sFamilyClass=a.readShort(n,r),r+=2,o.panose=a.readBytes(n,r,10),r+=10,o.ulUnicodeRange1=a.readUint(n,r),r+=4,o.ulUnicodeRange2=a.readUint(n,r),r+=4,o.ulUnicodeRange3=a.readUint(n,r),r+=4,o.ulUnicodeRange4=a.readUint(n,r),r+=4,o.achVendID=[a.readInt8(n,r),a.readInt8(n,r+1),a.readInt8(n,r+2),a.readInt8(n,r+3)],r+=4,o.fsSelection=a.readUshort(n,r),r+=2,o.usFirstCharIndex=a.readUshort(n,r),r+=2,o.usLastCharIndex=a.readUshort(n,r),r+=2,o.sTypoAscender=a.readShort(n,r),r+=2,o.sTypoDescender=a.readShort(n,r),r+=2,o.sTypoLineGap=a.readShort(n,r),r+=2,o.usWinAscent=a.readUshort(n,r),r+=2,o.usWinDescent=a.readUshort(n,r),r+=2},e["OS/2"].version1=function(n,r,o){var a=e._bin;return r=e["OS/2"].version0(n,r,o),o.ulCodePageRange1=a.readUint(n,r),r+=4,o.ulCodePageRange2=a.readUint(n,r),r+=4},e["OS/2"].version2=function(n,r,o){var a=e._bin;return r=e["OS/2"].version1(n,r,o),o.sxHeight=a.readShort(n,r),r+=2,o.sCapHeight=a.readShort(n,r),r+=2,o.usDefault=a.readUshort(n,r),r+=2,o.usBreak=a.readUshort(n,r),r+=2,o.usMaxContext=a.readUshort(n,r),r+=2},e["OS/2"].version5=function(n,r,o){var a=e._bin;return r=e["OS/2"].version2(n,r,o),o.usLowerOpticalPointSize=a.readUshort(n,r),r+=2,o.usUpperOpticalPointSize=a.readUshort(n,r),r+=2},e.post={},e.post.parse=function(n,r,o){var a=e._bin,l={};return l.version=a.readFixed(n,r),r+=4,l.italicAngle=a.readFixed(n,r),r+=4,l.underlinePosition=a.readShort(n,r),r+=2,l.underlineThickness=a.readShort(n,r),r+=2,l},e==null&&(e={}),e.U==null&&(e.U={}),e.U.codeToGlyph=function(n,r){var o=n.cmap,a=-1;if(o.p0e4!=null?a=o.p0e4:o.p3e1!=null?a=o.p3e1:o.p1e0!=null?a=o.p1e0:o.p0e3!=null&&(a=o.p0e3),a==-1)throw"no familiar platform and encoding!";var l=o.tables[a];if(l.format==0)return r>=l.map.length?0:l.map[r];if(l.format==4){for(var c=-1,h=0;h<l.endCount.length;h++)if(r<=l.endCount[h]){c=h;break}return c==-1||l.startCount[c]>r?0:65535&(l.idRangeOffset[c]!=0?l.glyphIdArray[r-l.startCount[c]+(l.idRangeOffset[c]>>1)-(l.idRangeOffset.length-c)]:r+l.idDelta[c])}if(l.format==12){if(r>l.groups[l.groups.length-1][1])return 0;for(h=0;h<l.groups.length;h++){var u=l.groups[h];if(u[0]<=r&&r<=u[1])return u[2]+(r-u[0])}return 0}throw"unknown cmap table format "+l.format},e.U.glyphToPath=function(n,r){var o={cmds:[],crds:[]};if(n.SVG&&n.SVG.entries[r]){var a=n.SVG.entries[r];return a==null?o:(typeof a=="string"&&(a=e.SVG.toPath(a),n.SVG.entries[r]=a),a)}if(n.CFF){var l={x:0,y:0,stack:[],nStems:0,haveWidth:!1,width:n.CFF.Private?n.CFF.Private.defaultWidthX:0,open:!1},c=n.CFF,h=n.CFF.Private;if(c.ROS){for(var u=0;c.FDSelect[u+2]<=r;)u+=2;h=c.FDArray[c.FDSelect[u+1]].Private}e.U._drawCFF(n.CFF.CharStrings[r],l,c,h,o)}else n.glyf&&e.U._drawGlyf(r,n,o);return o},e.U._drawGlyf=function(n,r,o){var a=r.glyf[n];a==null&&(a=r.glyf[n]=e.glyf._parseGlyf(r,n)),a!=null&&(a.noc>-1?e.U._simpleGlyph(a,o):e.U._compoGlyph(a,r,o))},e.U._simpleGlyph=function(n,r){for(var o=0;o<n.noc;o++){for(var a=o==0?0:n.endPts[o-1]+1,l=n.endPts[o],c=a;c<=l;c++){var h=c==a?l:c-1,u=c==l?a:c+1,d=1&n.flags[c],f=1&n.flags[h],p=1&n.flags[u],v=n.xs[c],m=n.ys[c];if(c==a)if(d){if(!f){e.U.P.moveTo(r,v,m);continue}e.U.P.moveTo(r,n.xs[h],n.ys[h])}else f?e.U.P.moveTo(r,n.xs[h],n.ys[h]):e.U.P.moveTo(r,(n.xs[h]+v)/2,(n.ys[h]+m)/2);d?f&&e.U.P.lineTo(r,v,m):p?e.U.P.qcurveTo(r,v,m,n.xs[u],n.ys[u]):e.U.P.qcurveTo(r,v,m,(v+n.xs[u])/2,(m+n.ys[u])/2)}e.U.P.closePath(r)}},e.U._compoGlyph=function(n,r,o){for(var a=0;a<n.parts.length;a++){var l={cmds:[],crds:[]},c=n.parts[a];e.U._drawGlyf(c.glyphIndex,r,l);for(var h=c.m,u=0;u<l.crds.length;u+=2){var d=l.crds[u],f=l.crds[u+1];o.crds.push(d*h.a+f*h.b+h.tx),o.crds.push(d*h.c+f*h.d+h.ty)}for(u=0;u<l.cmds.length;u++)o.cmds.push(l.cmds[u])}},e.U._getGlyphClass=function(n,r){var o=e._lctf.getInterval(r,n);return o==-1?0:r[o+2]},e.U._applySubs=function(n,r,o,a){for(var l=n.length-r-1,c=0;c<o.tabs.length;c++)if(o.tabs[c]!=null){var h,u=o.tabs[c];if(!u.coverage||(h=e._lctf.coverageIndex(u.coverage,n[r]))!=-1){if(o.ltype==1)n[r],u.fmt==1?n[r]=n[r]+u.delta:n[r]=u.newg[h];else if(o.ltype==4)for(var d=u.vals[h],f=0;f<d.length;f++){var p=d[f],v=p.chain.length;if(!(v>l)){for(var m=!0,g=0,y=0;y<v;y++){for(;n[r+g+(1+y)]==-1;)g++;p.chain[y]!=n[r+g+(1+y)]&&(m=!1)}if(m){for(n[r]=p.nglyph,y=0;y<v+g;y++)n[r+y+1]=-1;break}}}else if(o.ltype==5&&u.fmt==2)for(var x=e._lctf.getInterval(u.cDef,n[r]),_=u.cDef[x+2],E=u.scset[_],w=0;w<E.length;w++){var M=E[w],T=M.input;if(!(T.length>l)){for(m=!0,y=0;y<T.length;y++){var S=e._lctf.getInterval(u.cDef,n[r+1+y]);if(x==-1&&u.cDef[S+2]!=T[y]){m=!1;break}}if(m){var b=M.substLookupRecords;for(f=0;f<b.length;f+=2)b[f],b[f+1]}}}else if(o.ltype==6&&u.fmt==3){if(!e.U._glsCovered(n,u.backCvg,r-u.backCvg.length)||!e.U._glsCovered(n,u.inptCvg,r)||!e.U._glsCovered(n,u.ahedCvg,r+u.inptCvg.length))continue;var U=u.lookupRec;for(w=0;w<U.length;w+=2){x=U[w];var I=a[U[w+1]];e.U._applySubs(n,r+x,I,a)}}}}},e.U._glsCovered=function(n,r,o){for(var a=0;a<r.length;a++)if(e._lctf.coverageIndex(r[a],n[o+a])==-1)return!1;return!0},e.U.glyphsToPath=function(n,r,o){for(var a={cmds:[],crds:[]},l=0,c=0;c<r.length;c++){var h=r[c];if(h!=-1){for(var u=c<r.length-1&&r[c+1]!=-1?r[c+1]:0,d=e.U.glyphToPath(n,h),f=0;f<d.crds.length;f+=2)a.crds.push(d.crds[f]+l),a.crds.push(d.crds[f+1]);for(o&&a.cmds.push(o),f=0;f<d.cmds.length;f++)a.cmds.push(d.cmds[f]);o&&a.cmds.push("X"),l+=n.hmtx.aWidth[h],c<r.length-1&&(l+=e.U.getPairAdjustment(n,h,u))}}return a},e.U.P={},e.U.P.moveTo=function(n,r,o){n.cmds.push("M"),n.crds.push(r,o)},e.U.P.lineTo=function(n,r,o){n.cmds.push("L"),n.crds.push(r,o)},e.U.P.curveTo=function(n,r,o,a,l,c,h){n.cmds.push("C"),n.crds.push(r,o,a,l,c,h)},e.U.P.qcurveTo=function(n,r,o,a,l){n.cmds.push("Q"),n.crds.push(r,o,a,l)},e.U.P.closePath=function(n){n.cmds.push("Z")},e.U._drawCFF=function(n,r,o,a,l){for(var c=r.stack,h=r.nStems,u=r.haveWidth,d=r.width,f=r.open,p=0,v=r.x,m=r.y,g=0,y=0,x=0,_=0,E=0,w=0,M=0,T=0,S=0,b=0,U={val:0,size:0};p<n.length;){e.CFF.getCharString(n,p,U);var I=U.val;if(p+=U.size,I=="o1"||I=="o18")c.length%2!=0&&!u&&(d=c.shift()+a.nominalWidthX),h+=c.length>>1,c.length=0,u=!0;else if(I=="o3"||I=="o23")c.length%2!=0&&!u&&(d=c.shift()+a.nominalWidthX),h+=c.length>>1,c.length=0,u=!0;else if(I=="o4")c.length>1&&!u&&(d=c.shift()+a.nominalWidthX,u=!0),f&&e.U.P.closePath(l),m+=c.pop(),e.U.P.moveTo(l,v,m),f=!0;else if(I=="o5")for(;c.length>0;)v+=c.shift(),m+=c.shift(),e.U.P.lineTo(l,v,m);else if(I=="o6"||I=="o7")for(var B=c.length,G=I=="o6",j=0;j<B;j++){var N=c.shift();G?v+=N:m+=N,G=!G,e.U.P.lineTo(l,v,m)}else if(I=="o8"||I=="o24"){B=c.length;for(var ee=0;ee+6<=B;)g=v+c.shift(),y=m+c.shift(),x=g+c.shift(),_=y+c.shift(),v=x+c.shift(),m=_+c.shift(),e.U.P.curveTo(l,g,y,x,_,v,m),ee+=6;I=="o24"&&(v+=c.shift(),m+=c.shift(),e.U.P.lineTo(l,v,m))}else{if(I=="o11")break;if(I=="o1234"||I=="o1235"||I=="o1236"||I=="o1237")I=="o1234"&&(y=m,x=(g=v+c.shift())+c.shift(),b=_=y+c.shift(),w=_,T=m,v=(M=(E=(S=x+c.shift())+c.shift())+c.shift())+c.shift(),e.U.P.curveTo(l,g,y,x,_,S,b),e.U.P.curveTo(l,E,w,M,T,v,m)),I=="o1235"&&(g=v+c.shift(),y=m+c.shift(),x=g+c.shift(),_=y+c.shift(),S=x+c.shift(),b=_+c.shift(),E=S+c.shift(),w=b+c.shift(),M=E+c.shift(),T=w+c.shift(),v=M+c.shift(),m=T+c.shift(),c.shift(),e.U.P.curveTo(l,g,y,x,_,S,b),e.U.P.curveTo(l,E,w,M,T,v,m)),I=="o1236"&&(g=v+c.shift(),y=m+c.shift(),x=g+c.shift(),b=_=y+c.shift(),w=_,M=(E=(S=x+c.shift())+c.shift())+c.shift(),T=w+c.shift(),v=M+c.shift(),e.U.P.curveTo(l,g,y,x,_,S,b),e.U.P.curveTo(l,E,w,M,T,v,m)),I=="o1237"&&(g=v+c.shift(),y=m+c.shift(),x=g+c.shift(),_=y+c.shift(),S=x+c.shift(),b=_+c.shift(),E=S+c.shift(),w=b+c.shift(),M=E+c.shift(),T=w+c.shift(),Math.abs(M-v)>Math.abs(T-m)?v=M+c.shift():m=T+c.shift(),e.U.P.curveTo(l,g,y,x,_,S,b),e.U.P.curveTo(l,E,w,M,T,v,m));else if(I=="o14"){if(c.length>0&&!u&&(d=c.shift()+o.nominalWidthX,u=!0),c.length==4){var W=c.shift(),Y=c.shift(),Q=c.shift(),z=c.shift(),J=e.CFF.glyphBySE(o,Q),$=e.CFF.glyphBySE(o,z);e.U._drawCFF(o.CharStrings[J],r,o,a,l),r.x=W,r.y=Y,e.U._drawCFF(o.CharStrings[$],r,o,a,l)}f&&(e.U.P.closePath(l),f=!1)}else if(I=="o19"||I=="o20")c.length%2!=0&&!u&&(d=c.shift()+a.nominalWidthX),h+=c.length>>1,c.length=0,u=!0,p+=h+7>>3;else if(I=="o21")c.length>2&&!u&&(d=c.shift()+a.nominalWidthX,u=!0),m+=c.pop(),v+=c.pop(),f&&e.U.P.closePath(l),e.U.P.moveTo(l,v,m),f=!0;else if(I=="o22")c.length>1&&!u&&(d=c.shift()+a.nominalWidthX,u=!0),v+=c.pop(),f&&e.U.P.closePath(l),e.U.P.moveTo(l,v,m),f=!0;else if(I=="o25"){for(;c.length>6;)v+=c.shift(),m+=c.shift(),e.U.P.lineTo(l,v,m);g=v+c.shift(),y=m+c.shift(),x=g+c.shift(),_=y+c.shift(),v=x+c.shift(),m=_+c.shift(),e.U.P.curveTo(l,g,y,x,_,v,m)}else if(I=="o26")for(c.length%2&&(v+=c.shift());c.length>0;)g=v,y=m+c.shift(),v=x=g+c.shift(),m=(_=y+c.shift())+c.shift(),e.U.P.curveTo(l,g,y,x,_,v,m);else if(I=="o27")for(c.length%2&&(m+=c.shift());c.length>0;)y=m,x=(g=v+c.shift())+c.shift(),_=y+c.shift(),v=x+c.shift(),m=_,e.U.P.curveTo(l,g,y,x,_,v,m);else if(I=="o10"||I=="o29"){var V=I=="o10"?a:o;if(c.length==0)console.debug("error: empty stack");else{var H=c.pop(),K=V.Subrs[H+V.Bias];r.x=v,r.y=m,r.nStems=h,r.haveWidth=u,r.width=d,r.open=f,e.U._drawCFF(K,r,o,a,l),v=r.x,m=r.y,h=r.nStems,u=r.haveWidth,d=r.width,f=r.open}}else if(I=="o30"||I=="o31"){var q=c.length,re=(ee=0,I=="o31");for(ee+=q-(B=-3&q);ee<B;)re?(y=m,x=(g=v+c.shift())+c.shift(),m=(_=y+c.shift())+c.shift(),B-ee==5?(v=x+c.shift(),ee++):v=x,re=!1):(g=v,y=m+c.shift(),x=g+c.shift(),_=y+c.shift(),v=x+c.shift(),B-ee==5?(m=_+c.shift(),ee++):m=_,re=!0),e.U.P.curveTo(l,g,y,x,_,v,m),ee+=4}else{if((I+"").charAt(0)=="o")throw console.debug("Unknown operation: "+I,n),I;c.push(I)}}}r.x=v,r.y=m,r.nStems=h,r.haveWidth=u,r.width=d,r.open=f};var t=e,i={Typr:t};return s.Typr=t,s.default=i,Object.defineProperty(s,"__esModule",{value:!0}),s}({}).Typr}/*!
Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate
(https://github.com/101arrowz/fflate) for use in Troika text rendering. 
Original licenses apply: 
- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)
- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)
*/function C2(){return function(s){var e=Uint8Array,t=Uint16Array,i=Uint32Array,n=new e([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),r=new e([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),o=new e([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),a=function(I,B){for(var G=new t(31),j=0;j<31;++j)G[j]=B+=1<<I[j-1];var N=new i(G[30]);for(j=1;j<30;++j)for(var ee=G[j];ee<G[j+1];++ee)N[ee]=ee-G[j]<<5|j;return[G,N]},l=a(n,2),c=l[0],h=l[1];c[28]=258,h[258]=28;for(var u=a(r,0)[0],d=new t(32768),f=0;f<32768;++f){var p=(43690&f)>>>1|(21845&f)<<1;p=(61680&(p=(52428&p)>>>2|(13107&p)<<2))>>>4|(3855&p)<<4,d[f]=((65280&p)>>>8|(255&p)<<8)>>>1}var v=function(I,B,G){for(var j=I.length,N=0,ee=new t(B);N<j;++N)++ee[I[N]-1];var W,Y=new t(B);for(N=0;N<B;++N)Y[N]=Y[N-1]+ee[N-1]<<1;{W=new t(1<<B);var Q=15-B;for(N=0;N<j;++N)if(I[N])for(var z=N<<4|I[N],J=B-I[N],$=Y[I[N]-1]++<<J,V=$|(1<<J)-1;$<=V;++$)W[d[$]>>>Q]=z}return W},m=new e(288);for(f=0;f<144;++f)m[f]=8;for(f=144;f<256;++f)m[f]=9;for(f=256;f<280;++f)m[f]=7;for(f=280;f<288;++f)m[f]=8;var g=new e(32);for(f=0;f<32;++f)g[f]=5;var y=v(m,9),x=v(g,5),_=function(I){for(var B=I[0],G=1;G<I.length;++G)I[G]>B&&(B=I[G]);return B},E=function(I,B,G){var j=B/8|0;return(I[j]|I[j+1]<<8)>>(7&B)&G},w=function(I,B){var G=B/8|0;return(I[G]|I[G+1]<<8|I[G+2]<<16)>>(7&B)},M=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],T=function(I,B,G){var j=new Error(B||M[I]);if(j.code=I,Error.captureStackTrace&&Error.captureStackTrace(j,T),!G)throw j;return j},S=function(I,B,G){var j=I.length;if(!j||G&&!G.l&&j<5)return B||new e(0);var N=!B||G,ee=!G||G.i;G||(G={}),B||(B=new e(3*j));var W,Y=function(Te){var ht=B.length;if(Te>ht){var Qe=new e(Math.max(2*ht,Te));Qe.set(B),B=Qe}},Q=G.f||0,z=G.p||0,J=G.b||0,$=G.l,V=G.d,H=G.m,K=G.n,q=8*j;do{if(!$){G.f=Q=E(I,z,1);var re=E(I,z+1,3);if(z+=3,!re){var be=I[(le=((W=z)/8|0)+(7&W&&1)+4)-4]|I[le-3]<<8,Se=le+be;if(Se>j){ee&&T(0);break}N&&Y(J+be),B.set(I.subarray(le,Se),J),G.b=J+=be,G.p=z=8*Se;continue}if(re==1)$=y,V=x,H=9,K=5;else if(re==2){var Me=E(I,z,31)+257,ye=E(I,z+10,15)+4,We=Me+E(I,z+5,31)+1;z+=14;for(var X=new e(We),Fe=new e(19),he=0;he<ye;++he)Fe[o[he]]=E(I,z+3*he,7);z+=3*ye;var ue=_(Fe),ne=(1<<ue)-1,_e=v(Fe,ue);for(he=0;he<We;){var le,P=_e[E(I,z,ne)];if(z+=15&P,(le=P>>>4)<16)X[he++]=le;else{var A=0,Z=0;for(le==16?(Z=3+E(I,z,3),z+=2,A=X[he-1]):le==17?(Z=3+E(I,z,7),z+=3):le==18&&(Z=11+E(I,z,127),z+=7);Z--;)X[he++]=A}}var ae=X.subarray(0,Me),se=X.subarray(Me);H=_(ae),K=_(se),$=v(ae,H),V=v(se,K)}else T(1);if(z>q){ee&&T(0);break}}N&&Y(J+131072);for(var de=(1<<H)-1,we=(1<<K)-1,ve=z;;ve=z){var Ae=(A=$[w(I,z)&de])>>>4;if((z+=15&A)>q){ee&&T(0);break}if(A||T(2),Ae<256)B[J++]=Ae;else{if(Ae==256){ve=z,$=null;break}var Xe=Ae-254;if(Ae>264){var Re=n[he=Ae-257];Xe=E(I,z,(1<<Re)-1)+c[he],z+=Re}var Oe=V[w(I,z)&we],ke=Oe>>>4;if(Oe||T(3),z+=15&Oe,se=u[ke],ke>3&&(Re=r[ke],se+=w(I,z)&(1<<Re)-1,z+=Re),z>q){ee&&T(0);break}N&&Y(J+131072);for(var ze=J+Xe;J<ze;J+=4)B[J]=B[J-se],B[J+1]=B[J+1-se],B[J+2]=B[J+2-se],B[J+3]=B[J+3-se];J=ze}}G.l=$,G.p=ve,G.b=J,$&&(Q=1,G.m=H,G.d=V,G.n=K)}while(!Q);return J==B.length?B:function(Te,ht,Qe){(Qe==null||Qe>Te.length)&&(Qe=Te.length);var St=new(Te instanceof t?t:Te instanceof i?i:e)(Qe-ht);return St.set(Te.subarray(ht,Qe)),St}(B,0,J)},b=new e(0),U=typeof TextDecoder<"u"&&new TextDecoder;try{U.decode(b,{stream:!0})}catch{}return s.convert_streams=function(I){var B=new DataView(I),G=0;function j(){var Me=B.getUint16(G);return G+=2,Me}function N(){var Me=B.getUint32(G);return G+=4,Me}function ee(Me){be.setUint16(Se,Me),Se+=2}function W(Me){be.setUint32(Se,Me),Se+=4}for(var Y={signature:N(),flavor:N(),length:N(),numTables:j(),reserved:j(),totalSfntSize:N(),majorVersion:j(),minorVersion:j(),metaOffset:N(),metaLength:N(),metaOrigLength:N(),privOffset:N(),privLength:N()},Q=0;Math.pow(2,Q)<=Y.numTables;)Q++;Q--;for(var z=16*Math.pow(2,Q),J=16*Y.numTables-z,$=12,V=[],H=0;H<Y.numTables;H++)V.push({tag:N(),offset:N(),compLength:N(),origLength:N(),origChecksum:N()}),$+=16;var K,q=new Uint8Array(12+16*V.length+V.reduce(function(Me,ye){return Me+ye.origLength+4},0)),re=q.buffer,be=new DataView(re),Se=0;return W(Y.flavor),ee(Y.numTables),ee(z),ee(Q),ee(J),V.forEach(function(Me){W(Me.tag),W(Me.origChecksum),W($),W(Me.origLength),Me.outOffset=$,($+=Me.origLength)%4!=0&&($+=4-$%4)}),V.forEach(function(Me){var ye,We=I.slice(Me.offset,Me.offset+Me.compLength);if(Me.compLength!=Me.origLength){var X=new Uint8Array(Me.origLength);ye=new Uint8Array(We,2),S(ye,X)}else X=new Uint8Array(We);q.set(X,Me.outOffset);var Fe=0;($=Me.outOffset+Me.origLength)%4!=0&&(Fe=4-$%4),q.set(new Uint8Array(Fe).buffer,Me.outOffset+Me.origLength),K=$+Fe}),re.slice(0,K)},Object.defineProperty(s,"__esModule",{value:!0}),s}({}).convert_streams}function R2(s,e){const t={M:2,L:2,Q:4,C:6,Z:0},i={C:"18g,ca,368,1kz",D:"17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v",R:"17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6",L:"x9u,jff,a,fd,jv",T:"4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n"},n=1,r=2,o=4,a=8,l=16,c=32;let h;function u(M){if(!h){const T={R:r,L:n,D:o,C:l,U:c,T:a};h=new Map;for(let S in i){let b=0;i[S].split(",").forEach(U=>{let[I,B]=U.split("+");I=parseInt(I,36),B=B?parseInt(B,36):0,h.set(b+=I,T[S]);for(let G=B;G--;)h.set(++b,T[S])})}}return h.get(M)||c}const d=1,f=2,p=3,v=4,m=[null,"isol","init","fina","medi"];function g(M){const T=new Uint8Array(M.length);let S=c,b=d,U=-1;for(let I=0;I<M.length;I++){const B=M.codePointAt(I);let G=u(B)|0,j=d;G&a||(S&(n|o|l)?G&(r|o|l)?(j=p,(b===d||b===p)&&T[U]++):G&(n|c)&&(b===f||b===v)&&T[U]--:S&(r|c)&&(b===f||b===v)&&T[U]--,b=T[I]=j,S=G,U=I,B>65535&&I++)}return T}function y(M,T){const S=[];for(let U=0;U<T.length;U++){const I=T.codePointAt(U);I>65535&&U++,S.push(s.U.codeToGlyph(M,I))}const b=M.GSUB;if(b){const{lookupList:U,featureList:I}=b;let B;const G=/^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws|ccmp)$/,j=[];I.forEach(N=>{if(G.test(N.tag))for(let ee=0;ee<N.tab.length;ee++){if(j[N.tab[ee]])continue;j[N.tab[ee]]=!0;const W=U[N.tab[ee]],Y=/^(isol|init|fina|medi)$/.test(N.tag);Y&&!B&&(B=g(T));for(let Q=0;Q<S.length;Q++)(!B||!Y||m[B[Q]]===N.tag)&&s.U._applySubs(S,Q,W,U)}})}return S}function x(M,T){const S=new Int16Array(T.length*3);let b=0;for(;b<T.length;b++){const G=T[b];if(G===-1)continue;S[b*3+2]=M.hmtx.aWidth[G];const j=M.GPOS;if(j){const N=j.lookupList;for(let ee=0;ee<N.length;ee++){const W=N[ee];for(let Y=0;Y<W.tabs.length;Y++){const Q=W.tabs[Y];if(W.ltype===1){if(s._lctf.coverageIndex(Q.coverage,G)!==-1&&Q.pos){B(Q.pos,b);break}}else if(W.ltype===2){let z=null,J=U();if(J!==-1){const $=s._lctf.coverageIndex(Q.coverage,T[J]);if($!==-1){if(Q.fmt===1){const V=Q.pairsets[$];for(let H=0;H<V.length;H++)V[H].gid2===G&&(z=V[H])}else if(Q.fmt===2){const V=s.U._getGlyphClass(T[J],Q.classDef1),H=s.U._getGlyphClass(G,Q.classDef2);z=Q.matrix[V][H]}if(z){z.val1&&B(z.val1,J),z.val2&&B(z.val2,b);break}}}}else if(W.ltype===4){const z=s._lctf.coverageIndex(Q.markCoverage,G);if(z!==-1){const J=U(I),$=J===-1?-1:s._lctf.coverageIndex(Q.baseCoverage,T[J]);if($!==-1){const V=Q.markArray[z],H=Q.baseArray[$][V.markClass];S[b*3]=H.x-V.x+S[J*3]-S[J*3+2],S[b*3+1]=H.y-V.y+S[J*3+1];break}}}else if(W.ltype===6){const z=s._lctf.coverageIndex(Q.mark1Coverage,G);if(z!==-1){const J=U();if(J!==-1){const $=T[J];if(_(M,$)===3){const V=s._lctf.coverageIndex(Q.mark2Coverage,$);if(V!==-1){const H=Q.mark1Array[z],K=Q.mark2Array[V][H.markClass];S[b*3]=K.x-H.x+S[J*3]-S[J*3+2],S[b*3+1]=K.y-H.y+S[J*3+1];break}}}}}}}}else if(M.kern&&!M.cff){const N=U();if(N!==-1){const ee=M.kern.glyph1.indexOf(T[N]);if(ee!==-1){const W=M.kern.rval[ee].glyph2.indexOf(G);W!==-1&&(S[N*3+2]+=M.kern.rval[ee].vals[W])}}}}return S;function U(G){for(let j=b-1;j>=0;j--)if(T[j]!==-1&&(!G||G(T[j])))return j;return-1}function I(G){return _(M,G)===1}function B(G,j){for(let N=0;N<3;N++)S[j*3+N]+=G[N]||0}}function _(M,T){const S=M.GDEF&&M.GDEF.glyphClassDef;return S?s.U._getGlyphClass(T,S):0}function E(...M){for(let T=0;T<M.length;T++)if(typeof M[T]=="number")return M[T]}function w(M){const T=Object.create(null),S=M["OS/2"],b=M.hhea,U=M.head.unitsPerEm,I=E(S&&S.sTypoAscender,b&&b.ascender,U),B={unitsPerEm:U,ascender:I,descender:E(S&&S.sTypoDescender,b&&b.descender,0),capHeight:E(S&&S.sCapHeight,I),xHeight:E(S&&S.sxHeight,I),lineGap:E(S&&S.sTypoLineGap,b&&b.lineGap),supportsCodePoint(G){return s.U.codeToGlyph(M,G)>0},forEachGlyph(G,j,N,ee){let W=0;const Y=1/B.unitsPerEm*j,Q=y(M,G);let z=0;const J=x(M,Q);return Q.forEach(($,V)=>{if($!==-1){let H=T[$];if(!H){const{cmds:K,crds:q}=s.U.glyphToPath(M,$);let re="",be=0;for(let X=0,Fe=K.length;X<Fe;X++){const he=t[K[X]];re+=K[X];for(let ue=1;ue<=he;ue++)re+=(ue>1?",":"")+q[be++]}let Se,Me,ye,We;if(q.length){Se=Me=1/0,ye=We=-1/0;for(let X=0,Fe=q.length;X<Fe;X+=2){let he=q[X],ue=q[X+1];he<Se&&(Se=he),ue<Me&&(Me=ue),he>ye&&(ye=he),ue>We&&(We=ue)}}else Se=ye=Me=We=0;H=T[$]={index:$,advanceWidth:M.hmtx.aWidth[$],xMin:Se,yMin:Me,xMax:ye,yMax:We,path:re}}ee.call(null,H,W+J[V*3]*Y,J[V*3+1]*Y,z),W+=J[V*3+2]*Y,N&&(W+=N*j)}z+=G.codePointAt(z)>65535?2:1}),W}};return B}return function(T){const S=new Uint8Array(T,0,4),b=s._bin.readASCII(S,0,4);if(b==="wOFF")T=e(T);else if(b==="wOF2")throw new Error("woff2 fonts not supported");return w(s.parse(T)[0])}}const P2=ko({name:"Typr Font Parser",dependencies:[A2,C2,R2],init(s,e,t){const i=s(),n=e();return t(i,n)}});/*!
Custom bundle of @unicode-font-resolver/client v1.0.2 (https://github.com/lojjic/unicode-font-resolver)
for use in Troika text rendering. 
Original MIT license applies
*/function I2(){return function(s){var e=function(){this.buckets=new Map};e.prototype.add=function(x){var _=x>>5;this.buckets.set(_,(this.buckets.get(_)||0)|1<<(31&x))},e.prototype.has=function(x){var _=this.buckets.get(x>>5);return _!==void 0&&(_&1<<(31&x))!=0},e.prototype.serialize=function(){var x=[];return this.buckets.forEach(function(_,E){x.push((+E).toString(36)+":"+_.toString(36))}),x.join(",")},e.prototype.deserialize=function(x){var _=this;this.buckets.clear(),x.split(",").forEach(function(E){var w=E.split(":");_.buckets.set(parseInt(w[0],36),parseInt(w[1],36))})};var t=Math.pow(2,8),i=t-1,n=~i;function r(x){var _=function(w){return w&n}(x).toString(16),E=function(w){return(w&n)+t-1}(x).toString(16);return"codepoint-index/plane"+(x>>16)+"/"+_+"-"+E+".json"}function o(x,_){var E=x&i,w=_.codePointAt(E/6|0);return((w=(w||48)-48)&1<<E%6)!=0}function a(x,_){var E;(E=x,E.replace(/U\+/gi,"").replace(/^,+|,+$/g,"").split(/,+/).map(function(w){return w.split("-").map(function(M){return parseInt(M.trim(),16)})})).forEach(function(w){var M=w[0],T=w[1];T===void 0&&(T=M),_(M,T)})}function l(x,_){a(x,function(E,w){for(var M=E;M<=w;M++)_(M)})}var c={},h={},u=new WeakMap,d="https://cdn.jsdelivr.net/gh/lojjic/unicode-font-resolver@v1.0.1/packages/data";function f(x){var _=u.get(x);return _||(_=new e,l(x.ranges,function(E){return _.add(E)}),u.set(x,_)),_}var p,v=new Map;function m(x,_,E){return x[_]?_:x[E]?E:function(w){for(var M in w)return M}(x)}function g(x,_){var E=_;if(!x.includes(E)){E=1/0;for(var w=0;w<x.length;w++)Math.abs(x[w]-_)<Math.abs(E-_)&&(E=x[w])}return E}function y(x){return p||(p=new Set,l("9-D,20,85,A0,1680,2000-200A,2028-202F,205F,3000",function(_){p.add(_)})),p.has(x)}return s.CodePointSet=e,s.clearCache=function(){c={},h={}},s.getFontsForString=function(x,_){_===void 0&&(_={});var E,w=_.lang;w===void 0&&(w=new RegExp("\\p{Script=Hangul}","u").test(E=x)?"ko":new RegExp("\\p{Script=Hiragana}|\\p{Script=Katakana}","u").test(E)?"ja":"en");var M=_.category;M===void 0&&(M="sans-serif");var T=_.style;T===void 0&&(T="normal");var S=_.weight;S===void 0&&(S=400);var b=(_.dataUrl||d).replace(/\/$/g,""),U=new Map,I=new Uint8Array(x.length),B={},G={},j=new Array(x.length),N=new Map,ee=!1;function W(z){var J=v.get(z);return J||(J=fetch(b+"/"+z).then(function($){if(!$.ok)throw new Error($.statusText);return $.json().then(function(V){if(!Array.isArray(V)||V[0]!==1)throw new Error("Incorrect schema version; need 1, got "+V[0]);return V[1]})}).catch(function($){if(b!==d)return ee||(console.error('unicode-font-resolver: Failed loading from dataUrl "'+b+'", trying default CDN. '+$.message),ee=!0),b=d,v.delete(z),W(z);throw $}),v.set(z,J)),J}for(var Y=function(z){var J=x.codePointAt(z),$=r(J);j[z]=$,c[$]||N.has($)||N.set($,W($).then(function(V){c[$]=V})),J>65535&&(z++,Q=z)},Q=0;Q<x.length;Q++)Y(Q);return Promise.all(N.values()).then(function(){N.clear();for(var z=function($){var V=x.codePointAt($),H=null,K=c[j[$]],q=void 0;for(var re in K){var be=G[re];if(be===void 0&&(be=G[re]=new RegExp(re).test(w||"en")),be){for(var Se in q=re,K[re])if(o(V,K[re][Se])){H=Se;break}break}}if(!H){e:for(var Me in K)if(Me!==q){for(var ye in K[Me])if(o(V,K[Me][ye])){H=ye;break e}}}H||(console.debug("No font coverage for U+"+V.toString(16)),H="latin"),j[$]=H,h[H]||N.has(H)||N.set(H,W("font-meta/"+H+".json").then(function(We){h[H]=We})),V>65535&&($++,J=$)},J=0;J<x.length;J++)z(J);return Promise.all(N.values())}).then(function(){for(var z,J=null,$=0;$<x.length;$++){var V=x.codePointAt($);if(J&&(y(V)||f(J).has(V)))I[$]=I[$-1];else{J=h[j[$]];var H=B[J.id];if(!H){var K=J.typeforms,q=m(K,M,"sans-serif"),re=m(K[q],T,"normal"),be=g((z=K[q])===null||z===void 0?void 0:z[re],S);H=B[J.id]=b+"/font-files/"+J.id+"/"+q+"."+re+"."+be+".woff"}var Se=U.get(H);Se==null&&(Se=U.size,U.set(H,Se)),I[$]=Se}V>65535&&($++,I[$]=I[$-1])}return{fontUrls:Array.from(U.keys()),chars:I}})},Object.defineProperty(s,"__esModule",{value:!0}),s}({})}function D2(s,e){const t=Object.create(null),i=Object.create(null);function n(o,a){const l=c=>{console.error(`Failure loading font ${o}`,c)};try{const c=new XMLHttpRequest;c.open("get",o,!0),c.responseType="arraybuffer",c.onload=function(){if(c.status>=400)l(new Error(c.statusText));else if(c.status>0)try{const h=s(c.response);h.src=o,a(h)}catch(h){l(h)}},c.onerror=l,c.send()}catch(c){l(c)}}function r(o,a){let l=t[o];l?a(l):i[o]?i[o].push(a):(i[o]=[a],n(o,c=>{c.src=o,t[o]=c,i[o].forEach(h=>h(c)),delete i[o]}))}return function(o,a,{lang:l,fonts:c=[],style:h="normal",weight:u="normal",unicodeFontsURL:d}={}){const f=new Uint8Array(o.length),p=[];o.length||y();const v=new Map,m=[];if(h!=="italic"&&(h="normal"),typeof u!="number"&&(u=u==="bold"?700:400),c&&!Array.isArray(c)&&(c=[c]),c=c.slice().filter(_=>!_.lang||_.lang.test(l)).reverse(),c.length){let M=0;(function T(S=0){for(let b=S,U=o.length;b<U;b++){const I=o.codePointAt(b);if(M===1&&p[f[b-1]].supportsCodePoint(I)||b>0&&/\s/.test(o[b]))f[b]=f[b-1],M===2&&(m[m.length-1][1]=b);else for(let B=f[b],G=c.length;B<=G;B++)if(B===G){const j=M===2?m[m.length-1]:m[m.length]=[b,b];j[1]=b,M=2}else{f[b]=B;const{src:j,unicodeRange:N}=c[B];if(!N||x(I,N)){const ee=t[j];if(!ee){r(j,()=>{T(b)});return}if(ee.supportsCodePoint(I)){let W=v.get(ee);typeof W!="number"&&(W=p.length,p.push(ee),v.set(ee,W)),f[b]=W,M=1;break}}}I>65535&&b+1<U&&(f[b+1]=f[b],b++,M===2&&(m[m.length-1][1]=b))}g()})()}else m.push([0,o.length-1]),g();function g(){if(m.length){const _=m.map(E=>o.substring(E[0],E[1]+1)).join(`
`);e.getFontsForString(_,{lang:l||void 0,style:h,weight:u,dataUrl:d}).then(({fontUrls:E,chars:w})=>{const M=p.length;let T=0;m.forEach(b=>{for(let U=0,I=b[1]-b[0];U<=I;U++)f[b[0]+U]=w[T++]+M;T++});let S=0;E.forEach((b,U)=>{r(b,I=>{p[U+M]=I,++S===E.length&&y()})})})}else y()}function y(){a({chars:f,fonts:p})}function x(_,E){for(let w=0;w<E.length;w++){const[M,T=M]=E[w];if(M<=_&&_<=T)return!0}return!1}}}const U2=ko({name:"FontResolver",dependencies:[D2,P2,I2],init(s,e,t){return s(e,t())}});function L2(s,e){const i=/[\u00AD\u034F\u061C\u115F-\u1160\u17B4-\u17B5\u180B-\u180E\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8]/,n="[^\\S\\u00A0]",r=new RegExp(`${n}|[\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]`);function o({text:p,lang:v,fonts:m,style:g,weight:y,preResolvedFonts:x,unicodeFontsURL:_},E){const w=({chars:M,fonts:T})=>{let S,b;const U=[];for(let I=0;I<M.length;I++)M[I]!==b?(b=M[I],U.push(S={start:I,end:I,fontObj:T[M[I]]})):S.end=I;E(U)};x?w(x):s(p,w,{lang:v,fonts:m,style:g,weight:y,unicodeFontsURL:_})}function a({text:p="",font:v,lang:m,sdfGlyphSize:g=64,fontSize:y=400,fontWeight:x=1,fontStyle:_="normal",letterSpacing:E=0,lineHeight:w="normal",maxWidth:M=1/0,direction:T,textAlign:S="left",textIndent:b=0,whiteSpace:U="normal",overflowWrap:I="normal",anchorX:B=0,anchorY:G=0,metricsOnly:j=!1,unicodeFontsURL:N,preResolvedFonts:ee=null,includeCaretPositions:W=!1,chunkedBoundsSize:Y=8192,colorRanges:Q=null},z){const J=u(),$={fontLoad:0,typesetting:0};p.indexOf("\r")>-1&&(console.info("Typesetter: got text with \\r chars; normalizing to \\n"),p=p.replace(/\r\n/g,`
`).replace(/\r/g,`
`)),y=+y,E=+E,M=+M,w=w||"normal",b=+b,o({text:p,lang:m,style:_,weight:x,fonts:typeof v=="string"?[{src:v}]:v,unicodeFontsURL:N,preResolvedFonts:ee},V=>{$.fontLoad=u()-J;const H=isFinite(M);let K=null,q=null,re=null,be=null,Se=null,Me=null,ye=null,We=null,X=0,Fe=0,he=U!=="nowrap";const ue=new Map,ne=u();let _e=b,le=0,P=new d;const A=[P];V.forEach(we=>{const{fontObj:ve}=we,{ascender:Ae,descender:Xe,unitsPerEm:Re,lineGap:Oe,capHeight:ke,xHeight:ze}=ve;let Te=ue.get(ve);if(!Te){const Ce=y/Re,fe=w==="normal"?(Ae-Xe+Oe)*Ce:w*y,Pe=(fe-(Ae-Xe)*Ce)/2,Ue=Math.min(fe,(Ae-Xe)*Ce),Ie=(Ae+Xe)/2*Ce+Ue/2;Te={index:ue.size,src:ve.src,fontObj:ve,fontSizeMult:Ce,unitsPerEm:Re,ascender:Ae*Ce,descender:Xe*Ce,capHeight:ke*Ce,xHeight:ze*Ce,lineHeight:fe,baseline:-Pe-Ae*Ce,caretTop:Ie,caretBottom:Ie-Ue},ue.set(ve,Te)}const{fontSizeMult:ht}=Te,Qe=p.slice(we.start,we.end+1);let St,te;ve.forEachGlyph(Qe,y,E,(Ce,fe,Pe,Ue)=>{fe+=le,Ue+=we.start,St=fe,te=Ce;const Ie=p.charAt(Ue),st=Ce.advanceWidth*ht,vt=P.count;let lt;if("isEmpty"in Ce||(Ce.isWhitespace=!!Ie&&new RegExp(n).test(Ie),Ce.canBreakAfter=!!Ie&&r.test(Ie),Ce.isEmpty=Ce.xMin===Ce.xMax||Ce.yMin===Ce.yMax||i.test(Ie)),!Ce.isWhitespace&&!Ce.isEmpty&&Fe++,he&&H&&!Ce.isWhitespace&&fe+st+_e>M&&vt){if(P.glyphAt(vt-1).glyphObj.canBreakAfter)lt=new d,_e=-fe;else for(let Ht=vt;Ht--;)if(Ht===0&&I==="break-word"){lt=new d,_e=-fe;break}else if(P.glyphAt(Ht).glyphObj.canBreakAfter){lt=P.splitAt(Ht+1);const Zt=lt.glyphAt(0).x;_e-=Zt;for(let nn=lt.count;nn--;)lt.glyphAt(nn).x-=Zt;break}lt&&(P.isSoftWrapped=!0,P=lt,A.push(P),X=M)}let tt=P.glyphAt(P.count);tt.glyphObj=Ce,tt.x=fe+_e,tt.y=Pe,tt.width=st,tt.charIndex=Ue,tt.fontData=Te,Ie===`
`&&(P=new d,A.push(P),_e=-(fe+st+E*y)+b)}),le=St+te.advanceWidth*ht+E*y});let Z=0;A.forEach(we=>{let ve=!0;for(let Ae=we.count;Ae--;){const Xe=we.glyphAt(Ae);ve&&!Xe.glyphObj.isWhitespace&&(we.width=Xe.x+Xe.width,we.width>X&&(X=we.width),ve=!1);let{lineHeight:Re,capHeight:Oe,xHeight:ke,baseline:ze}=Xe.fontData;Re>we.lineHeight&&(we.lineHeight=Re);const Te=ze-we.baseline;Te<0&&(we.baseline+=Te,we.cap+=Te,we.ex+=Te),we.cap=Math.max(we.cap,we.baseline+Oe),we.ex=Math.max(we.ex,we.baseline+ke)}we.baseline-=Z,we.cap-=Z,we.ex-=Z,Z+=we.lineHeight});let ae=0,se=0;if(B&&(typeof B=="number"?ae=-B:typeof B=="string"&&(ae=-X*(B==="left"?0:B==="center"?.5:B==="right"?1:c(B)))),G&&(typeof G=="number"?se=-G:typeof G=="string"&&(se=G==="top"?0:G==="top-baseline"?-A[0].baseline:G==="top-cap"?-A[0].cap:G==="top-ex"?-A[0].ex:G==="middle"?Z/2:G==="bottom"?Z:G==="bottom-baseline"?-A[A.length-1].baseline:c(G)*Z)),!j){const we=e.getEmbeddingLevels(p,T);K=new Uint16Array(Fe),q=new Uint8Array(Fe),re=new Float32Array(Fe*2),be={},ye=[1/0,1/0,-1/0,-1/0],We=[],W&&(Me=new Float32Array(p.length*4)),Q&&(Se=new Uint8Array(Fe*3));let ve=0,Ae=-1,Xe=-1,Re,Oe;if(A.forEach((ke,ze)=>{let{count:Te,width:ht}=ke;if(Te>0){let Qe=0;for(let Ue=Te;Ue--&&ke.glyphAt(Ue).glyphObj.isWhitespace;)Qe++;let St=0,te=0;if(S==="center")St=(X-ht)/2;else if(S==="right")St=X-ht;else if(S==="justify"&&ke.isSoftWrapped){let Ue=0;for(let Ie=Te-Qe;Ie--;)ke.glyphAt(Ie).glyphObj.isWhitespace&&Ue++;te=(X-ht)/Ue}if(te||St){let Ue=0;for(let Ie=0;Ie<Te;Ie++){let st=ke.glyphAt(Ie);const vt=st.glyphObj;st.x+=St+Ue,te!==0&&vt.isWhitespace&&Ie<Te-Qe&&(Ue+=te,st.width+=te)}}const Ce=e.getReorderSegments(p,we,ke.glyphAt(0).charIndex,ke.glyphAt(ke.count-1).charIndex);for(let Ue=0;Ue<Ce.length;Ue++){const[Ie,st]=Ce[Ue];let vt=1/0,lt=-1/0;for(let tt=0;tt<Te;tt++)if(ke.glyphAt(tt).charIndex>=Ie){let Ht=tt,Zt=tt;for(;Zt<Te;Zt++){let nn=ke.glyphAt(Zt);if(nn.charIndex>st)break;Zt<Te-Qe&&(vt=Math.min(vt,nn.x),lt=Math.max(lt,nn.x+nn.width))}for(let nn=Ht;nn<Zt;nn++){const qn=ke.glyphAt(nn);qn.x=lt-(qn.x+qn.width-vt)}break}}let fe;const Pe=Ue=>fe=Ue;for(let Ue=0;Ue<Te;Ue++){const Ie=ke.glyphAt(Ue);fe=Ie.glyphObj;const st=fe.index,vt=we.levels[Ie.charIndex]&1;if(vt){const lt=e.getMirroredCharacter(p[Ie.charIndex]);lt&&Ie.fontData.fontObj.forEachGlyph(lt,0,0,Pe)}if(W){const{charIndex:lt,fontData:tt}=Ie,Ht=Ie.x+ae,Zt=Ie.x+Ie.width+ae;Me[lt*4]=vt?Zt:Ht,Me[lt*4+1]=vt?Ht:Zt,Me[lt*4+2]=ke.baseline+tt.caretBottom+se,Me[lt*4+3]=ke.baseline+tt.caretTop+se;const nn=lt-Ae;nn>1&&h(Me,Ae,nn),Ae=lt}if(Q){const{charIndex:lt}=Ie;for(;lt>Xe;)Xe++,Q.hasOwnProperty(Xe)&&(Oe=Q[Xe])}if(!fe.isWhitespace&&!fe.isEmpty){const lt=ve++,{fontSizeMult:tt,src:Ht,index:Zt}=Ie.fontData,nn=be[Ht]||(be[Ht]={});nn[st]||(nn[st]={path:fe.path,pathBounds:[fe.xMin,fe.yMin,fe.xMax,fe.yMax]});const qn=Ie.x+ae,Pn=Ie.y+ke.baseline+se;re[lt*2]=qn,re[lt*2+1]=Pn;const ri=qn+fe.xMin*tt,wi=Pn+fe.yMin*tt,Ei=qn+fe.xMax*tt,jn=Pn+fe.yMax*tt;ri<ye[0]&&(ye[0]=ri),wi<ye[1]&&(ye[1]=wi),Ei>ye[2]&&(ye[2]=Ei),jn>ye[3]&&(ye[3]=jn),lt%Y===0&&(Re={start:lt,end:lt,rect:[1/0,1/0,-1/0,-1/0]},We.push(Re)),Re.end++;const vn=Re.rect;if(ri<vn[0]&&(vn[0]=ri),wi<vn[1]&&(vn[1]=wi),Ei>vn[2]&&(vn[2]=Ei),jn>vn[3]&&(vn[3]=jn),K[lt]=st,q[lt]=Zt,Q){const hi=lt*3;Se[hi]=Oe>>16&255,Se[hi+1]=Oe>>8&255,Se[hi+2]=Oe&255}}}}}),Me){const ke=p.length-Ae;ke>1&&h(Me,Ae,ke)}}const de=[];ue.forEach(({index:we,src:ve,unitsPerEm:Ae,ascender:Xe,descender:Re,lineHeight:Oe,capHeight:ke,xHeight:ze})=>{de[we]={src:ve,unitsPerEm:Ae,ascender:Xe,descender:Re,lineHeight:Oe,capHeight:ke,xHeight:ze}}),$.typesetting=u()-ne,z({glyphIds:K,glyphFontIndices:q,glyphPositions:re,glyphData:be,fontData:de,caretPositions:Me,glyphColors:Se,chunkedBounds:We,fontSize:y,topBaseline:se+A[0].baseline,blockBounds:[ae,se-Z,ae+X,se],visibleBounds:ye,timings:$})})}function l(p,v){a({...p,metricsOnly:!0},m=>{const[g,y,x,_]=m.blockBounds;v({width:x-g,height:_-y})})}function c(p){let v=p.match(/^([\d.]+)%$/),m=v?parseFloat(v[1]):NaN;return isNaN(m)?0:m/100}function h(p,v,m){const g=p[v*4],y=p[v*4+1],x=p[v*4+2],_=p[v*4+3],E=(y-g)/m;for(let w=0;w<m;w++){const M=(v+w)*4;p[M]=g+E*w,p[M+1]=g+E*(w+1),p[M+2]=x,p[M+3]=_}}function u(){return(self.performance||Date).now()}function d(){this.data=[]}const f=["glyphObj","x","y","width","charIndex","fontData"];return d.prototype={width:0,lineHeight:0,baseline:0,cap:0,ex:0,isSoftWrapped:!1,get count(){return Math.ceil(this.data.length/f.length)},glyphAt(p){let v=d.flyweight;return v.data=this.data,v.index=p,v},splitAt(p){let v=new d;return v.data=this.data.splice(p*f.length),v}},d.flyweight=f.reduce((p,v,m,g)=>(Object.defineProperty(p,v,{get(){return this.data[this.index*f.length+m]},set(y){this.data[this.index*f.length+m]=y}}),p),{data:null,index:0}),{typeset:a,measure:l}}const ks=()=>(self.performance||Date).now(),eu=Qv();let bg;function N2(s,e,t,i,n,r,o,a,l,c,h=!0){return h?F2(s,e,t,i,n,r,o,a,l,c).then(null,u=>(bg||(console.warn("WebGL SDF generation failed, falling back to JS",u),bg=!0),Mg(s,e,t,i,n,r,o,a,l,c))):Mg(s,e,t,i,n,r,o,a,l,c)}const Mc=[],O2=5;let kd=0;function e_(){const s=ks();for(;Mc.length&&ks()-s<O2;)Mc.shift()();kd=Mc.length?setTimeout(e_,0):0}const F2=(...s)=>new Promise((e,t)=>{Mc.push(()=>{const i=ks();try{eu.webgl.generateIntoCanvas(...s),e({timing:ks()-i})}catch(n){t(n)}}),kd||(kd=setTimeout(e_,0))}),k2=4,B2=2e3,Sg={};let z2=0;function Mg(s,e,t,i,n,r,o,a,l,c){const h="TroikaTextSDFGenerator_JS_"+z2++%k2;let u=Sg[h];return u||(u=Sg[h]={workerModule:ko({name:h,workerId:h,dependencies:[Qv,ks],init(d,f){const p=d().javascript.generate;return function(...v){const m=f();return{textureData:p(...v),timing:f()-m}}},getTransferables(d){return[d.textureData.buffer]}}),requests:0,idleTimer:null}),u.requests++,clearTimeout(u.idleTimer),u.workerModule(s,e,t,i,n,r).then(({textureData:d,timing:f})=>{const p=ks(),v=new Uint8Array(d.length*4);for(let m=0;m<d.length;m++)v[m*4+c]=d[m];return eu.webglUtils.renderImageData(o,v,a,l,s,e,1<<3-c),f+=ks()-p,--u.requests===0&&(u.idleTimer=setTimeout(()=>{v2(h)},B2)),{timing:f}})}function G2(s){s._warm||(eu.webgl.isSupported(s),s._warm=!0)}const V2=eu.webglUtils.resizeWebGLCanvasWithoutClearing,ha={unicodeFontsURL:null,sdfGlyphSize:64,sdfMargin:1/16,sdfExponent:9,textureWidth:2048},H2=new Be;function xo(){return(self.performance||Date).now()}const wg=Object.create(null);function t_(s,e){s=Y2({},s);const t=xo(),i=[];if(s.font&&i.push({label:"user",src:q2(s.font)}),s.font=i,s.text=""+s.text,s.sdfGlyphSize=s.sdfGlyphSize||ha.sdfGlyphSize,s.unicodeFontsURL=s.unicodeFontsURL||ha.unicodeFontsURL,s.colorRanges!=null){let d={};for(let f in s.colorRanges)if(s.colorRanges.hasOwnProperty(f)){let p=s.colorRanges[f];typeof p!="number"&&(p=H2.set(p).getHex()),d[f]=p}s.colorRanges=d}Object.freeze(s);const{textureWidth:n,sdfExponent:r}=ha,{sdfGlyphSize:o}=s,a=n/o*4;let l=wg[o];if(!l){const d=document.createElement("canvas");d.width=n,d.height=o*256/a,l=wg[o]={glyphCount:0,sdfGlyphSize:o,sdfCanvas:d,sdfTexture:new fn(d,void 0,void 0,void 0,bn,bn),contextLost:!1,glyphsByFont:new Map},l.sdfTexture.generateMipmaps=!1,W2(l)}const{sdfTexture:c,sdfCanvas:h}=l;r_(s).then(d=>{const{glyphIds:f,glyphFontIndices:p,fontData:v,glyphPositions:m,fontSize:g,timings:y}=d,x=[],_=new Float32Array(f.length*4);let E=0,w=0;const M=xo(),T=v.map(B=>{let G=l.glyphsByFont.get(B.src);return G||l.glyphsByFont.set(B.src,G=new Map),G});f.forEach((B,G)=>{const j=p[G],{src:N,unitsPerEm:ee}=v[j];let W=T[j].get(B);if(!W){const{path:$,pathBounds:V}=d.glyphData[N][B],H=Math.max(V[2]-V[0],V[3]-V[1])/o*(ha.sdfMargin*o+.5),K=l.glyphCount++,q=[V[0]-H,V[1]-H,V[2]+H,V[3]+H];T[j].set(B,W={path:$,atlasIndex:K,sdfViewBox:q}),x.push(W)}const{sdfViewBox:Y}=W,Q=m[w++],z=m[w++],J=g/ee;_[E++]=Q+Y[0]*J,_[E++]=z+Y[1]*J,_[E++]=Q+Y[2]*J,_[E++]=z+Y[3]*J,f[G]=W.atlasIndex}),y.quads=(y.quads||0)+(xo()-M);const S=xo();y.sdf={};const b=h.height,U=Math.ceil(l.glyphCount/a),I=Math.pow(2,Math.ceil(Math.log2(U*o)));I>b&&(console.info(`Increasing SDF texture size ${b}->${I}`),V2(h,n,I),c.dispose()),Promise.all(x.map(B=>n_(B,l,s.gpuAccelerateSDF).then(({timing:G})=>{y.sdf[B.atlasIndex]=G}))).then(()=>{x.length&&!l.contextLost&&(i_(l),c.needsUpdate=!0),y.sdfTotal=xo()-S,y.total=xo()-t,e(Object.freeze({parameters:s,sdfTexture:c,sdfGlyphSize:o,sdfExponent:r,glyphBounds:_,glyphAtlasIndices:f,glyphColors:d.glyphColors,caretPositions:d.caretPositions,chunkedBounds:d.chunkedBounds,ascender:d.ascender,descender:d.descender,lineHeight:d.lineHeight,capHeight:d.capHeight,xHeight:d.xHeight,topBaseline:d.topBaseline,blockBounds:d.blockBounds,visibleBounds:d.visibleBounds,timings:d.timings}))})}),Promise.resolve().then(()=>{l.contextLost||G2(h)})}function n_({path:s,atlasIndex:e,sdfViewBox:t},{sdfGlyphSize:i,sdfCanvas:n,contextLost:r},o){if(r)return Promise.resolve({timing:-1});const{textureWidth:a,sdfExponent:l}=ha,c=Math.max(t[2]-t[0],t[3]-t[1]),h=Math.floor(e/4),u=h%(a/i)*i,d=Math.floor(h/(a/i))*i,f=e%4;return N2(i,i,s,t,c,l,n,u,d,f,o)}function W2(s){const e=s.sdfCanvas;e.addEventListener("webglcontextlost",t=>{console.log("Context Lost",t),t.preventDefault(),s.contextLost=!0}),e.addEventListener("webglcontextrestored",t=>{console.log("Context Restored",t),s.contextLost=!1;const i=[];s.glyphsByFont.forEach(n=>{n.forEach(r=>{i.push(n_(r,s,!0))})}),Promise.all(i).then(()=>{i_(s),s.sdfTexture.needsUpdate=!0})})}function X2({font:s,characters:e,sdfGlyphSize:t},i){let n=Array.isArray(e)?e.join(`
`):""+e;t_({font:s,sdfGlyphSize:t,text:n},i)}function Y2(s,e){for(let t in e)e.hasOwnProperty(t)&&(s[t]=e[t]);return s}let uc;function q2(s){return uc||(uc=typeof document>"u"?{}:document.createElement("a")),uc.href=s,uc.href}function i_(s){if(typeof createImageBitmap!="function"){console.info("Safari<15: applying SDF canvas workaround");const{sdfCanvas:e,sdfTexture:t}=s,{width:i,height:n}=e,r=s.sdfCanvas.getContext("webgl");let o=t.image.data;(!o||o.length!==i*n*4)&&(o=new Uint8Array(i*n*4),t.image={width:i,height:n,data:o},t.flipY=!1,t.isDataTexture=!0),r.readPixels(0,0,i,n,r.RGBA,r.UNSIGNED_BYTE,o)}}const j2=ko({name:"Typesetter",dependencies:[L2,U2,y2],init(s,e,t){return s(e,t())}}),r_=ko({name:"Typesetter",dependencies:[j2],init(s){return function(e){return new Promise(t=>{s.typeset(e,t)})}},getTransferables(s){const e=[];for(let t in s)s[t]&&s[t].buffer&&e.push(s[t].buffer);return e}});r_.onMainThread;const Eg={};function Z2(s){let e=Eg[s];return e||(e=Eg[s]=new er(1,1,s,s).translate(.5,.5,0)),e}const K2="aTroikaGlyphBounds",Tg="aTroikaGlyphIndex",J2="aTroikaGlyphColor";class Q2 extends qh{constructor(){super(),this.detail=1,this.curveRadius=0,this.groups=[{start:0,count:1/0,materialIndex:0},{start:0,count:1/0,materialIndex:1}],this.boundingSphere=new Tn,this.boundingBox=new Sn}computeBoundingSphere(){}computeBoundingBox(){}set detail(e){if(e!==this._detail){this._detail=e,(typeof e!="number"||e<1)&&(e=1);let t=Z2(e);["position","normal","uv"].forEach(i=>{this.attributes[i]=t.attributes[i].clone()}),this.setIndex(t.getIndex().clone())}}get detail(){return this._detail}set curveRadius(e){e!==this._curveRadius&&(this._curveRadius=e,this._updateBounds())}get curveRadius(){return this._curveRadius}updateGlyphs(e,t,i,n,r){this.updateAttributeData(K2,e,4),this.updateAttributeData(Tg,t,1),this.updateAttributeData(J2,r,3),this._blockBounds=i,this._chunkedBounds=n,this.instanceCount=t.length,this._updateBounds()}_updateBounds(){const e=this._blockBounds;if(e){const{curveRadius:t,boundingBox:i}=this;if(t){const{PI:n,floor:r,min:o,max:a,sin:l,cos:c}=Math,h=n/2,u=n*2,d=Math.abs(t),f=e[0]/d,p=e[2]/d,v=r((f+h)/u)!==r((p+h)/u)?-d:o(l(f)*d,l(p)*d),m=r((f-h)/u)!==r((p-h)/u)?d:a(l(f)*d,l(p)*d),g=r((f+n)/u)!==r((p+n)/u)?d*2:a(d-c(f)*d,d-c(p)*d);i.min.set(v,e[1],t<0?-g:0),i.max.set(m,e[3],t<0?0:g)}else i.min.set(e[0],e[1],0),i.max.set(e[2],e[3],0);i.getBoundingSphere(this.boundingSphere)}}applyClipRect(e){let t=this.getAttribute(Tg).count,i=this._chunkedBounds;if(i)for(let n=i.length;n--;){t=i[n].end;let r=i[n].rect;if(r[1]<e.w&&r[3]>e.y&&r[0]<e.z&&r[2]>e.x)break}this.instanceCount=t}updateAttributeData(e,t,i){const n=this.getAttribute(e);t?n&&n.array.length===t.length?(n.array.set(t),n.needsUpdate=!0):(this.setAttribute(e,new Gs(t,i)),delete this._maxInstanceCount,this.dispose()):n&&this.deleteAttribute(e)}}const $2=`
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform vec4 uTroikaTotalBounds;
uniform vec4 uTroikaClipRect;
uniform mat3 uTroikaOrient;
uniform bool uTroikaUseGlyphColors;
uniform float uTroikaEdgeOffset;
uniform float uTroikaBlurRadius;
uniform vec2 uTroikaPositionOffset;
uniform float uTroikaCurveRadius;
attribute vec4 aTroikaGlyphBounds;
attribute float aTroikaGlyphIndex;
attribute vec3 aTroikaGlyphColor;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec3 vTroikaGlyphColor;
varying vec2 vTroikaGlyphDimensions;
`,eC=`
vec4 bounds = aTroikaGlyphBounds;
bounds.xz += uTroikaPositionOffset.x;
bounds.yw -= uTroikaPositionOffset.y;

vec4 outlineBounds = vec4(
  bounds.xy - uTroikaEdgeOffset - uTroikaBlurRadius,
  bounds.zw + uTroikaEdgeOffset + uTroikaBlurRadius
);
vec4 clippedBounds = vec4(
  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),
  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)
);

vec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);

position.xy = mix(bounds.xy, bounds.zw, clippedXY);

uv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);

float rad = uTroikaCurveRadius;
if (rad != 0.0) {
  float angle = position.x / rad;
  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);
  normal.xz = vec2(sin(angle), cos(angle));
}
  
position = uTroikaOrient * position;
normal = uTroikaOrient * normal;

vTroikaGlyphUV = clippedXY.xy;
vTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);


float txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;
vec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;
vec2 txStartUV = txUvPerSquare * vec2(
  mod(floor(aTroikaGlyphIndex / 4.0), txCols),
  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)
);
vTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);
vTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);
`,tC=`
uniform sampler2D uTroikaSDFTexture;
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform float uTroikaSDFExponent;
uniform float uTroikaEdgeOffset;
uniform float uTroikaFillOpacity;
uniform float uTroikaBlurRadius;
uniform vec3 uTroikaStrokeColor;
uniform float uTroikaStrokeWidth;
uniform float uTroikaStrokeOpacity;
uniform bool uTroikaSDFDebug;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec2 vTroikaGlyphDimensions;

float troikaSdfValueToSignedDistance(float alpha) {
  // Inverse of exponential encoding in webgl-sdf-generator
  
  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);
  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;
  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);
  return signedDist;
}

float troikaGlyphUvToSdfValue(vec2 glyphUV) {
  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);
  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);
  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1
  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;
}

float troikaGlyphUvToDistance(vec2 uv) {
  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));
}

float troikaGetAADist() {
  
  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300
  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;
  #else
  return vTroikaGlyphDimensions.x / 64.0;
  #endif
}

float troikaGetFragDistValue() {
  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);
  float distance = troikaGlyphUvToDistance(clampedGlyphUV);
 
  // Extrapolate distance when outside bounds:
  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : 
    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);

  

  return distance;
}

float troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {
  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)
  float alpha = step(-distanceOffset, -distance);
  #else

  float alpha = smoothstep(
    distanceOffset + aaDist,
    distanceOffset - aaDist,
    distance
  );
  #endif

  return alpha;
}
`,nC=`
float aaDist = troikaGetAADist();
float fragDistance = troikaGetFragDistValue();
float edgeAlpha = uTroikaSDFDebug ?
  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :
  troikaGetEdgeAlpha(fragDistance, uTroikaEdgeOffset, max(aaDist, uTroikaBlurRadius));

#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)
vec4 fillRGBA = gl_FragColor;
fillRGBA.a *= uTroikaFillOpacity;
vec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);
if (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;
gl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(
  -uTroikaStrokeWidth - aaDist,
  -uTroikaStrokeWidth + aaDist,
  fragDistance
));
gl_FragColor.a *= edgeAlpha;
#endif

if (edgeAlpha == 0.0) {
  discard;
}
`;function iC(s){const e=Fd(s,{chained:!0,extensions:{derivatives:!0},uniforms:{uTroikaSDFTexture:{value:null},uTroikaSDFTextureSize:{value:new ge},uTroikaSDFGlyphSize:{value:0},uTroikaSDFExponent:{value:0},uTroikaTotalBounds:{value:new Rt(0,0,0,0)},uTroikaClipRect:{value:new Rt(0,0,0,0)},uTroikaEdgeOffset:{value:0},uTroikaFillOpacity:{value:1},uTroikaPositionOffset:{value:new ge},uTroikaCurveRadius:{value:0},uTroikaBlurRadius:{value:0},uTroikaStrokeWidth:{value:0},uTroikaStrokeColor:{value:new Be},uTroikaStrokeOpacity:{value:1},uTroikaOrient:{value:new Mt},uTroikaUseGlyphColors:{value:!0},uTroikaSDFDebug:{value:!1}},vertexDefs:$2,vertexTransform:eC,fragmentDefs:tC,fragmentColorTransform:nC,customRewriter({vertexShader:t,fragmentShader:i}){let n=/\buniform\s+vec3\s+diffuse\b/;return n.test(i)&&(i=i.replace(n,"varying vec3 vTroikaGlyphColor").replace(/\bdiffuse\b/g,"vTroikaGlyphColor"),n.test(t)||(t=t.replace($v,`uniform vec3 diffuse;
$&
vTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;
`))),{vertexShader:t,fragmentShader:i}}});return e.transparent=!0,e.forceSinglePass=!0,Object.defineProperties(e,{isTroikaTextMaterial:{value:!0},shadowSide:{get(){return this.side},set(){}}}),e}const jf=new Ln({color:16777215,side:vi,transparent:!0}),Ag=8421504,Cg=new rt,dc=new D,cd=new D,ra=[],rC=new D,hd="+x+y";function Rg(s){return Array.isArray(s)?s[0]:s}let s_=()=>{const s=new Ne(new er(1,1),jf);return s_=()=>s,s},o_=()=>{const s=new Ne(new er(1,1,32,1),jf);return o_=()=>s,s};const sC={type:"syncstart"},oC={type:"synccomplete"},a_=["font","fontSize","fontStyle","fontWeight","lang","letterSpacing","lineHeight","maxWidth","overflowWrap","text","direction","textAlign","textIndent","whiteSpace","anchorX","anchorY","colorRanges","sdfGlyphSize"],aC=a_.concat("material","color","depthOffset","clipRect","curveRadius","orientation","glyphGeometryDetail");let l_=class extends Ne{constructor(){const e=new Q2;super(e,null),this.text="",this.anchorX=0,this.anchorY=0,this.curveRadius=0,this.direction="auto",this.font=null,this.unicodeFontsURL=null,this.fontSize=.1,this.fontWeight="normal",this.fontStyle="normal",this.lang=null,this.letterSpacing=0,this.lineHeight="normal",this.maxWidth=1/0,this.overflowWrap="normal",this.textAlign="left",this.textIndent=0,this.whiteSpace="normal",this.material=null,this.color=null,this.colorRanges=null,this.outlineWidth=0,this.outlineColor=0,this.outlineOpacity=1,this.outlineBlur=0,this.outlineOffsetX=0,this.outlineOffsetY=0,this.strokeWidth=0,this.strokeColor=Ag,this.strokeOpacity=1,this.fillOpacity=1,this.depthOffset=0,this.clipRect=null,this.orientation=hd,this.glyphGeometryDetail=1,this.sdfGlyphSize=null,this.gpuAccelerateSDF=!0,this.debugSDF=!1}sync(e){this._needsSync&&(this._needsSync=!1,this._isSyncing?(this._queuedSyncs||(this._queuedSyncs=[])).push(e):(this._isSyncing=!0,this.dispatchEvent(sC),t_({text:this.text,font:this.font,lang:this.lang,fontSize:this.fontSize||.1,fontWeight:this.fontWeight||"normal",fontStyle:this.fontStyle||"normal",letterSpacing:this.letterSpacing||0,lineHeight:this.lineHeight||"normal",maxWidth:this.maxWidth,direction:this.direction||"auto",textAlign:this.textAlign,textIndent:this.textIndent,whiteSpace:this.whiteSpace,overflowWrap:this.overflowWrap,anchorX:this.anchorX,anchorY:this.anchorY,colorRanges:this.colorRanges,includeCaretPositions:!0,sdfGlyphSize:this.sdfGlyphSize,gpuAccelerateSDF:this.gpuAccelerateSDF,unicodeFontsURL:this.unicodeFontsURL},t=>{this._isSyncing=!1,this._textRenderInfo=t,this.geometry.updateGlyphs(t.glyphBounds,t.glyphAtlasIndices,t.blockBounds,t.chunkedBounds,t.glyphColors);const i=this._queuedSyncs;i&&(this._queuedSyncs=null,this._needsSync=!0,this.sync(()=>{i.forEach(n=>n&&n())})),this.dispatchEvent(oC),e&&e()})))}onBeforeRender(e,t,i,n,r,o){this.sync(),r.isTroikaTextMaterial&&this._prepareForRender(r)}dispose(){this.geometry.dispose()}get textRenderInfo(){return this._textRenderInfo||null}createDerivedMaterial(e){return iC(e)}get material(){let e=this._derivedMaterial;const t=this._baseMaterial||this._defaultMaterial||(this._defaultMaterial=jf.clone());if((!e||!e.isDerivedFrom(t))&&(e=this._derivedMaterial=this.createDerivedMaterial(t),t.addEventListener("dispose",function i(){t.removeEventListener("dispose",i),e.dispose()})),this.hasOutline()){let i=e._outlineMtl;return i||(i=e._outlineMtl=Object.create(e,{id:{value:e.id+.1}}),i.isTextOutlineMaterial=!0,i.depthWrite=!1,i.map=null,e.addEventListener("dispose",function n(){e.removeEventListener("dispose",n),i.dispose()})),[i,e]}else return e}set material(e){e&&e.isTroikaTextMaterial?(this._derivedMaterial=e,this._baseMaterial=e.baseMaterial):this._baseMaterial=e}hasOutline(){return!!(this.outlineWidth||this.outlineBlur||this.outlineOffsetX||this.outlineOffsetY)}get glyphGeometryDetail(){return this.geometry.detail}set glyphGeometryDetail(e){this.geometry.detail=e}get curveRadius(){return this.geometry.curveRadius}set curveRadius(e){this.geometry.curveRadius=e}get customDepthMaterial(){return Rg(this.material).getDepthMaterial()}set customDepthMaterial(e){}get customDistanceMaterial(){return Rg(this.material).getDistanceMaterial()}set customDistanceMaterial(e){}_prepareForRender(e){const t=e.isTextOutlineMaterial,i=e.uniforms,n=this.textRenderInfo;if(n){const{sdfTexture:a,blockBounds:l}=n;i.uTroikaSDFTexture.value=a,i.uTroikaSDFTextureSize.value.set(a.image.width,a.image.height),i.uTroikaSDFGlyphSize.value=n.sdfGlyphSize,i.uTroikaSDFExponent.value=n.sdfExponent,i.uTroikaTotalBounds.value.fromArray(l),i.uTroikaUseGlyphColors.value=!t&&!!n.glyphColors;let c=0,h=0,u=0,d,f,p,v=0,m=0;if(t){let{outlineWidth:y,outlineOffsetX:x,outlineOffsetY:_,outlineBlur:E,outlineOpacity:w}=this;c=this._parsePercent(y)||0,h=Math.max(0,this._parsePercent(E)||0),d=w,v=this._parsePercent(x)||0,m=this._parsePercent(_)||0}else u=Math.max(0,this._parsePercent(this.strokeWidth)||0),u&&(p=this.strokeColor,i.uTroikaStrokeColor.value.set(p??Ag),f=this.strokeOpacity,f==null&&(f=1)),d=this.fillOpacity;i.uTroikaEdgeOffset.value=c,i.uTroikaPositionOffset.value.set(v,m),i.uTroikaBlurRadius.value=h,i.uTroikaStrokeWidth.value=u,i.uTroikaStrokeOpacity.value=f,i.uTroikaFillOpacity.value=d??1,i.uTroikaCurveRadius.value=this.curveRadius||0;let g=this.clipRect;if(g&&Array.isArray(g)&&g.length===4)i.uTroikaClipRect.value.fromArray(g);else{const y=(this.fontSize||.1)*100;i.uTroikaClipRect.value.set(l[0]-y,l[1]-y,l[2]+y,l[3]+y)}this.geometry.applyClipRect(i.uTroikaClipRect.value)}i.uTroikaSDFDebug.value=!!this.debugSDF,e.polygonOffset=!!this.depthOffset,e.polygonOffsetFactor=e.polygonOffsetUnits=this.depthOffset||0;const r=t?this.outlineColor||0:this.color;if(r==null)delete e.color;else{const a=e.hasOwnProperty("color")?e.color:e.color=new Be;(r!==a._input||typeof r=="object")&&a.set(a._input=r)}let o=this.orientation||hd;if(o!==e._orientation){let a=i.uTroikaOrient.value;o=o.replace(/[^-+xyz]/g,"");let l=o!==hd&&o.match(/^([-+])([xyz])([-+])([xyz])$/);if(l){let[,c,h,u,d]=l;dc.set(0,0,0)[h]=c==="-"?1:-1,cd.set(0,0,0)[d]=u==="-"?-1:1,Cg.lookAt(rC,dc.cross(cd),cd),a.setFromMatrix4(Cg)}else a.identity();e._orientation=o}}_parsePercent(e){if(typeof e=="string"){let t=e.match(/^(-?[\d.]+)%$/),i=t?parseFloat(t[1]):NaN;e=(isNaN(i)?0:i/100)*this.fontSize}return e}localPositionToTextCoords(e,t=new ge){t.copy(e);const i=this.curveRadius;return i&&(t.x=Math.atan2(e.x,Math.abs(i)-Math.abs(e.z))*Math.abs(i)),t}worldPositionToTextCoords(e,t=new ge){return dc.copy(e),this.localPositionToTextCoords(this.worldToLocal(dc),t)}raycast(e,t){const{textRenderInfo:i,curveRadius:n}=this;if(i){const r=i.blockBounds,o=n?o_():s_(),a=o.geometry,{position:l,uv:c}=a.attributes;for(let h=0;h<c.count;h++){let u=r[0]+c.getX(h)*(r[2]-r[0]);const d=r[1]+c.getY(h)*(r[3]-r[1]);let f=0;n&&(f=n-Math.cos(u/n)*n,u=Math.sin(u/n)*n),l.setXYZ(h,u,d,f)}a.boundingSphere=this.geometry.boundingSphere,a.boundingBox=this.geometry.boundingBox,o.matrixWorld=this.matrixWorld,o.material.side=this.material.side,ra.length=0,o.raycast(e,ra);for(let h=0;h<ra.length;h++)ra[h].object=this,t.push(ra[h])}}copy(e){const t=this.geometry;return super.copy(e),this.geometry=t,aC.forEach(i=>{this[i]=e[i]}),this}clone(){return new this.constructor().copy(this)}};a_.forEach(s=>{const e="_private_"+s;Object.defineProperty(l_.prototype,s,{get(){return this[e]},set(t){t!==this[e]&&(this[e]=t,this._needsSync=!0)}})});new Sn;new Be;new Sn;new Be;typeof window<"u"&&document.createElement("div");function c_(s,e){Xn(e,!0);let t=He(e,"ref",15),i=fr(e,["$$slots","$$events","$$legacy","font","characters","sdfGlyphSize","ref","onsync","children"]);const n=new l_,{invalidate:r}=Li(),o=async()=>{await Vd(),n.sync(()=>{var c;r(),(c=e.onsync)==null||c.call(e)})},a=["text","anchorX","anchorY","curveRadius","direction","font","fontSize","letterSpacing","lineHeight","maxWidth","overflowWrap","textAlign","textIndent","whiteSpace","material","color","depthOffset","clipRect","glyphGeometryDetail","sdfGlyphSize","outlineWidth","outlineColor","outlineOpacity","outlineBlur","outlineOffsetX","outlineOffsetY","strokeWidth","strokeColor","strokeOpacity","fillOpacity","characters","colorRanges"];Uv(()=>a.map(c=>i[c]),()=>{o()});const l=VT();Pt(()=>{l(new Promise(c=>X2({font:e.font,characters:e.characters,sdfGlyphSize:e.sdfGlyphSize},c)))}),bt(s,Ir({is:n},()=>i,{get font(){return e.font},get characters(){return e.characters},get sdfGlyphSize(){return e.sdfGlyphSize},get ref(){return t()},set ref(c){t(c)},children:(c,h)=>{var u=yt(),d=it(u);Bi(d,()=>e.children??Pr,()=>({ref:n})),nt(c,u)},$$slots:{default:!0}})),Yn()}const lC=s=>{const{camera:e}=Li();let t=s.current.clientWidth,i=s.current.clientHeight;const n=new ResizeObserver(([r])=>{t=r.contentRect.width,i=r.contentRect.height});return $n(s,r=>(r&&n.observe(r),()=>{r&&n.unobserve(r)})),(r,o)=>{o.pointer.update(a=>(a.set(r.offsetX/t*2-1,-(r.offsetY/i)*2+1),a)),o.raycaster.setFromCamera(o.pointer.current,e.current)}},h_=Symbol("interactivity-context"),cC=()=>ni(h_),hC=s=>{const e=un(Jh().dom),t={enabled:un(!0),pointer:un(new ge),pointerOverTarget:un(!1),lastEvent:void 0,raycaster:new jh,initialClick:[0,0],initialHits:[],hovered:new Map,interactiveObjects:[],target:e,handlers:new WeakMap,compute:lC(e),filter:s==null?void 0:s.filter,addInteractiveObject:(i,n)=>{t.interactiveObjects.indexOf(i)>-1||(t.handlers.set(i,n),t.interactiveObjects.push(i))},removeInteractiveObject:i=>{const n=t.interactiveObjects.indexOf(i);t.interactiveObjects.splice(n,1),t.handlers.delete(i)}};return Mi(h_,t),t},u_=()=>{const s=cC();if(!s)throw new Error("No interactivity context found. Did you forget to implement interactivity()?");return s},Pg=["onclick","oncontextmenu","ondblclick","onwheel","onpointerup","onpointerdown","onpointerover","onpointerout","onpointerenter","onpointerleave","onpointermove","onpointermissed"],uC=()=>{kT("interactivity",s=>{if(!Pi(s.ref,"Object3D")||!Object.entries(s.props).some(([n,r])=>r!==void 0&&Pg.includes(n)))return;const{addInteractiveObject:t,removeInteractiveObject:i}=u_();return Uv.pre(()=>[s.ref],([n])=>(t(n,s.props),()=>{i(n)})),{pluginProps:Pg}})};function Ig(s){return`${(s.eventObject||s.object).uuid}/${s.index}${s.instanceId}`}const Dg=[["click",!1],["contextmenu",!1],["dblclick",!1],["wheel",!1],["pointerdown",!0],["pointerup",!0],["pointerleave",!0],["pointerenter",!0],["pointermove",!0],["pointercancel",!0]],dC=s=>{const{handlers:e}=u_(),t=c=>{const h=c.offsetX-s.initialClick[0],u=c.offsetY-s.initialClick[1];return Math.round(Math.hypot(h,u))},i=c=>{var h,u;for(const d of s.hovered.values())if(c.length===0||!c.some(f=>f.object===d.object&&f.index===d.index&&f.instanceId===d.instanceId)){const{eventObject:f}=d;s.hovered.delete(Ig(d));const p=e.get(f);if(p){const v={...d,intersections:c};(h=p.onpointerout)==null||h.call(p,v),(u=p.onpointerleave)==null||u.call(p,v)}}},n=()=>{if(!s.enabled.current)return[];const c=[],h=s.raycaster.intersectObjects(s.interactiveObjects,!0),u=s.filter===void 0?h:s.filter(h,s);for(const d of u){let f=d.object;for(;f;)e.has(f)&&c.push({...d,eventObject:f}),f=f.parent}return c},r=(c,h)=>{var u,d;for(const f of h)(d=(u=e.get(f))==null?void 0:u.onpointermissed)==null||d.call(u,c)},o=c=>c==="pointerleave"||c==="pointercancel"?()=>{s.pointerOverTarget.set(!1),i([])}:c==="pointerenter"?()=>{s.pointerOverTarget.set(!0)}:h=>{var m,g,y,x;const u=c==="pointermove",d=c==="click"||c==="contextmenu"||c==="dblclick";s.compute(h,s);const f=n(),p=d?t(h):0;c==="pointerdown"&&(s.initialClick=[h.offsetX,h.offsetY],s.initialHits=f.map(_=>_.eventObject)),d&&f.length===0&&p<=2&&r(h,s.interactiveObjects),u&&i(f);let v=!1;e:for(const _ of f){const E={stopped:v,..._,intersections:f,stopPropagation(){if(v=!0,E.stopped=!0,s.hovered.size>0&&Array.from(s.hovered.values()).some(M=>M.eventObject===_.eventObject)){const M=f.slice(0,f.indexOf(_));i([...M,_])}},camera:s.raycaster.camera,delta:p,nativeEvent:h,pointer:s.pointer.current,ray:s.raycaster.ray},w=e.get(_.eventObject);if(!w)return;if(u){if(w.onpointerover||w.onpointerenter||w.onpointerout||w.onpointerleave){const M=Ig(E),T=s.hovered.get(M);T?T.stopped&&E.stopPropagation():(s.hovered.set(M,E),(m=w.onpointerover)==null||m.call(w,E),(g=w.onpointerenter)==null||g.call(w,E))}(y=w.onpointermove)==null||y.call(w,E)}else w[`on${c}`]?(!d||s.initialHits.includes(_.eventObject))&&(r(h,s.interactiveObjects.filter(M=>!s.initialHits.includes(M))),(x=w[`on${c}`])==null||x.call(w,E)):d&&s.initialHits.includes(_.eventObject)&&r(h,s.interactiveObjects.filter(M=>!s.initialHits.includes(M)));if(v)break e}},a=c=>{Dg.forEach(([h])=>{c.removeEventListener(h,o(h))})},l=c=>{Dg.forEach(([h,u])=>{c.addEventListener(h,o(h),{passive:u})})};$n(s.target,c=>(c&&l(c),()=>{c&&a(c)}))},Zf=s=>{const e=hC(s);return uC(),dC(e),e};for(let s=0;s<256;s++)(s<16?"0":"")+s.toString(16);new ts(-1,1,1,-1,0,1);class fC extends _t{constructor(){super(),this.setAttribute("position",new je([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new je([0,2,0,0,2,0],2))}}new fC;var d_={exports:{}};d_.exports=tu;d_.exports.default=tu;function tu(s,e,t){t=t||2;var i=e&&e.length,n=i?e[0]*t:s.length,r=f_(s,0,n,t,!0),o=[];if(!r||r.next===r.prev)return o;var a,l,c,h,u,d,f;if(i&&(r=_C(s,e,r,t)),s.length>80*t){a=c=s[0],l=h=s[1];for(var p=t;p<n;p+=t)u=s[p],d=s[p+1],u<a&&(a=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);f=Math.max(c-a,h-l),f=f!==0?32767/f:0}return Va(r,o,t,a,l,f,0),o}function f_(s,e,t,i,n){var r,o;if(n===Gd(s,e,t,i)>0)for(r=e;r<t;r+=i)o=Ug(r,s[r],s[r+1],o);else for(r=t-i;r>=e;r-=i)o=Ug(r,s[r],s[r+1],o);return o&&nu(o,o.next)&&(Wa(o),o=o.next),o}function Ys(s,e){if(!s)return s;e||(e=s);var t=s,i;do if(i=!1,!t.steiner&&(nu(t,t.next)||dn(t.prev,t,t.next)===0)){if(Wa(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function Va(s,e,t,i,n,r,o){if(s){!o&&r&&MC(s,i,n,r);for(var a=s,l,c;s.prev!==s.next;){if(l=s.prev,c=s.next,r?mC(s,i,n,r):pC(s)){e.push(l.i/t|0),e.push(s.i/t|0),e.push(c.i/t|0),Wa(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=gC(Ys(s),e,t),Va(s,e,t,i,n,r,2)):o===2&&vC(s,e,t,i,n,r):Va(Ys(s),e,t,i,n,r,1);break}}}}function pC(s){var e=s.prev,t=s,i=s.next;if(dn(e,t,i)>=0)return!1;for(var n=e.x,r=t.x,o=i.x,a=e.y,l=t.y,c=i.y,h=n<r?n<o?n:o:r<o?r:o,u=a<l?a<c?a:c:l<c?l:c,d=n>r?n>o?n:o:r>o?r:o,f=a>l?a>c?a:c:l>c?l:c,p=i.next;p!==e;){if(p.x>=h&&p.x<=d&&p.y>=u&&p.y<=f&&wo(n,a,r,l,o,c,p.x,p.y)&&dn(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function mC(s,e,t,i){var n=s.prev,r=s,o=s.next;if(dn(n,r,o)>=0)return!1;for(var a=n.x,l=r.x,c=o.x,h=n.y,u=r.y,d=o.y,f=a<l?a<c?a:c:l<c?l:c,p=h<u?h<d?h:d:u<d?u:d,v=a>l?a>c?a:c:l>c?l:c,m=h>u?h>d?h:d:u>d?u:d,g=Bd(f,p,e,t,i),y=Bd(v,m,e,t,i),x=s.prevZ,_=s.nextZ;x&&x.z>=g&&_&&_.z<=y;){if(x.x>=f&&x.x<=v&&x.y>=p&&x.y<=m&&x!==n&&x!==o&&wo(a,h,l,u,c,d,x.x,x.y)&&dn(x.prev,x,x.next)>=0||(x=x.prevZ,_.x>=f&&_.x<=v&&_.y>=p&&_.y<=m&&_!==n&&_!==o&&wo(a,h,l,u,c,d,_.x,_.y)&&dn(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;x&&x.z>=g;){if(x.x>=f&&x.x<=v&&x.y>=p&&x.y<=m&&x!==n&&x!==o&&wo(a,h,l,u,c,d,x.x,x.y)&&dn(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;_&&_.z<=y;){if(_.x>=f&&_.x<=v&&_.y>=p&&_.y<=m&&_!==n&&_!==o&&wo(a,h,l,u,c,d,_.x,_.y)&&dn(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function gC(s,e,t){var i=s;do{var n=i.prev,r=i.next.next;!nu(n,r)&&p_(n,i,i.next,r)&&Ha(n,r)&&Ha(r,n)&&(e.push(n.i/t|0),e.push(i.i/t|0),e.push(r.i/t|0),Wa(i),Wa(i.next),i=s=r),i=i.next}while(i!==s);return Ys(i)}function vC(s,e,t,i,n,r){var o=s;do{for(var a=o.next.next;a!==o.prev;){if(o.i!==a.i&&TC(o,a)){var l=m_(o,a);o=Ys(o,o.next),l=Ys(l,l.next),Va(o,e,t,i,n,r,0),Va(l,e,t,i,n,r,0);return}a=a.next}o=o.next}while(o!==s)}function _C(s,e,t,i){var n=[],r,o,a,l,c;for(r=0,o=e.length;r<o;r++)a=e[r]*i,l=r<o-1?e[r+1]*i:s.length,c=f_(s,a,l,i,!1),c===c.next&&(c.steiner=!0),n.push(EC(c));for(n.sort(yC),r=0;r<n.length;r++)t=xC(n[r],t);return t}function yC(s,e){return s.x-e.x}function xC(s,e){var t=bC(s,e);if(!t)return e;var i=m_(t,s);return Ys(i,i.next),Ys(t,t.next)}function bC(s,e){var t=e,i=s.x,n=s.y,r=-1/0,o;do{if(n<=t.y&&n>=t.next.y&&t.next.y!==t.y){var a=t.x+(n-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(a<=i&&a>r&&(r=a,o=t.x<t.next.x?t:t.next,a===i))return o}t=t.next}while(t!==e);if(!o)return null;var l=o,c=o.x,h=o.y,u=1/0,d;t=o;do i>=t.x&&t.x>=c&&i!==t.x&&wo(n<h?i:r,n,c,h,n<h?r:i,n,t.x,t.y)&&(d=Math.abs(n-t.y)/(i-t.x),Ha(t,s)&&(d<u||d===u&&(t.x>o.x||t.x===o.x&&SC(o,t)))&&(o=t,u=d)),t=t.next;while(t!==l);return o}function SC(s,e){return dn(s.prev,s,e.prev)<0&&dn(e.next,s,s.next)<0}function MC(s,e,t,i){var n=s;do n.z===0&&(n.z=Bd(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==s);n.prevZ.nextZ=null,n.prevZ=null,wC(n)}function wC(s){var e,t,i,n,r,o,a,l,c=1;do{for(t=s,s=null,r=null,o=0;t;){for(o++,i=t,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||t.z<=i.z)?(n=t,t=t.nextZ,a--):(n=i,i=i.nextZ,l--),r?r.nextZ=n:s=n,n.prevZ=r,r=n;t=i}r.nextZ=null,c*=2}while(o>1);return s}function Bd(s,e,t,i,n){return s=(s-t)*n|0,e=(e-i)*n|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function EC(s){var e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function wo(s,e,t,i,n,r,o,a){return(n-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(n-o)*(i-a)}function TC(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!AC(s,e)&&(Ha(s,e)&&Ha(e,s)&&CC(s,e)&&(dn(s.prev,s,e.prev)||dn(s,e.prev,e))||nu(s,e)&&dn(s.prev,s,s.next)>0&&dn(e.prev,e,e.next)>0)}function dn(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function nu(s,e){return s.x===e.x&&s.y===e.y}function p_(s,e,t,i){var n=pc(dn(s,e,t)),r=pc(dn(s,e,i)),o=pc(dn(t,i,s)),a=pc(dn(t,i,e));return!!(n!==r&&o!==a||n===0&&fc(s,t,e)||r===0&&fc(s,i,e)||o===0&&fc(t,s,i)||a===0&&fc(t,e,i))}function fc(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function pc(s){return s>0?1:s<0?-1:0}function AC(s,e){var t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&p_(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function Ha(s,e){return dn(s.prev,s,s.next)<0?dn(s,e,s.next)>=0&&dn(s,s.prev,e)>=0:dn(s,e,s.prev)<0||dn(s,s.next,e)<0}function CC(s,e){var t=s,i=!1,n=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&n<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==s);return i}function m_(s,e){var t=new zd(s.i,s.x,s.y),i=new zd(e.i,e.x,e.y),n=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=n,n.prev=t,i.next=t,t.prev=i,r.next=i,i.prev=r,i}function Ug(s,e,t,i){var n=new zd(s,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function Wa(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function zd(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}tu.deviation=function(s,e,t,i){var n=e&&e.length,r=n?e[0]*t:s.length,o=Math.abs(Gd(s,0,r,t));if(n)for(var a=0,l=e.length;a<l;a++){var c=e[a]*t,h=a<l-1?e[a+1]*t:s.length;o-=Math.abs(Gd(s,c,h,t))}var u=0;for(a=0;a<i.length;a+=3){var d=i[a]*t,f=i[a+1]*t,p=i[a+2]*t;u+=Math.abs((s[d]-s[p])*(s[f+1]-s[d+1])-(s[d]-s[f])*(s[p+1]-s[d+1]))}return o===0&&u===0?0:Math.abs((u-o)/o)};function Gd(s,e,t,i){for(var n=0,r=e,o=t-i;r<t;r+=i)n+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return n}tu.flatten=function(s){for(var e=s[0][0].length,t={vertices:[],holes:[],dimensions:e},i=0,n=0;n<s.length;n++){for(var r=0;r<s[n].length;r++)for(var o=0;o<e;o++)t.vertices.push(s[n][r][o]);n>0&&(i+=s[n-1].length,t.holes.push(i))}return t};new ge;new ge;var Lg;(s=>{function e(n){let r=n.slice();return r.sort(s.POINT_COMPARATOR),s.makeHullPresorted(r)}s.makeHull=e;function t(n){if(n.length<=1)return n.slice();let r=[];for(let a=0;a<n.length;a++){const l=n[a];for(;r.length>=2;){const c=r[r.length-1],h=r[r.length-2];if((c.x-h.x)*(l.y-h.y)>=(c.y-h.y)*(l.x-h.x))r.pop();else break}r.push(l)}r.pop();let o=[];for(let a=n.length-1;a>=0;a--){const l=n[a];for(;o.length>=2;){const c=o[o.length-1],h=o[o.length-2];if((c.x-h.x)*(l.y-h.y)>=(c.y-h.y)*(l.x-h.x))o.pop();else break}o.push(l)}return o.pop(),r.length==1&&o.length==1&&r[0].x==o[0].x&&r[0].y==o[0].y?r:r.concat(o)}s.makeHullPresorted=t;function i(n,r){return n.x<r.x?-1:n.x>r.x?1:n.y<r.y?-1:n.y>r.y?1:0}s.POINT_COMPARATOR=i})(Lg||(Lg={}));class Ng extends dv{constructor(e){super(e)}parse(e){function t(N){switch(N.image_type){case d:case v:if(N.colormap_length>256||N.colormap_size!==24||N.colormap_type!==1)throw new Error("THREE.TGALoader: Invalid type colormap data for indexed type.");break;case f:case p:case m:case g:if(N.colormap_type)throw new Error("THREE.TGALoader: Invalid type colormap data for colormap type.");break;case u:throw new Error("THREE.TGALoader: No data.");default:throw new Error("THREE.TGALoader: Invalid type "+N.image_type)}if(N.width<=0||N.height<=0)throw new Error("THREE.TGALoader: Invalid image size.");if(N.pixel_size!==8&&N.pixel_size!==16&&N.pixel_size!==24&&N.pixel_size!==32)throw new Error("THREE.TGALoader: Invalid pixel size "+N.pixel_size)}function i(N,ee,W,Y,Q){let z,J;const $=W.pixel_size>>3,V=W.width*W.height*$;if(ee&&(J=Q.subarray(Y,Y+=W.colormap_length*(W.colormap_size>>3))),N){z=new Uint8Array(V);let H,K,q,re=0;const be=new Uint8Array($);for(;re<V;)if(H=Q[Y++],K=(H&127)+1,H&128){for(q=0;q<$;++q)be[q]=Q[Y++];for(q=0;q<K;++q)z.set(be,re+q*$);re+=$*K}else{for(K*=$,q=0;q<K;++q)z[re+q]=Q[Y++];re+=K}}else z=Q.subarray(Y,Y+=ee?W.width*W.height:V);return{pixel_data:z,palettes:J}}function n(N,ee,W,Y,Q,z,J,$,V){const H=V;let K,q=0,re,be;const Se=b.width;for(be=ee;be!==Y;be+=W)for(re=Q;re!==J;re+=z,q++)K=$[q],N[(re+Se*be)*4+3]=255,N[(re+Se*be)*4+2]=H[K*3+0],N[(re+Se*be)*4+1]=H[K*3+1],N[(re+Se*be)*4+0]=H[K*3+2];return N}function r(N,ee,W,Y,Q,z,J,$){let V,H=0,K,q;const re=b.width;for(q=ee;q!==Y;q+=W)for(K=Q;K!==J;K+=z,H+=2)V=$[H+0]+($[H+1]<<8),N[(K+re*q)*4+0]=(V&31744)>>7,N[(K+re*q)*4+1]=(V&992)>>2,N[(K+re*q)*4+2]=(V&31)<<3,N[(K+re*q)*4+3]=V&32768?0:255;return N}function o(N,ee,W,Y,Q,z,J,$){let V=0,H,K;const q=b.width;for(K=ee;K!==Y;K+=W)for(H=Q;H!==J;H+=z,V+=3)N[(H+q*K)*4+3]=255,N[(H+q*K)*4+2]=$[V+0],N[(H+q*K)*4+1]=$[V+1],N[(H+q*K)*4+0]=$[V+2];return N}function a(N,ee,W,Y,Q,z,J,$){let V=0,H,K;const q=b.width;for(K=ee;K!==Y;K+=W)for(H=Q;H!==J;H+=z,V+=4)N[(H+q*K)*4+2]=$[V+0],N[(H+q*K)*4+1]=$[V+1],N[(H+q*K)*4+0]=$[V+2],N[(H+q*K)*4+3]=$[V+3];return N}function l(N,ee,W,Y,Q,z,J,$){let V,H=0,K,q;const re=b.width;for(q=ee;q!==Y;q+=W)for(K=Q;K!==J;K+=z,H++)V=$[H],N[(K+re*q)*4+0]=V,N[(K+re*q)*4+1]=V,N[(K+re*q)*4+2]=V,N[(K+re*q)*4+3]=255;return N}function c(N,ee,W,Y,Q,z,J,$){let V=0,H,K;const q=b.width;for(K=ee;K!==Y;K+=W)for(H=Q;H!==J;H+=z,V+=2)N[(H+q*K)*4+0]=$[V+0],N[(H+q*K)*4+1]=$[V+0],N[(H+q*K)*4+2]=$[V+0],N[(H+q*K)*4+3]=$[V+1];return N}function h(N,ee,W,Y,Q){let z,J,$,V,H,K;switch((b.flags&y)>>x){default:case w:z=0,$=1,H=ee,J=0,V=1,K=W;break;case _:z=0,$=1,H=ee,J=W-1,V=-1,K=-1;break;case M:z=ee-1,$=-1,H=-1,J=0,V=1,K=W;break;case E:z=ee-1,$=-1,H=-1,J=W-1,V=-1,K=-1;break}if(B)switch(b.pixel_size){case 8:l(N,J,V,K,z,$,H,Y);break;case 16:c(N,J,V,K,z,$,H,Y);break;default:throw new Error("THREE.TGALoader: Format not supported.")}else switch(b.pixel_size){case 8:n(N,J,V,K,z,$,H,Y,Q);break;case 16:r(N,J,V,K,z,$,H,Y);break;case 24:o(N,J,V,K,z,$,H,Y);break;case 32:a(N,J,V,K,z,$,H,Y);break;default:throw new Error("THREE.TGALoader: Format not supported.")}return N}const u=0,d=1,f=2,p=3,v=9,m=10,g=11,y=48,x=4,_=0,E=1,w=2,M=3;if(e.length<19)throw new Error("THREE.TGALoader: Not enough data to contain header.");let T=0;const S=new Uint8Array(e),b={id_length:S[T++],colormap_type:S[T++],image_type:S[T++],colormap_index:S[T++]|S[T++]<<8,colormap_length:S[T++]|S[T++]<<8,colormap_size:S[T++],origin:[S[T++]|S[T++]<<8,S[T++]|S[T++]<<8],width:S[T++]|S[T++]<<8,height:S[T++]|S[T++]<<8,pixel_size:S[T++],flags:S[T++]};if(t(b),b.id_length+T>e.length)throw new Error("THREE.TGALoader: No data.");T+=b.id_length;let U=!1,I=!1,B=!1;switch(b.image_type){case v:U=!0,I=!0;break;case d:I=!0;break;case m:U=!0;break;case f:break;case g:U=!0,B=!0;break;case p:B=!0;break}const G=new Uint8Array(b.width*b.height*4),j=i(U,I,b,T,S);return h(G,b.width,b.height,j.pixel_data,j.palettes),{data:G,width:b.width,height:b.height,flipY:!0,generateMipmaps:!0,minFilter:Zi}}}class RC extends Hn{load(e,t,i,n){const r=this,o=r.path===""?uh.extractUrlBase(e):r.path,a=new Ji(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(l){try{t(r.parse(l,o))}catch(c){n?n(c):console.error(c),r.manager.itemError(e)}},i,n)}parse(e,t){function i(R,C){const F=[],L=R.childNodes;for(let k=0,me=L.length;k<me;k++){const xe=L[k];xe.nodeName===C&&F.push(xe)}return F}function n(R){if(R.length===0)return[];const C=R.trim().split(/\s+/),F=new Array(C.length);for(let L=0,k=C.length;L<k;L++)F[L]=C[L];return F}function r(R){if(R.length===0)return[];const C=R.trim().split(/\s+/),F=new Array(C.length);for(let L=0,k=C.length;L<k;L++)F[L]=parseFloat(C[L]);return F}function o(R){if(R.length===0)return[];const C=R.trim().split(/\s+/),F=new Array(C.length);for(let L=0,k=C.length;L<k;L++)F[L]=parseInt(C[L]);return F}function a(R){return R.substring(1)}function l(){return"three_default_"+Ti++}function c(R){return Object.keys(R).length===0}function h(R){return{unit:u(i(R,"unit")[0]),upAxis:d(i(R,"up_axis")[0])}}function u(R){return R!==void 0&&R.hasAttribute("meter")===!0?parseFloat(R.getAttribute("meter")):1}function d(R){return R!==void 0?R.textContent:"Y_UP"}function f(R,C,F,L){const k=i(R,C)[0];if(k!==void 0){const me=i(k,F);for(let xe=0;xe<me.length;xe++)L(me[xe])}}function p(R,C){for(const F in R){const L=R[F];L.build=C(R[F])}}function v(R,C){return R.build!==void 0||(R.build=C(R)),R.build}function m(R){const C={sources:{},samplers:{},channels:{}};let F=!1;for(let L=0,k=R.childNodes.length;L<k;L++){const me=R.childNodes[L];if(me.nodeType!==1)continue;let xe;switch(me.nodeName){case"source":xe=me.getAttribute("id"),C.sources[xe]=fe(me);break;case"sampler":xe=me.getAttribute("id"),C.samplers[xe]=g(me);break;case"channel":xe=me.getAttribute("target"),C.channels[xe]=y(me);break;case"animation":m(me),F=!0;break;default:console.log(me)}}F===!1&&(pt.animations[R.getAttribute("id")||or.generateUUID()]=C)}function g(R){const C={inputs:{}};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"input":const me=a(k.getAttribute("source")),xe=k.getAttribute("semantic");C.inputs[xe]=me;break}}return C}function y(R){const C={};let L=R.getAttribute("target").split("/");const k=L.shift();let me=L.shift();const xe=me.indexOf("(")!==-1,Ke=me.indexOf(".")!==-1;if(Ke)L=me.split("."),me=L.shift(),C.member=L.shift();else if(xe){const Ge=me.split("(");me=Ge.shift();for(let qe=0;qe<Ge.length;qe++)Ge[qe]=parseInt(Ge[qe].replace(/\)/,""));C.indices=Ge}return C.id=k,C.sid=me,C.arraySyntax=xe,C.memberSyntax=Ke,C.sampler=a(R.getAttribute("source")),C}function x(R){const C=[],F=R.channels,L=R.samplers,k=R.sources;for(const me in F)if(F.hasOwnProperty(me)){const xe=F[me],Ke=L[xe.sampler],Ge=Ke.inputs.INPUT,qe=Ke.inputs.OUTPUT,at=k[Ge],De=k[qe],ot=E(xe,at,De);b(ot,C)}return C}function _(R){return v(pt.animations[R],x)}function E(R,C,F){const L=pt.nodes[R.id],k=Et(L.id),me=L.transforms[R.sid],xe=L.matrix.clone().transpose();let Ke,Ge,qe,at,De,ot;const $e={};switch(me){case"matrix":for(qe=0,at=C.array.length;qe<at;qe++)if(Ke=C.array[qe],Ge=qe*F.stride,$e[Ke]===void 0&&($e[Ke]={}),R.arraySyntax===!0){const Qt=F.array[Ge],zt=R.indices[0]+4*R.indices[1];$e[Ke][zt]=Qt}else for(De=0,ot=F.stride;De<ot;De++)$e[Ke][De]=F.array[Ge+De];break;case"translate":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',me);break;case"rotate":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',me);break;case"scale":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',me);break}const dt=w($e,xe);return{name:k.uuid,keyframes:dt}}function w(R,C){const F=[];for(const k in R)F.push({time:parseFloat(k),value:R[k]});F.sort(L);for(let k=0;k<16;k++)U(F,k,C.elements[k]);return F;function L(k,me){return k.time-me.time}}const M=new D,T=new D,S=new Gt;function b(R,C){const F=R.keyframes,L=R.name,k=[],me=[],xe=[],Ke=[];for(let Ge=0,qe=F.length;Ge<qe;Ge++){const at=F[Ge],De=at.time,ot=at.value;oe.fromArray(ot).transpose(),oe.decompose(M,S,T),k.push(De),me.push(M.x,M.y,M.z),xe.push(S.x,S.y,S.z,S.w),Ke.push(T.x,T.y,T.z)}return me.length>0&&C.push(new Hs(L+".position",k,me)),xe.length>0&&C.push(new Oo(L+".quaternion",k,xe)),Ke.length>0&&C.push(new Hs(L+".scale",k,Ke)),C}function U(R,C,F){let L,k=!0,me,xe;for(me=0,xe=R.length;me<xe;me++)L=R[me],L.value[C]===void 0?L.value[C]=null:k=!1;if(k===!0)for(me=0,xe=R.length;me<xe;me++)L=R[me],L.value[C]=F;else I(R,C)}function I(R,C){let F,L;for(let k=0,me=R.length;k<me;k++){const xe=R[k];if(xe.value[C]===null){if(F=B(R,k,C),L=G(R,k,C),F===null){xe.value[C]=L.value[C];continue}if(L===null){xe.value[C]=F.value[C];continue}j(xe,F,L,C)}}}function B(R,C,F){for(;C>=0;){const L=R[C];if(L.value[F]!==null)return L;C--}return null}function G(R,C,F){for(;C<R.length;){const L=R[C];if(L.value[F]!==null)return L;C++}return null}function j(R,C,F,L){if(F.time-C.time===0){R.value[L]=C.value[L];return}R.value[L]=(R.time-C.time)*(F.value[L]-C.value[L])/(F.time-C.time)+C.value[L]}function N(R){const C={name:R.getAttribute("id")||"default",start:parseFloat(R.getAttribute("start")||0),end:parseFloat(R.getAttribute("end")||0),animations:[]};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"instance_animation":C.animations.push(a(k.getAttribute("url")));break}}pt.clips[R.getAttribute("id")]=C}function ee(R){const C=[],F=R.name,L=R.end-R.start||-1,k=R.animations;for(let me=0,xe=k.length;me<xe;me++){const Ke=_(k[me]);for(let Ge=0,qe=Ke.length;Ge<qe;Ge++)C.push(Ke[Ge])}return new Ws(F,L,C)}function W(R){return v(pt.clips[R],ee)}function Y(R){const C={};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"skin":C.id=a(k.getAttribute("source")),C.skin=Q(k);break;case"morph":C.id=a(k.getAttribute("source")),console.warn("THREE.ColladaLoader: Morph target animation not supported yet.");break}}pt.controllers[R.getAttribute("id")]=C}function Q(R){const C={sources:{}};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"bind_shape_matrix":C.bindShapeMatrix=r(k.textContent);break;case"source":const me=k.getAttribute("id");C.sources[me]=fe(k);break;case"joints":C.joints=z(k);break;case"vertex_weights":C.vertexWeights=J(k);break}}return C}function z(R){const C={inputs:{}};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"input":const me=k.getAttribute("semantic"),xe=a(k.getAttribute("source"));C.inputs[me]=xe;break}}return C}function J(R){const C={inputs:{}};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"input":const me=k.getAttribute("semantic"),xe=a(k.getAttribute("source")),Ke=parseInt(k.getAttribute("offset"));C.inputs[me]={id:xe,offset:Ke};break;case"vcount":C.vcount=o(k.textContent);break;case"v":C.v=o(k.textContent);break}}return C}function $(R){const C={id:R.id},F=pt.geometries[C.id];return R.skin!==void 0&&(C.skin=V(R.skin),F.sources.skinIndices=C.skin.indices,F.sources.skinWeights=C.skin.weights),C}function V(R){const F={joints:[],indices:{array:[],stride:4},weights:{array:[],stride:4}},L=R.sources,k=R.vertexWeights,me=k.vcount,xe=k.v,Ke=k.inputs.JOINT.offset,Ge=k.inputs.WEIGHT.offset,qe=R.sources[R.joints.inputs.JOINT],at=R.sources[R.joints.inputs.INV_BIND_MATRIX],De=L[k.inputs.WEIGHT.id].array;let ot=0,$e,dt,et;for($e=0,et=me.length;$e<et;$e++){const zt=me[$e],Ft=[];for(dt=0;dt<zt;dt++){const Ot=xe[ot+Ke],Ni=xe[ot+Ge],On=De[Ni];Ft.push({index:Ot,weight:On}),ot+=2}for(Ft.sort(Qt),dt=0;dt<4;dt++){const Ot=Ft[dt];Ot!==void 0?(F.indices.array.push(Ot.index),F.weights.array.push(Ot.weight)):(F.indices.array.push(0),F.weights.array.push(0))}}for(R.bindShapeMatrix?F.bindMatrix=new rt().fromArray(R.bindShapeMatrix).transpose():F.bindMatrix=new rt().identity(),$e=0,et=qe.array.length;$e<et;$e++){const zt=qe.array[$e],Ft=new rt().fromArray(at.array,$e*at.stride).transpose();F.joints.push({name:zt,boneInverse:Ft})}return F;function Qt(zt,Ft){return Ft.weight-zt.weight}}function H(R){return v(pt.controllers[R],$)}function K(R){const C={init_from:i(R,"init_from")[0].textContent};pt.images[R.getAttribute("id")]=C}function q(R){return R.build!==void 0?R.build:R.init_from}function re(R){const C=pt.images[R];return C!==void 0?v(C,q):(console.warn("THREE.ColladaLoader: Couldn't find image with ID:",R),null)}function be(R){const C={};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"profile_COMMON":C.profile=Se(k);break}}pt.effects[R.getAttribute("id")]=C}function Se(R){const C={surfaces:{},samplers:{}};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"newparam":Me(k,C);break;case"technique":C.technique=X(k);break;case"extra":C.extra=le(k);break}}return C}function Me(R,C){const F=R.getAttribute("sid");for(let L=0,k=R.childNodes.length;L<k;L++){const me=R.childNodes[L];if(me.nodeType===1)switch(me.nodeName){case"surface":C.surfaces[F]=ye(me);break;case"sampler2D":C.samplers[F]=We(me);break}}}function ye(R){const C={};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"init_from":C.init_from=k.textContent;break}}return C}function We(R){const C={};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"source":C.source=k.textContent;break}}return C}function X(R){const C={};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"constant":case"lambert":case"blinn":case"phong":C.type=k.nodeName,C.parameters=Fe(k);break;case"extra":C.extra=le(k);break}}return C}function Fe(R){const C={};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"emission":case"diffuse":case"specular":case"bump":case"ambient":case"shininess":case"transparency":C[k.nodeName]=he(k);break;case"transparent":C[k.nodeName]={opaque:k.hasAttribute("opaque")?k.getAttribute("opaque"):"A_ONE",data:he(k)};break}}return C}function he(R){const C={};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"color":C[k.nodeName]=r(k.textContent);break;case"float":C[k.nodeName]=parseFloat(k.textContent);break;case"texture":C[k.nodeName]={id:k.getAttribute("texture"),extra:ue(k)};break}}return C}function ue(R){const C={technique:{}};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"extra":ne(k,C);break}}return C}function ne(R,C){for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"technique":_e(k,C);break}}}function _e(R,C){for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"repeatU":case"repeatV":case"offsetU":case"offsetV":C.technique[k.nodeName]=parseFloat(k.textContent);break;case"wrapU":case"wrapV":k.textContent.toUpperCase()==="TRUE"?C.technique[k.nodeName]=1:k.textContent.toUpperCase()==="FALSE"?C.technique[k.nodeName]=0:C.technique[k.nodeName]=parseInt(k.textContent);break;case"bump":C[k.nodeName]=A(k);break}}}function le(R){const C={};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"technique":C.technique=P(k);break}}return C}function P(R){const C={};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"double_sided":C[k.nodeName]=parseInt(k.textContent);break;case"bump":C[k.nodeName]=A(k);break}}return C}function A(R){const C={};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"texture":C[k.nodeName]={id:k.getAttribute("texture"),texcoord:k.getAttribute("texcoord"),extra:ue(k)};break}}return C}function Z(R){return R}function ae(R){return v(pt.effects[R],Z)}function se(R){const C={name:R.getAttribute("name")};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"instance_effect":C.url=a(k.getAttribute("url"));break}}pt.materials[R.getAttribute("id")]=C}function de(R){let C,F=R.slice((R.lastIndexOf(".")-1>>>0)+2);switch(F=F.toLowerCase(),F){case"tga":C=pn;break;default:C=Mn}return C}function we(R){const C=ae(R.url),F=C.profile.technique;let L;switch(F.type){case"phong":case"blinn":L=new hh;break;case"lambert":L=new yf;break;default:L=new Ln;break}L.name=R.name||"";function k(Ge,qe=null){const at=C.profile.samplers[Ge.id];let De=null;if(at!==void 0){const ot=C.profile.surfaces[at.source];De=re(ot.init_from)}else console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."),De=re(Ge.id);if(De!==null){const ot=de(De);if(ot!==void 0){const $e=ot.load(De),dt=Ge.extra;if(dt!==void 0&&dt.technique!==void 0&&c(dt.technique)===!1){const et=dt.technique;$e.wrapS=et.wrapU?ji:yi,$e.wrapT=et.wrapV?ji:yi,$e.offset.set(et.offsetU||0,et.offsetV||0),$e.repeat.set(et.repeatU||1,et.repeatV||1)}else $e.wrapS=ji,$e.wrapT=ji;return qe!==null&&($e.colorSpace=qe),$e}else return console.warn("THREE.ColladaLoader: Loader for texture %s not found.",De),null}else return console.warn("THREE.ColladaLoader: Couldn't create texture with ID:",Ge.id),null}const me=F.parameters;for(const Ge in me){const qe=me[Ge];switch(Ge){case"diffuse":qe.color&&L.color.fromArray(qe.color),qe.texture&&(L.map=k(qe.texture,on));break;case"specular":qe.color&&L.specular&&L.specular.fromArray(qe.color),qe.texture&&(L.specularMap=k(qe.texture));break;case"bump":qe.texture&&(L.normalMap=k(qe.texture));break;case"ambient":qe.texture&&(L.lightMap=k(qe.texture,on));break;case"shininess":qe.float&&L.shininess&&(L.shininess=qe.float);break;case"emission":qe.color&&L.emissive&&L.emissive.fromArray(qe.color),qe.texture&&(L.emissiveMap=k(qe.texture,on));break}}Dt.toWorkingColorSpace(L.color,on),L.specular&&Dt.toWorkingColorSpace(L.specular,on),L.emissive&&Dt.toWorkingColorSpace(L.emissive,on);let xe=me.transparent,Ke=me.transparency;if(Ke===void 0&&xe&&(Ke={float:1}),xe===void 0&&Ke&&(xe={opaque:"A_ONE",data:{color:[1,1,1,1]}}),xe&&Ke)if(xe.data.texture)L.transparent=!0;else{const Ge=xe.data.color;switch(xe.opaque){case"A_ONE":L.opacity=Ge[3]*Ke.float;break;case"RGB_ZERO":L.opacity=1-Ge[0]*Ke.float;break;case"A_ZERO":L.opacity=1-Ge[3]*Ke.float;break;case"RGB_ONE":L.opacity=Ge[0]*Ke.float;break;default:console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.',xe.opaque)}L.opacity<1&&(L.transparent=!0)}if(F.extra!==void 0&&F.extra.technique!==void 0){const Ge=F.extra.technique;for(const qe in Ge){const at=Ge[qe];switch(qe){case"double_sided":L.side=at===1?vi:ur;break;case"bump":L.normalMap=k(at.texture),L.normalScale=new ge(1,1);break}}}return L}function ve(R){return v(pt.materials[R],we)}function Ae(R){const C={name:R.getAttribute("name")};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"optics":C.optics=Xe(k);break}}pt.cameras[R.getAttribute("id")]=C}function Xe(R){for(let C=0;C<R.childNodes.length;C++){const F=R.childNodes[C];switch(F.nodeName){case"technique_common":return Re(F)}}return{}}function Re(R){const C={};for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];switch(L.nodeName){case"perspective":case"orthographic":C.technique=L.nodeName,C.parameters=Oe(L);break}}return C}function Oe(R){const C={};for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];switch(L.nodeName){case"xfov":case"yfov":case"xmag":case"ymag":case"znear":case"zfar":case"aspect_ratio":C[L.nodeName]=parseFloat(L.textContent);break}}return C}function ke(R){let C;switch(R.optics.technique){case"perspective":C=new xn(R.optics.parameters.yfov,R.optics.parameters.aspect_ratio,R.optics.parameters.znear,R.optics.parameters.zfar);break;case"orthographic":let F=R.optics.parameters.ymag,L=R.optics.parameters.xmag;const k=R.optics.parameters.aspect_ratio;L=L===void 0?F*k:L,F=F===void 0?L/k:F,L*=.5,F*=.5,C=new ts(-L,L,F,-F,R.optics.parameters.znear,R.optics.parameters.zfar);break;default:C=new xn;break}return C.name=R.name||"",C}function ze(R){const C=pt.cameras[R];return C!==void 0?v(C,ke):(console.warn("THREE.ColladaLoader: Couldn't find camera with ID:",R),null)}function Te(R){let C={};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"technique_common":C=ht(k);break}}pt.lights[R.getAttribute("id")]=C}function ht(R){const C={};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"directional":case"point":case"spot":case"ambient":C.technique=k.nodeName,C.parameters=Qe(k)}}return C}function Qe(R){const C={};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"color":const me=r(k.textContent);C.color=new Be().fromArray(me),Dt.toWorkingColorSpace(C.color,on);break;case"falloff_angle":C.falloffAngle=parseFloat(k.textContent);break;case"quadratic_attenuation":const xe=parseFloat(k.textContent);C.distance=xe?Math.sqrt(1/xe):0;break}}return C}function St(R){let C;switch(R.technique){case"directional":C=new Af;break;case"point":C=new Tf;break;case"spot":C=new Ef;break;case"ambient":C=new Cf;break}return R.parameters.color&&C.color.copy(R.parameters.color),R.parameters.distance&&(C.distance=R.parameters.distance),C}function te(R){const C=pt.lights[R];return C!==void 0?v(C,St):(console.warn("THREE.ColladaLoader: Couldn't find light with ID:",R),null)}function Ce(R){const C={name:R.getAttribute("name"),sources:{},vertices:{},primitives:[]},F=i(R,"mesh")[0];if(F!==void 0){for(let L=0;L<F.childNodes.length;L++){const k=F.childNodes[L];if(k.nodeType!==1)continue;const me=k.getAttribute("id");switch(k.nodeName){case"source":C.sources[me]=fe(k);break;case"vertices":C.vertices=Pe(k);break;case"polygons":console.warn("THREE.ColladaLoader: Unsupported primitive type: ",k.nodeName);break;case"lines":case"linestrips":case"polylist":case"triangles":C.primitives.push(Ue(k));break;default:console.log(k)}}pt.geometries[R.getAttribute("id")]=C}}function fe(R){const C={array:[],stride:3};for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];if(L.nodeType===1)switch(L.nodeName){case"float_array":C.array=r(L.textContent);break;case"Name_array":C.array=n(L.textContent);break;case"technique_common":const k=i(L,"accessor")[0];k!==void 0&&(C.stride=parseInt(k.getAttribute("stride")));break}}return C}function Pe(R){const C={};for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];L.nodeType===1&&(C[L.getAttribute("semantic")]=a(L.getAttribute("source")))}return C}function Ue(R){const C={type:R.nodeName,material:R.getAttribute("material"),count:parseInt(R.getAttribute("count")),inputs:{},stride:0,hasUV:!1};for(let F=0,L=R.childNodes.length;F<L;F++){const k=R.childNodes[F];if(k.nodeType===1)switch(k.nodeName){case"input":const me=a(k.getAttribute("source")),xe=k.getAttribute("semantic"),Ke=parseInt(k.getAttribute("offset")),Ge=parseInt(k.getAttribute("set")),qe=Ge>0?xe+Ge:xe;C.inputs[qe]={id:me,offset:Ke},C.stride=Math.max(C.stride,Ke+1),xe==="TEXCOORD"&&(C.hasUV=!0);break;case"vcount":C.vcount=o(k.textContent);break;case"p":C.p=o(k.textContent);break}}return C}function Ie(R){const C={};for(let F=0;F<R.length;F++){const L=R[F];C[L.type]===void 0&&(C[L.type]=[]),C[L.type].push(L)}return C}function st(R){let C=0;for(let F=0,L=R.length;F<L;F++)R[F].hasUV===!0&&C++;C>0&&C<R.length&&(R.uvsNeedsFix=!0)}function vt(R){const C={},F=R.sources,L=R.vertices,k=R.primitives;if(k.length===0)return{};const me=Ie(k);for(const xe in me){const Ke=me[xe];st(Ke),C[xe]=lt(Ke,F,L)}return C}function lt(R,C,F){const L={},k={array:[],stride:0},me={array:[],stride:0},xe={array:[],stride:0},Ke={array:[],stride:0},Ge={array:[],stride:0},qe={array:[],stride:4},at={array:[],stride:4},De=new _t,ot=[];let $e=0;for(let dt=0;dt<R.length;dt++){const et=R[dt],Qt=et.inputs;let zt=0;switch(et.type){case"lines":case"linestrips":zt=et.count*2;break;case"triangles":zt=et.count*3;break;case"polylist":for(let Ft=0;Ft<et.count;Ft++){const Ot=et.vcount[Ft];switch(Ot){case 3:zt+=3;break;case 4:zt+=6;break;default:zt+=(Ot-2)*3;break}}break;default:console.warn("THREE.ColladaLoader: Unknown primitive type:",et.type)}De.addGroup($e,zt,dt),$e+=zt,et.material&&ot.push(et.material);for(const Ft in Qt){const Ot=Qt[Ft];switch(Ft){case"VERTEX":for(const Ni in F){const On=F[Ni];switch(Ni){case"POSITION":const Oi=k.array.length;if(tt(et,C[On],Ot.offset,k.array),k.stride=C[On].stride,C.skinWeights&&C.skinIndices&&(tt(et,C.skinIndices,Ot.offset,qe.array),tt(et,C.skinWeights,Ot.offset,at.array)),et.hasUV===!1&&R.uvsNeedsFix===!0){const ss=(k.array.length-Oi)/k.stride;for(let Hi=0;Hi<ss;Hi++)xe.array.push(0,0)}break;case"NORMAL":tt(et,C[On],Ot.offset,me.array),me.stride=C[On].stride;break;case"COLOR":tt(et,C[On],Ot.offset,Ge.array),Ge.stride=C[On].stride;break;case"TEXCOORD":tt(et,C[On],Ot.offset,xe.array),xe.stride=C[On].stride;break;case"TEXCOORD1":tt(et,C[On],Ot.offset,Ke.array),xe.stride=C[On].stride;break;default:console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.',Ni)}}break;case"NORMAL":tt(et,C[Ot.id],Ot.offset,me.array),me.stride=C[Ot.id].stride;break;case"COLOR":tt(et,C[Ot.id],Ot.offset,Ge.array,!0),Ge.stride=C[Ot.id].stride;break;case"TEXCOORD":tt(et,C[Ot.id],Ot.offset,xe.array),xe.stride=C[Ot.id].stride;break;case"TEXCOORD1":tt(et,C[Ot.id],Ot.offset,Ke.array),Ke.stride=C[Ot.id].stride;break}}}return k.array.length>0&&De.setAttribute("position",new je(k.array,k.stride)),me.array.length>0&&De.setAttribute("normal",new je(me.array,me.stride)),Ge.array.length>0&&De.setAttribute("color",new je(Ge.array,Ge.stride)),xe.array.length>0&&De.setAttribute("uv",new je(xe.array,xe.stride)),Ke.array.length>0&&De.setAttribute("uv1",new je(Ke.array,Ke.stride)),qe.array.length>0&&De.setAttribute("skinIndex",new je(qe.array,qe.stride)),at.array.length>0&&De.setAttribute("skinWeight",new je(at.array,at.stride)),L.data=De,L.type=R[0].type,L.materialKeys=ot,L}function tt(R,C,F,L,k=!1){const me=R.p,xe=R.stride,Ke=R.vcount;function Ge(De){let ot=me[De+F]*at;const $e=ot+at;for(;ot<$e;ot++)L.push(qe[ot]);if(k){const dt=L.length-at-1;ln.setRGB(L[dt+0],L[dt+1],L[dt+2],on),L[dt+0]=ln.r,L[dt+1]=ln.g,L[dt+2]=ln.b}}const qe=C.array,at=C.stride;if(R.vcount!==void 0){let De=0;for(let ot=0,$e=Ke.length;ot<$e;ot++){const dt=Ke[ot];if(dt===4){const et=De+xe*0,Qt=De+xe*1,zt=De+xe*2,Ft=De+xe*3;Ge(et),Ge(Qt),Ge(Ft),Ge(Qt),Ge(zt),Ge(Ft)}else if(dt===3){const et=De+xe*0,Qt=De+xe*1,zt=De+xe*2;Ge(et),Ge(Qt),Ge(zt)}else if(dt>4)for(let et=1,Qt=dt-2;et<=Qt;et++){const zt=De+xe*0,Ft=De+xe*et,Ot=De+xe*(et+1);Ge(zt),Ge(Ft),Ge(Ot)}De+=xe*dt}}else for(let De=0,ot=me.length;De<ot;De+=xe)Ge(De)}function Ht(R){return v(pt.geometries[R],vt)}function Zt(R){const C={name:R.getAttribute("name")||"",joints:{},links:[]};for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];if(L.nodeType===1)switch(L.nodeName){case"technique_common":Pn(L,C);break}}pt.kinematicsModels[R.getAttribute("id")]=C}function nn(R){return R.build!==void 0?R.build:R}function qn(R){return v(pt.kinematicsModels[R],nn)}function Pn(R,C){for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];if(L.nodeType===1)switch(L.nodeName){case"joint":C.joints[L.getAttribute("sid")]=ri(L);break;case"link":C.links.push(Ei(L));break}}}function ri(R){let C;for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];if(L.nodeType===1)switch(L.nodeName){case"prismatic":case"revolute":C=wi(L);break}}return C}function wi(R){const C={sid:R.getAttribute("sid"),name:R.getAttribute("name")||"",axis:new D,limits:{min:0,max:0},type:R.nodeName,static:!1,zeroPosition:0,middlePosition:0};for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];if(L.nodeType===1)switch(L.nodeName){case"axis":const k=r(L.textContent);C.axis.fromArray(k);break;case"limits":const me=L.getElementsByTagName("max")[0],xe=L.getElementsByTagName("min")[0];C.limits.max=parseFloat(me.textContent),C.limits.min=parseFloat(xe.textContent);break}}return C.limits.min>=C.limits.max&&(C.static=!0),C.middlePosition=(C.limits.min+C.limits.max)/2,C}function Ei(R){const C={sid:R.getAttribute("sid"),name:R.getAttribute("name")||"",attachments:[],transforms:[]};for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];if(L.nodeType===1)switch(L.nodeName){case"attachment_full":C.attachments.push(jn(L));break;case"matrix":case"translate":case"rotate":C.transforms.push(vn(L));break}}return C}function jn(R){const C={joint:R.getAttribute("joint").split("/").pop(),transforms:[],links:[]};for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];if(L.nodeType===1)switch(L.nodeName){case"link":C.links.push(Ei(L));break;case"matrix":case"translate":case"rotate":C.transforms.push(vn(L));break}}return C}function vn(R){const C={type:R.nodeName},F=r(R.textContent);switch(C.type){case"matrix":C.obj=new rt,C.obj.fromArray(F).transpose();break;case"translate":C.obj=new D,C.obj.fromArray(F);break;case"rotate":C.obj=new D,C.obj.fromArray(F),C.angle=or.degToRad(F[3]);break}return C}function hi(R){const C={name:R.getAttribute("name")||"",rigidBodies:{}};for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];if(L.nodeType===1)switch(L.nodeName){case"rigid_body":C.rigidBodies[L.getAttribute("name")]={},ns(L,C.rigidBodies[L.getAttribute("name")]);break}}pt.physicsModels[R.getAttribute("id")]=C}function ns(R,C){for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];if(L.nodeType===1)switch(L.nodeName){case"technique_common":Lr(L,C);break}}}function Lr(R,C){for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];if(L.nodeType===1)switch(L.nodeName){case"inertia":C.inertia=r(L.textContent);break;case"mass":C.mass=r(L.textContent)[0];break}}}function Bo(R){const C={bindJointAxis:[]};for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];if(L.nodeType===1)switch(L.nodeName){case"bind_joint_axis":C.bindJointAxis.push(Js(L));break}}pt.kinematicsScenes[a(R.getAttribute("url"))]=C}function Js(R){const C={target:R.getAttribute("target").split("/").pop()};for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];if(L.nodeType===1)switch(L.nodeName){case"axis":const k=L.getElementsByTagName("param")[0];C.axis=k.textContent;const me=C.axis.split("inst_").pop().split("axis")[0];C.jointIndex=me.substring(0,me.length-1);break}}return C}function Nr(R){return R.build!==void 0?R.build:R}function is(R){return v(pt.kinematicsScenes[R],Nr)}function zo(){const R=Object.keys(pt.kinematicsModels)[0],C=Object.keys(pt.kinematicsScenes)[0],F=Object.keys(pt.visualScenes)[0];if(R===void 0||C===void 0)return;const L=qn(R),k=is(C),me=Lt(F),xe=k.bindJointAxis,Ke={};for(let at=0,De=xe.length;at<De;at++){const ot=xe[at],$e=Wt.querySelector('[sid="'+ot.target+'"]');if($e){const dt=$e.parentElement;Ge(ot.jointIndex,dt)}}function Ge(at,De){const ot=De.getAttribute("name"),$e=L.joints[at];me.traverse(function(dt){dt.name===ot&&(Ke[at]={object:dt,transforms:Qs(De),joint:$e,position:$e.zeroPosition})})}const qe=new rt;Vi={joints:L&&L.joints,getJointValue:function(at){const De=Ke[at];if(De)return De.position;console.warn("THREE.ColladaLoader: Joint "+at+" doesn't exist.")},setJointValue:function(at,De){const ot=Ke[at];if(ot){const $e=ot.joint;if(De>$e.limits.max||De<$e.limits.min)console.warn("THREE.ColladaLoader: Joint "+at+" value "+De+" outside of limits (min: "+$e.limits.min+", max: "+$e.limits.max+").");else if($e.static)console.warn("THREE.ColladaLoader: Joint "+at+" is static.");else{const dt=ot.object,et=$e.axis,Qt=ot.transforms;oe.identity();for(let zt=0;zt<Qt.length;zt++){const Ft=Qt[zt];if(Ft.sid&&Ft.sid.indexOf(at)!==-1)switch($e.type){case"revolute":oe.multiply(qe.makeRotationAxis(et,or.degToRad(De)));break;case"prismatic":oe.multiply(qe.makeTranslation(et.x*De,et.y*De,et.z*De));break;default:console.warn("THREE.ColladaLoader: Unknown joint type: "+$e.type);break}else switch(Ft.type){case"matrix":oe.multiply(Ft.obj);break;case"translate":oe.multiply(qe.makeTranslation(Ft.obj.x,Ft.obj.y,Ft.obj.z));break;case"scale":oe.scale(Ft.obj);break;case"rotate":oe.multiply(qe.makeRotationAxis(Ft.obj,Ft.angle));break}}dt.matrix.copy(oe),dt.matrix.decompose(dt.position,dt.quaternion,dt.scale),Ke[at].position=De}}else console.log("THREE.ColladaLoader: "+at+" does not exist.")}}}function Qs(R){const C=[],F=Wt.querySelector('[id="'+R.id+'"]');for(let L=0;L<F.childNodes.length;L++){const k=F.childNodes[L];if(k.nodeType!==1)continue;let me,xe;switch(k.nodeName){case"matrix":me=r(k.textContent);const Ke=new rt().fromArray(me).transpose();C.push({sid:k.getAttribute("sid"),type:k.nodeName,obj:Ke});break;case"translate":case"scale":me=r(k.textContent),xe=new D().fromArray(me),C.push({sid:k.getAttribute("sid"),type:k.nodeName,obj:xe});break;case"rotate":me=r(k.textContent),xe=new D().fromArray(me);const Ge=or.degToRad(me[3]);C.push({sid:k.getAttribute("sid"),type:k.nodeName,obj:xe,angle:Ge});break}}return C}function O(R){const C=R.getElementsByTagName("node");for(let F=0;F<C.length;F++){const L=C[F];L.hasAttribute("id")===!1&&L.setAttribute("id",l())}}const oe=new rt,pe=new D;function ie(R){const C={name:R.getAttribute("name")||"",type:R.getAttribute("type"),id:R.getAttribute("id"),sid:R.getAttribute("sid"),matrix:new rt,nodes:[],instanceCameras:[],instanceControllers:[],instanceLights:[],instanceGeometries:[],instanceNodes:[],transforms:{}};for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];if(L.nodeType!==1)continue;let k;switch(L.nodeName){case"node":C.nodes.push(L.getAttribute("id")),ie(L);break;case"instance_camera":C.instanceCameras.push(a(L.getAttribute("url")));break;case"instance_controller":C.instanceControllers.push(ce(L));break;case"instance_light":C.instanceLights.push(a(L.getAttribute("url")));break;case"instance_geometry":C.instanceGeometries.push(ce(L));break;case"instance_node":C.instanceNodes.push(a(L.getAttribute("url")));break;case"matrix":k=r(L.textContent),C.matrix.multiply(oe.fromArray(k).transpose()),C.transforms[L.getAttribute("sid")]=L.nodeName;break;case"translate":k=r(L.textContent),pe.fromArray(k),C.matrix.multiply(oe.makeTranslation(pe.x,pe.y,pe.z)),C.transforms[L.getAttribute("sid")]=L.nodeName;break;case"rotate":k=r(L.textContent);const me=or.degToRad(k[3]);C.matrix.multiply(oe.makeRotationAxis(pe.fromArray(k),me)),C.transforms[L.getAttribute("sid")]=L.nodeName;break;case"scale":k=r(L.textContent),C.matrix.scale(pe.fromArray(k)),C.transforms[L.getAttribute("sid")]=L.nodeName;break;case"extra":break;default:console.log(L)}}return ct(C.id)?console.warn("THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.",C.id):pt.nodes[C.id]=C,C}function ce(R){const C={id:a(R.getAttribute("url")),materials:{},skeletons:[]};for(let F=0;F<R.childNodes.length;F++){const L=R.childNodes[F];switch(L.nodeName){case"bind_material":const k=L.getElementsByTagName("instance_material");for(let me=0;me<k.length;me++){const xe=k[me],Ke=xe.getAttribute("symbol"),Ge=xe.getAttribute("target");C.materials[Ke]=a(Ge)}break;case"skeleton":C.skeletons.push(a(L.textContent));break}}return C}function Le(R,C){const F=[],L=[];let k,me,xe;for(k=0;k<R.length;k++){const qe=R[k];let at;if(ct(qe))at=Et(qe),Ve(at,C,F);else if(Kt(qe)){const ot=pt.visualScenes[qe].children;for(let $e=0;$e<ot.length;$e++){const dt=ot[$e];if(dt.type==="JOINT"){const et=Et(dt.id);Ve(et,C,F)}}}else console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:",qe)}for(k=0;k<C.length;k++)for(me=0;me<F.length;me++)if(xe=F[me],xe.bone.name===C[k].name){L[k]=xe,xe.processed=!0;break}for(k=0;k<F.length;k++)xe=F[k],xe.processed===!1&&(L.push(xe),xe.processed=!0);const Ke=[],Ge=[];for(k=0;k<L.length;k++)xe=L[k],Ke.push(xe.bone),Ge.push(xe.boneInverse);return new tl(Ke,Ge)}function Ve(R,C,F){R.traverse(function(L){if(L.isBone===!0){let k;for(let me=0;me<C.length;me++){const xe=C[me];if(xe.name===L.name){k=xe.boneInverse;break}}k===void 0&&(k=new rt),F.push({bone:L,boneInverse:k,processed:!1})}})}function Ze(R){const C=[],F=R.matrix,L=R.nodes,k=R.type,me=R.instanceCameras,xe=R.instanceControllers,Ke=R.instanceLights,Ge=R.instanceGeometries,qe=R.instanceNodes;for(let De=0,ot=L.length;De<ot;De++)C.push(Et(L[De]));for(let De=0,ot=me.length;De<ot;De++){const $e=ze(me[De]);$e!==null&&C.push($e.clone())}for(let De=0,ot=xe.length;De<ot;De++){const $e=xe[De],dt=H($e.id),et=Ht(dt.id),Qt=ft(et,$e.materials),zt=$e.skeletons,Ft=dt.skin.joints,Ot=Le(zt,Ft);for(let Ni=0,On=Qt.length;Ni<On;Ni++){const Oi=Qt[Ni];Oi.isSkinnedMesh&&(Oi.bind(Ot,dt.skin.bindMatrix),Oi.normalizeSkinWeights()),C.push(Oi)}}for(let De=0,ot=Ke.length;De<ot;De++){const $e=te(Ke[De]);$e!==null&&C.push($e.clone())}for(let De=0,ot=Ge.length;De<ot;De++){const $e=Ge[De],dt=Ht($e.id),et=ft(dt,$e.materials);for(let Qt=0,zt=et.length;Qt<zt;Qt++)C.push(et[Qt])}for(let De=0,ot=qe.length;De<ot;De++)C.push(Et(qe[De]).clone());let at;if(L.length===0&&C.length===1)at=C[0];else{at=k==="JOINT"?new Ih:new ki;for(let De=0;De<C.length;De++)at.add(C[De])}return at.name=k==="JOINT"?R.sid:R.name,at.matrix.copy(F),at.matrix.decompose(at.position,at.quaternion,at.scale),at}const Je=new Ln({name:Hn.DEFAULT_MATERIAL_NAME,color:16711935});function gt(R,C){const F=[];for(let L=0,k=R.length;L<k;L++){const me=C[R[L]];me===void 0?(console.warn("THREE.ColladaLoader: Material with key %s not found. Apply fallback material.",R[L]),F.push(Je)):F.push(ve(me))}return F}function ft(R,C){const F=[];for(const L in R){const k=R[L],me=gt(k.materialKeys,C);if(me.length===0&&(L==="lines"||L==="linestrips"?me.push(new Nn):me.push(new hh)),L==="lines"||L==="linestrips")for(let qe=0,at=me.length;qe<at;qe++){const De=me[qe];if(De.isMeshPhongMaterial===!0||De.isMeshLambertMaterial===!0){const ot=new Nn;ot.color.copy(De.color),ot.opacity=De.opacity,ot.transparent=De.transparent,me[qe]=ot}}const xe=k.data.attributes.skinIndex!==void 0,Ke=me.length===1?me[0]:me;let Ge;switch(L){case"lines":Ge=new Qi(k.data,Ke);break;case"linestrips":Ge=new Gn(k.data,Ke);break;case"triangles":case"polylist":xe?Ge=new lf(k.data,Ke):Ge=new Ne(k.data,Ke);break}F.push(Ge)}return F}function ct(R){return pt.nodes[R]!==void 0}function Et(R){return v(pt.nodes[R],Ze)}function Nt(R){const C={name:R.getAttribute("name"),children:[]};O(R);const F=i(R,"node");for(let L=0;L<F.length;L++)C.children.push(ie(F[L]));pt.visualScenes[R.getAttribute("id")]=C}function tn(R){const C=new ki;C.name=R.name;const F=R.children;for(let L=0;L<F.length;L++){const k=F[L];C.add(Et(k.id))}return C}function Kt(R){return pt.visualScenes[R]!==void 0}function Lt(R){return v(pt.visualScenes[R],tn)}function ut(R){const C=i(R,"instance_visual_scene")[0];return Lt(a(C.getAttribute("url")))}function an(){const R=pt.clips;if(c(R)===!0){if(c(pt.animations)===!1){const C=[];for(const F in pt.animations){const L=_(F);for(let k=0,me=L.length;k<me;k++)C.push(L[k])}rn.push(new Ws("default",-1,C))}}else for(const C in R)rn.push(W(C))}function It(R){let C="";const F=[R];for(;F.length;){const L=F.shift();L.nodeType===Node.TEXT_NODE?C+=L.textContent:(C+=`
`,F.push(...L.childNodes))}return C.trim()}if(e.length===0)return{scene:new $a};const In=new DOMParser().parseFromString(e,"application/xml"),Wt=i(In,"COLLADA")[0],_n=In.getElementsByTagName("parsererror")[0];if(_n!==void 0){const R=i(_n,"div")[0];let C;return R?C=R.textContent:C=It(_n),console.error(`THREE.ColladaLoader: Failed to parse collada file.
`,C),null}const Dn=Wt.getAttribute("version");console.debug("THREE.ColladaLoader: File version",Dn);const Yt=h(i(Wt,"asset")[0]),Mn=new fv(this.manager);Mn.setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);let pn;Ng&&(pn=new Ng(this.manager),pn.setPath(this.resourcePath||t));const ln=new Be,rn=[];let Vi={},Ti=0;const pt={animations:{},clips:{},controllers:{},images:{},effects:{},materials:{},cameras:{},lights:{},geometries:{},nodes:{},visualScenes:{},kinematicsModels:{},physicsModels:{},kinematicsScenes:{}};f(Wt,"library_animations","animation",m),f(Wt,"library_animation_clips","animation_clip",N),f(Wt,"library_controllers","controller",Y),f(Wt,"library_images","image",K),f(Wt,"library_effects","effect",be),f(Wt,"library_materials","material",se),f(Wt,"library_cameras","camera",Ae),f(Wt,"library_lights","light",Te),f(Wt,"library_geometries","geometry",Ce),f(Wt,"library_nodes","node",ie),f(Wt,"library_visual_scenes","visual_scene",Nt),f(Wt,"library_kinematics_models","kinematics_model",Zt),f(Wt,"library_physics_models","physics_model",hi),f(Wt,"scene","instance_kinematics_scene",Bo),p(pt.animations,x),p(pt.clips,ee),p(pt.controllers,$),p(pt.images,q),p(pt.effects,Z),p(pt.materials,we),p(pt.cameras,ke),p(pt.lights,St),p(pt.geometries,vt),p(pt.visualScenes,tn),an(),zo();const rs=ut(i(Wt,"scene")[0]);return rs.animations=rn,Yt.upAxis==="Z_UP"&&(console.warn("THREE.ColladaLoader: You are loading an asset with a Z-UP coordinate system. The loader just rotates the asset to transform it into Y-UP. The vertex data are not converted, see #24289."),rs.rotation.set(-Math.PI/2,0,0)),rs.scale.multiplyScalar(Yt.unit),{get animations(){return console.warn("THREE.ColladaLoader: Please access animations over scene.animations now."),rn},kinematics:Vi,library:pt,scene:rs}}}var PC=Wn("<!> <!>",1);function IC(s,e){Xn(e,!0);let t=He(e,"color",19,()=>new Be("pink")),i=He(e,"scale",19,()=>[1,1,1]),n=He(e,"rotation",19,()=>[0,0,0]),r=He(e,"position",19,()=>[0,0,0]),o=He(e,"onclick",3,()=>{}),a=He(e,"opacity",3,1),l=jr(Cs([1,1,1])),c=jr(Cs([0,0,0])),h=jr(Cs([0,0,0])),u=jr(Cs([]));const d=[Math.PI/2,-Math.PI/2,-Math.PI/2];zv(RC).load(e.filename).subscribe(y=>{if(!y)return;let x=y.scene;Er(l,x.scale.toArray(),!0),Er(c,x.position.toArray(),!0),Er(h,x.rotation?x.rotation.toArray():Ee(h),!0);let _=[];y.scene.traverse(E=>{E.type==="Mesh"&&_.push(E)}),Er(u,_,!0)});var v=yt(),m=it(v);{var g=y=>{var x=PC(),_=it(x);mh(_,()=>`<!-- include dae: ${e.filename} ${i()} -->`);var E=cn(_,2);kt(E,()=>bt.Group,(w,M)=>{M(w,{get scale(){return i()},get position(){return r()},get rotation(){return n()},children:(T,S)=>{var b=yt(),U=it(b);kt(U,()=>bt.Group,(I,B)=>{B(I,{rotation:d,children:(G,j)=>{var N=yt(),ee=it(N);kt(ee,()=>bt.Group,(W,Y)=>{Y(W,{get scale(){return Ee(l)},get position(){return Ee(c)},get rotation(){return Ee(h)},children:(Q,z)=>{var J=yt(),$=it(J);ua($,17,()=>Ee(u),da,(V,H)=>{var K=yt(),q=it(K);const re=xt(()=>Ee(H).scale?Ee(H).scale.toArray():[1,1,1]),be=xt(()=>Ee(H).position?Ee(H).position.toArray():[0,0,0]);kt(q,()=>bt.Mesh,(Se,Me)=>{Me(Se,{castShadow:!0,receiveShadow:!0,get geometry(){return Ee(H).geometry},get scale(){return Ee(re)},get position(){return Ee(be)},get material(){return Ee(H).material},get onclick(){return o()},children:(ye,We)=>{var X=yt(),Fe=it(X);{var he=ue=>{var ne=yt(),_e=it(ne);{var le=A=>{var Z=yt(),ae=it(Z);kt(ae,()=>bt.MeshLambertMaterial,(se,de)=>{de(se,{get color(){return t()},get opacity(){return a()},transparent:!0})}),nt(A,Z)},P=A=>{var Z=yt(),ae=it(Z);kt(ae,()=>bt.MeshLambertMaterial,(se,de)=>{de(se,{get color(){return t()}})}),nt(A,Z)};jt(_e,A=>{a()<1?A(le):A(P,!1)})}nt(ue,ne)};jt(Fe,ue=>{t()&&ue(he)})}nt(ye,X)},$$slots:{default:!0}})}),nt(V,K)}),nt(Q,J)},$$slots:{default:!0}})}),nt(G,N)},$$slots:{default:!0}})}),nt(T,b)},$$slots:{default:!0}})}),nt(y,x)};jt(m,y=>{Ee(u).length>0&&y(g)})}nt(s,v),Yn()}class DC extends Hn{constructor(e){super(e)}load(e,t,i,n){const r=this,o=new Ji(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(r.parse(a))}catch(l){n?n(l):console.error(l),r.manager.itemError(e)}},i,n)}parse(e){function t(c){const h=new DataView(c),u=32/8*3+32/8*3*3+16/8,d=h.getUint32(80,!0);if(80+32/8+d*u===h.byteLength)return!0;const p=[115,111,108,105,100];for(let v=0;v<5;v++)if(i(p,h,v))return!1;return!0}function i(c,h,u){for(let d=0,f=c.length;d<f;d++)if(c[d]!==h.getUint8(u+d))return!1;return!0}function n(c){const h=new DataView(c),u=h.getUint32(80,!0);let d,f,p,v=!1,m,g,y,x,_;for(let U=0;U<70;U++)h.getUint32(U,!1)==1129270351&&h.getUint8(U+4)==82&&h.getUint8(U+5)==61&&(v=!0,m=new Float32Array(u*3*3),g=h.getUint8(U+6)/255,y=h.getUint8(U+7)/255,x=h.getUint8(U+8)/255,_=h.getUint8(U+9)/255);const E=84,w=12*4+2,M=new _t,T=new Float32Array(u*3*3),S=new Float32Array(u*3*3),b=new Be;for(let U=0;U<u;U++){const I=E+U*w,B=h.getFloat32(I,!0),G=h.getFloat32(I+4,!0),j=h.getFloat32(I+8,!0);if(v){const N=h.getUint16(I+48,!0);(N&32768)===0?(d=(N&31)/31,f=(N>>5&31)/31,p=(N>>10&31)/31):(d=g,f=y,p=x)}for(let N=1;N<=3;N++){const ee=I+N*12,W=U*3*3+(N-1)*3;T[W]=h.getFloat32(ee,!0),T[W+1]=h.getFloat32(ee+4,!0),T[W+2]=h.getFloat32(ee+8,!0),S[W]=B,S[W+1]=G,S[W+2]=j,v&&(b.setRGB(d,f,p,on),m[W]=b.r,m[W+1]=b.g,m[W+2]=b.b)}}return M.setAttribute("position",new Tt(T,3)),M.setAttribute("normal",new Tt(S,3)),v&&(M.setAttribute("color",new Tt(m,3)),M.hasColors=!0,M.alpha=_),M}function r(c){const h=new _t,u=/solid([\s\S]*?)endsolid/g,d=/facet([\s\S]*?)endfacet/g,f=/solid\s(.+)/;let p=0;const v=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,m=new RegExp("vertex"+v+v+v,"g"),g=new RegExp("normal"+v+v+v,"g"),y=[],x=[],_=[],E=new D;let w,M=0,T=0,S=0;for(;(w=u.exec(c))!==null;){T=S;const b=w[0],U=(w=f.exec(b))!==null?w[1]:"";for(_.push(U);(w=d.exec(b))!==null;){let G=0,j=0;const N=w[0];for(;(w=g.exec(N))!==null;)E.x=parseFloat(w[1]),E.y=parseFloat(w[2]),E.z=parseFloat(w[3]),j++;for(;(w=m.exec(N))!==null;)y.push(parseFloat(w[1]),parseFloat(w[2]),parseFloat(w[3])),x.push(E.x,E.y,E.z),G++,S++;j!==1&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+p),G!==3&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+p),p++}const I=T,B=S-T;h.userData.groupNames=_,h.addGroup(I,B,M),M++}return h.setAttribute("position",new je(y,3)),h.setAttribute("normal",new je(x,3)),h}function o(c){return typeof c!="string"?new TextDecoder().decode(c):c}function a(c){if(typeof c=="string"){const h=new Uint8Array(c.length);for(let u=0;u<c.length;u++)h[u]=c.charCodeAt(u)&255;return h.buffer||h}else return c}const l=a(e);return t(l)?n(l):r(o(e))}}var UC=Wn("<!> <!>",1);function LC(s,e){Xn(e,!0);const[t,i]=Xa(),n=()=>Us(Ee(d),"$stl",t);let r=He(e,"color",19,()=>new Be("pink")),o=He(e,"scale",19,()=>[1,1,1]),a=He(e,"rotation",19,()=>[0,0,0]),l=He(e,"position",19,()=>[0,0,0]),c=He(e,"onclick",3,()=>{}),h=He(e,"opacity",3,1);const u=zv(DC);let d=xt(()=>u.load(e.filename));var f=yt(),p=it(f);{var v=m=>{var g=UC(),y=it(g);mh(y,()=>`<!-- include stl: ${e.filename} ${o()} -->`);var x=cn(y,2);kt(x,()=>bt.Mesh,(_,E)=>{E(_,{castShadow:!0,receiveShadow:!0,get geometry(){return n()},get scale(){return o()},get onclick(){return c()},get position(){return l()},get rotation(){return a()},children:(w,M)=>{var T=yt(),S=it(T);{var b=I=>{var B=yt(),G=it(B);kt(G,()=>bt.MeshLambertMaterial,(j,N)=>{N(j,{get color(){return r()},get opacity(){return h()},transparent:!0})}),nt(I,B)},U=I=>{var B=yt(),G=it(B);kt(G,()=>bt.MeshLambertMaterial,(j,N)=>{N(j,{get color(){return r()}})}),nt(I,B)};jt(S,I=>{h()<1?I(b):I(U,!1)})}nt(w,T)},$$slots:{default:!0}})}),nt(m,g)};jt(p,m=>{n()&&m(v)})}nt(s,f),Yn(),i()}const At=Cs({edit:!1,tool:"translate",selectedLink:void 0,selectedJoint:void 0,robot:void 0,continuousJoints:{},revoluteJoints:{},visual:!0,collision:!1,collisionColor:"#813d9c",joints:!0,jointNames:!0,jointColor:"#62a0ea",linkNames:!0,linkColor:"#57e389",jointIndicatorColor:"#f66151",linkOpacity:1,highlightColor:"#ffa348",visualOpacity:1,collisionOpacity:.7,backgroundColor:"#241f31",translationSnap:.001,scaleSnap:.001,rotationSnap:1,initialZoom:1.3,zoom:1.3,nameHeight:.12});function ud(s){const e=Kf(s,"xyz");if(!(!e||e.length!=3))return e}function Og(s){const e=Kf(s,"rpy");if(!(!e||e.length!=3))return e}function Fg(s){const e=Kf(s,"rgba");if(!(!e||e.length!=4))return e}function Kf(s,e="xyz"){var t;if(s.hasAttribute(e)){const i=(t=s.getAttribute(e))==null?void 0:t.split(" ");if(i){const n=[];for(const r of i)n.push(parseFloat(r));return n}}}function NC(s){return s?new Be(s[0],s[1],s[2]):new Be("white")}function g_(s){return Math.max(At.zoom/At.initialZoom*s,s)}function OC(s){const e=[],t=s.joints;for(const i of Object.values(s.links)){let n=!0;for(const r of t)if(r.child.name==i.name){n=!1;break}n&&e.push(i)}return e}function mR(s){const e=s.joints,t=[];for(const i of e){let n=!0;for(const r of e)if(i.parent.name===r.child.name){n=!1;break}n&&t.push(i)}return t}function FC(s,e){const t=[],i=s.joints;if(!i)return[];for(const n of i)n.parent.name==e.name&&t.push(n);return t}function kC(s){const e=s.elem.getElementsByTagName("origin")[0];e.setAttribute("xyz",s.origin_xyz.join(" ")),e.setAttribute("rpy",s.origin_rpy.join(" "))}class gR{constructor(e,t=""){$t(this,"filename");$t(this,"colors",{});$t(this,"robot",{name:"",links:{},joints:[]});$t(this,"prefix","");this.filename=e,this.prefix=t}async load(){return fetch(this.filename).then(e=>e.text())}reset(){this.robot={name:"",links:{},joints:[]}}fromString(e){this.reset();let t=new window.DOMParser().parseFromString(e,"text/xml");return this.robot.elem=t.documentElement,this.parseRobotXMLNode(t.documentElement)}parseRobotXMLNode(e){const t=e.nodeName;if(t!=="robot")throw new Error(`Invalid URDF: no root node ${t}`);return this.robot.name=e.getAttribute("name"),this.parseColorsFromRobot(e),this.parseLinks(e),this.parseJoints(e),this.robot}parseColorsFromRobot(e){const t=e.getElementsByTagName("material");for(let i=0;i<t.length;i++){const n=t[i],r=this.colorFromMaterial(n);r&&(this.colors[r.name]=r.rgba)}}colorFromMaterial(e){if(!e.hasAttribute("name")){console.warn("Found material-tag with name without name inside robot tag!");return}const t=e.getAttribute("name"),i=e.getElementsByTagName("color");if(i.length===0)return;const n=i[0];if(!n.hasAttribute("rgba")){console.warn(`Color tag ${t} does not have expected "rgba" attribute!`);return}return{name:t,rgba:Fg(n)||[0,0,0,1]}}getLinkByName(e){if(!this.robot.elem)return;const t=this.robot.elem.getElementsByTagName("link");for(let i=0;i<t.length;i++){const n=t[i];if(n.hasAttribute("name")){const r=n.getAttribute("name");if(e==r)return n}}}parseLinks(e){const t=e.getElementsByTagName("link");for(let i=0;i<t.length;i++){const n=t[i],r={visual:[],collision:[],name:"",elem:n};n.hasAttribute("name")?(r.name=n.getAttribute("name"),this.robot.links[r.name]=r):console.error("No name in xml link node: ",n);const o=n.getElementsByTagName("visual");for(let l=0;l<o.length;l++)r.visual.push(this.parseVisual(o[l]));const a=n.getElementsByTagName("collision");for(let l=0;l<a.length;l++)r.collision.push(this.parseVisual(a[l]))}}parseVisual(e){let t,i,n,r="pink";const o={elem:e};for(let a=0;a<e.childNodes.length;a++){const l=e.childNodes[a];switch(l.nodeName){case"geometry":this.parseGeometry(l,o);break;case"origin":t=ud(l),t&&(o.origin_xyz=t),i=Og(l),i&&(o.origin_rpy=i);break;case"material":n=l.getElementsByTagName("color"),n.length>0&&n[0].hasAttribute("rgba")?o.color_rgba=Fg(n[0]):l.hasAttribute("name")&&(r=l.getAttribute("name"),o.color_rgba=this.colors[r])}}return o}parseGeometry(e,t){for(let i=0;i<e.childNodes.length;i++){const n=e.childNodes[i];switch(n.nodeName){case"mesh":let r=[1,1,1],o=n.getAttribute("scale");if(o){const u=o.split(" ");for(const d in u)r[d]=parseFloat(u[d])}let a=n.getAttribute("filename");a=a.replace("package:/",this.prefix);let l="stl";switch(a.substring(a.length-3).toLocaleLowerCase()){case"fbx":l="fbx";break;case"obj":l="obj";break;case"stl":l="stl";break;case"dae":l="dae";break;default:throw new Error("Unknown type "+a)}t.geometry={filename:a,type:l,scale:r},t.type="mesh";return;case"cylinder":const c={};n.hasAttribute("length")&&(c.length=parseFloat(n.getAttribute("length"))),n.hasAttribute("radius")&&(c.radius=parseFloat(n.getAttribute("radius"))),t.geometry=c,t.type="cylinder";return;case"box":const h={size:[1,1,1]};if(n.hasAttribute("size")){const d=n.getAttribute("size").split(" ");for(const f in d)h.size[f]=parseFloat(d[f])}t.geometry=h,t.type="box";return}}}parseJoints(e){const t=this.robot.links,i=[];this.robot.joints=i;const n=e.getElementsByTagName("joint");for(let r=0;r<n.length;r++){const o=n[r],a=o.getElementsByTagName("origin");let l=[0,0,0],c=[0,0,0];if(a.length===1){let y=ud(a[0]);y&&(c=y);let x=Og(a[0]);x&&(l=x)}let h;const u=o.getElementsByTagName("parent");if(u.length===1){const y=u[0].getAttribute("link");if(!y)throw Error("Name not set for link");const x=this.getLinkByName(y);if(!x)throw Error(`Link with name ${y} not found!`);y&&t[y]?h=t[y]:h={name:y,visual:[],collision:[],elem:x}}let d;const f=o.getElementsByTagName("child");if(f.length===1){const y=f[0].getAttribute("link");if(y&&t[y])d=t[y];else if(y){const x=this.getLinkByName(y);d={name:y,visual:[],collision:[],elem:x}}}let p,v=[0,0,1];const m=o.getElementsByTagName("axis");m.length===1&&(v=ud(m[0])||v);const g=o.getElementsByTagName("limit");if(g.length===1){p={lower:0,upper:0,effort:0,velocity:0};const y=g[0].getAttribute("lower");y&&(p.lower=parseInt(y));const x=g[0].getAttribute("upper");x&&(p.upper=parseInt(x));const _=g[0].getAttribute("effort");_&&(p.effort=parseInt(_));const E=g[0].getAttribute("velocity");E&&(p.velocity=parseInt(E))}d&&h&&i.push({name:o.getAttribute("name")||void 0,type:o.getAttribute("type")||void 0,origin_rpy:l,origin_xyz:c,rotation:[0,0,0],axis_xyz:v,parent:h,child:d,limit:p,elem:o})}}getURDFXML(){return this.robot.elem?`<?xml version="1.0" ?>
`+this.robot.elem.outerHTML:""}}function v_(s,e){Xn(e,!0);let t=He(e,"origin",7),i=He(e,"selected",3,!1);const n=h=>{t().origin_xyz=h.position.toArray(),t().origin_rpy=[h.rotation.x,h.rotation.y,h.rotation.z],kC(t())},r=h=>{if(!h.target)return;const u=h.target.object;n(u),e.ondatachange&&e.ondatachange(h)};Zf();var o=yt(),a=it(o);{var l=h=>{const u=xt(()=>Math.PI/At.rotationSnap);a2(h,{get translationSnap(){return At.translationSnap},get scaleSnap(){return At.scaleSnap},get rotationSnap(){return Ee(u)},get position(){return t().origin_xyz},get rotation(){return t().origin_rpy},get mode(){return At.tool},onobjectChange:r,children:(d,f)=>{var p=yt(),v=it(p);Bi(v,()=>e.children??Pr),nt(d,p)},$$slots:{default:!0}})},c=h=>{var u=yt(),d=it(u);kt(d,()=>bt.Group,(f,p)=>{p(f,{get position(){return t().origin_xyz},get rotation(){return t().origin_rpy},children:(v,m)=>{var g=yt(),y=it(g);Bi(y,()=>e.children??Pr),nt(v,g)},$$slots:{default:!0}})}),nt(h,u)};jt(a,h=>{i()&&At.edit?h(l):h(c,!1)})}nt(s,o),Yn()}var BC=Wn("<!> <!> <!> <!>",1);function vR(s,e){let t=He(e,"intensity",3,.5),i=He(e,"radius",3,1),n=He(e,"shadows",3,!0),r=He(e,"preset_name",3,"rembrandt"),o=He(e,"shadowBias",19,()=>-1e-4),a=He(e,"normalBias",3,0),l=He(e,"shadowSize",3,256),c=He(e,"height",3,1),h=He(e,"shadowOffset",3,1);const d={rembrandt:{main:[1,2,1],fill:[-2,-.5,-2]},portrait:{main:[-1,2,.5],fill:[-1,.5,-1.5]},upfront:{main:[0,2,1],fill:[-1,.5,-1.5]},soft:{main:[-2,4,4],fill:[-1,.5,-1.5]}}[r()];var f=BC(),p=it(f);const v=xt(()=>t()/3);kt(p,()=>bt.AmbientLight,(M,T)=>{T(M,{get intensity(){return Ee(v)}})});var m=cn(p,2);const g=xt(()=>[d.main[0]*i(),d.main[1]*i(),d.main[2]*i()]),y=xt(()=>t()*2);kt(m,()=>bt.SpotLight,(M,T)=>{T(M,{penumbra:1,get position(){return Ee(g)},get intensity(){return Ee(y)},get castShadow(){return n()},get"shadow-bias"(){return o()},get"shadow-normalBias"(){return a()},get"shadow-mapSize"(){return l()}})});var x=cn(m,2);const _=xt(()=>[d.fill[0]*i(),d.fill[1]*i(),d.fill[2]*i()]);kt(x,()=>bt.PointLight,(M,T)=>{T(M,{get position(){return Ee(_)},get intensity(){return t()}})});var E=cn(x,2);const w=xt(()=>[0,-c()/2-h()/2,0]);kt(E,()=>bt.Group,(M,T)=>{T(M,{get position(){return Ee(w)},children:(S,b)=>{var U=yt(),I=it(U);{var B=G=>{const j=xt(()=>i()*4);YA(G,{get scale(){return Ee(j)},get far(){return i()},blur:2})};jt(I,G=>{n()&&G(B)})}nt(S,U)},$$slots:{default:!0}})}),nt(s,f)}var zC=Wn("<!> <!>",1),GC=Wn("<!> <!>",1);function kg(s,e){Xn(e,!0);let t=He(e,"opacity",3,1),i=He(e,"color",3,void 0),n=He(e,"ondatachange",3,void 0);function r(){var h;return At.selectedLink==e.link?new Be(At.highlightColor):(h=e.visual)!=null&&h.color_rgba?NC(e.visual.color_rgba):new Be(i()||"gray")}const o=h=>{h.stopPropagation(),At.selectedLink=e.link,At.selectedJoint=void 0};Zf();var a=yt(),l=it(a);{var c=h=>{const u=xt(()=>At.selectedLink==e.link);v_(h,{get origin(){return e.visual},get ondatachange(){return n()},get selected(){return Ee(u)},children:(d,f)=>{var p=yt(),v=it(p);{var m=y=>{var x=yt(),_=it(x);{var E=M=>{const T=xt(r),S=xt(()=>e.visual.geometry.scale||[1,1,1]);LC(M,{onclick:o,get filename(){return e.visual.geometry.filename},get color(){return Ee(T)},get opacity(){return t()},get scale(){return Ee(S)}})},w=(M,T)=>{{var S=b=>{const U=xt(r),I=xt(()=>e.visual.geometry.scale||[1,1,1]);IC(b,{onclick:o,get filename(){return e.visual.geometry.filename},get color(){return Ee(U)},get opacity(){return t()},get scale(){return Ee(I)}})};jt(M,b=>{e.visual.geometry.type==="dae"&&b(S)},T)}};jt(_,M=>{e.visual.geometry.type==="stl"?M(E):M(w,!1)})}nt(y,x)},g=y=>{var x=yt(),_=it(x);{var E=M=>{var T=yt(),S=it(T);kt(S,()=>bt.Mesh,(b,U)=>{U(b,{castShadow:!0,receiveShadow:!0,rotation:[Math.PI/2,0,0],onclick:o,children:(I,B)=>{var G=zC(),j=it(G);const N=xt(()=>[e.visual.geometry.radius,e.visual.geometry.radius,e.visual.geometry.length]);kt(j,()=>bt.CylinderGeometry,(Q,z)=>{z(Q,{get args(){return Ee(N)}})});var ee=cn(j,2);{var W=Q=>{var z=yt(),J=it(z);const $=xt(r);kt(J,()=>bt.MeshBasicMaterial,(V,H)=>{H(V,{get color(){return Ee($)},get opacity(){return t()},transparent:!0})}),nt(Q,z)},Y=Q=>{var z=yt(),J=it(z);const $=xt(r);kt(J,()=>bt.MeshBasicMaterial,(V,H)=>{H(V,{get color(){return Ee($)}})}),nt(Q,z)};jt(ee,Q=>{t()<1?Q(W):Q(Y,!1)})}nt(I,G)},$$slots:{default:!0}})}),nt(M,T)},w=(M,T)=>{{var S=b=>{var U=yt(),I=it(U);const B=xt(()=>e.visual.geometry.size||[1,1,1]);kt(I,()=>bt.Mesh,(G,j)=>{j(G,{castShadow:!0,receiveShadow:!0,get scale(){return Ee(B)},onclick:o,children:(N,ee)=>{var W=GC(),Y=it(W);kt(Y,()=>bt.BoxGeometry,($,V)=>{V($,{})});var Q=cn(Y,2);{var z=$=>{var V=yt(),H=it(V);const K=xt(r);kt(H,()=>bt.MeshBasicMaterial,(q,re)=>{re(q,{get color(){return Ee(K)},get opacity(){return t()},transparent:!0})}),nt($,V)},J=$=>{var V=yt(),H=it(V);const K=xt(r);kt(H,()=>bt.MeshBasicMaterial,(q,re)=>{re(q,{get color(){return Ee(K)}})}),nt($,V)};jt(Q,$=>{t()<1?$(z):$(J,!1)})}nt(N,W)},$$slots:{default:!0}})}),nt(b,U)};jt(M,b=>{e.visual.type==="box"&&b(S)},T)}};jt(_,M=>{e.visual.type==="cylinder"?M(E):M(w,!1)})}nt(y,x)};jt(v,y=>{e.visual.type==="mesh"&&e.visual.geometry?y(m):y(g,!1)})}nt(d,p)},$$slots:{default:!0}})};jt(l,h=>{e.visual&&h(c)})}nt(s,a),Yn()}var VC=Wn("<!> <!> <!> <!> <!>",1);function __(s,e){Xn(e,!0);let t=He(e,"ondatachange",3,void 0);function i(){return e.link.collision&&e.link.collision.length>0?e.link.collision[0].origin_xyz:e.link.visual&&e.link.visual.length>0?e.link.visual[0].origin_xyz:[0,0,0]}var n=yt(),r=it(n);{var o=a=>{var l=VC(),c=it(l);mh(c,()=>`<!-- Link ${e.link.name} -->`);var h=cn(c,2);{var u=g=>{const y=xt(i);Kv(g,{get position(){return Ee(y)},children:(x,_)=>{const E=xt(()=>At.selectedLink==e.link?At.highlightColor:At.linkColor),w=xt(()=>g_(At.nameHeight));c_(x,{anchorY:-.2,get color(){return Ee(E)},get scale(){return Ee(w)},get text(){return e.link.name}})},$$slots:{default:!0}})};jt(h,g=>{At.linkNames&&g(u)})}var d=cn(h,2);{var f=g=>{var y=yt(),x=it(y);ua(x,17,()=>e.link.visual,da,(_,E)=>{kg(_,{get ondatachange(){return t()},get opacity(){return At.visualOpacity},get visual(){return Ee(E)},get link(){return e.link}})}),nt(g,y)};jt(d,g=>{At.visual&&g(f)})}var p=cn(d,2);{var v=g=>{var y=yt(),x=it(y);ua(x,17,()=>e.link.collision,da,(_,E)=>{kg(_,{get ondatachange(){return t()},get opacity(){return At.collisionOpacity},get visual(){return Ee(E)},get color(){return At.collisionColor},get link(){return e.link}})}),nt(g,y)};jt(p,g=>{At.collision&&g(v)})}var m=cn(p,2);ua(m,17,()=>FC(At.robot,e.link),da,(g,y)=>{KC(g,{get ondatachange(){return t()},get joint(){return Ee(y)}})}),nt(a,l)};jt(r,a=>{At.robot&&a(o)})}nt(s,n),Yn()}var HC=Wn("<!> <!>",1),WC=Wn("<!> <!>",1),XC=Wn("<!> <!>",1),YC=Wn("<!> <!>",1),qC=Wn("<!> <!>",1),jC=Wn("<!> <!> <!>",1),ZC=Wn("<!> <!>",1);function KC(s,e){Xn(e,!0);let t=He(e,"ondatachange",3,void 0),i=.7;const n=c=>{c.stopPropagation(),At.selectedLink=void 0,At.selectedJoint=e.joint};Zf();var r=ZC(),o=it(r);mh(o,()=>`<!-- Joint ${e.joint.name} (${e.joint.type}) -->`);var a=cn(o,2);{var l=c=>{var h=jC(),u=it(h);{var d=g=>{Kv(g,{get"position.x"(){return e.joint.origin_xyz[0]},get"position.y"(){return e.joint.origin_xyz[1]},get"position.z"(){return e.joint.origin_xyz[2]},children:(y,x)=>{const _=xt(()=>g_(At.nameHeight)),E=xt(()=>At.selectedJoint==e.joint?At.highlightColor:At.jointColor);c_(y,{get scale(){return Ee(_)},get color(){return Ee(E)},get text(){return e.joint.name}})},$$slots:{default:!0}})};jt(u,g=>{At.jointNames&&g(d)})}var f=cn(u,2);{var p=g=>{var y=yt(),x=it(y);kt(x,()=>bt.Line,(_,E)=>{E(_,{children:(w,M)=>{var T=HC(),S=it(T);const b=xt(()=>[new D(0,0,0),new D(e.joint.origin_xyz[0],e.joint.origin_xyz[1],e.joint.origin_xyz[2])]);mg(S,{get points(){return Ee(b)}});var U=cn(S,2);kt(U,()=>bt.LineBasicMaterial,(I,B)=>{B(I,{get color(){return At.jointColor}})}),nt(w,T)},$$slots:{default:!0}})}),nt(g,y)};jt(f,g=>{At.joints&&g(p)})}var v=cn(f,2);const m=xt(()=>At.selectedJoint==e.joint);v_(v,{get ondatachange(){return t()},get origin(){return e.joint},get selected(){return Ee(m)},children:(g,y)=>{var x=yt(),_=it(x);const E=xt(()=>e.joint.rotation||[0,0,0]);kt(_,()=>bt.Group,(w,M)=>{M(w,{get rotation(){return Ee(E)},children:(T,S)=>{var b=qC(),U=it(b);{var I=j=>{__(j,{get link(){return e.joint.child},get ondatachange(){return t()}})};jt(U,j=>{e.joint.child&&j(I)})}var B=cn(U,2);{var G=j=>{var N=YC(),ee=it(N);kt(ee,()=>bt.Line,(Y,Q)=>{Q(Y,{children:(z,J)=>{var $=WC(),V=it($);mg(V,{onclick:n,points:[new D(0,0,0),new D(0,-.02,0)]});var H=cn(V,2);kt(H,()=>bt.LineBasicMaterial,(K,q)=>{q(K,{get color(){return At.jointIndicatorColor}})}),nt(z,$)},$$slots:{default:!0}})});var W=cn(ee,2);kt(W,()=>bt.Mesh,(Y,Q)=>{Q(Y,{onclick:n,rotation:[Math.PI/2,0,0],children:(z,J)=>{var $=XC(),V=it($);kt(V,()=>bt.CylinderGeometry,(q,re)=>{re(q,{args:[.004,.004,.03]})});var H=cn(V,2);{var K=q=>{var re=yt(),be=it(re);const Se=xt(()=>At.selectedJoint==e.joint?At.highlightColor:At.jointColor);kt(be,()=>bt.MeshBasicMaterial,(Me,ye)=>{ye(Me,{get color(){return Ee(Se)},opacity:i,transparent:!0})}),nt(q,re)};jt(H,q=>{q(K)})}nt(z,$)},$$slots:{default:!0}})}),nt(j,N)};jt(B,j=>{At.joints&&j(G)})}nt(T,b)},$$slots:{default:!0}})}),nt(g,x)},$$slots:{default:!0}}),nt(c,h)};jt(a,c=>{At.robot&&c(l)})}nt(s,r),Yn()}function _R(s,e){Xn(e,!0);let t=He(e,"position",19,()=>[0,0,0]),i=He(e,"quaternion",19,()=>[0,0,0,1]),n=He(e,"ondatachange",3,void 0);var r=yt(),o=it(r);{var a=l=>{var c=yt(),h=it(c);kt(h,()=>bt.Group,(u,d)=>{d(u,{get position(){return t()},get quaternion(){return i()},children:(f,p)=>{var v=yt(),m=it(v);ua(m,17,()=>OC(At.robot),da,(g,y)=>{__(g,{get link(){return Ee(y)},get ondatachange(){return n()}})}),nt(f,v)},$$slots:{default:!0}})}),nt(l,c)};jt(o,l=>{At.robot&&l(a)})}nt(s,r),Yn()}export{aR as C,dR as G,fR as O,bt as T,gR as U,D as V,Iv as W,uR as a,oR as b,vR as c,_R as d,mR as e,Ut as f,FC as g,At as u};
